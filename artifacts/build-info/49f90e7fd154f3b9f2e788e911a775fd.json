{"id":"49f90e7fd154f3b9f2e788e911a775fd","_format":"hh-sol-build-info-1","solcVersion":"0.8.21","solcLongVersion":"0.8.21+commit.d9974bed","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/Farmer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ncontract Farmer{\n\n\n    IERC20 public vegrowwToken; // Declare the custom token interface\n    mapping(address => FarmerDetails) farmerDetailsMap;\n    constructor(address _tokenAddress) {\n        // Initialize the custom token contract\n        vegrowwToken = IERC20(_tokenAddress);\n    }\n\n\n    struct FarmerDetails{\n        address walletAddress;\n        uint32 rating;\n        uint numberOfRatings;\n    }\n\n\n    function checkAllowance(address owner, address spender) public view returns (uint256) {\n    // Check the allowance of the owner for the spender\n    return vegrowwToken.allowance(owner, spender);\n    }\n\n    //farmer actions\n    function transferTokensToFarmer(uint rewardAmount) public {\n        require(vegrowwToken.balanceOf(address(this)) >= rewardAmount, \"Insufficient funds\");\n        vegrowwToken.transfer(msg.sender, rewardAmount);\n    }\n\n    //farmer actions\n    function buyProducts(address vendorAddress, uint256 itemsCost) public {\n        address farmerAddress = msg.sender;\n        uint256 finalCost = itemsCost;\n        if (farmerDetailsMap[farmerAddress].rating == 5){\n            finalCost = (itemsCost * 10) / 100;\n        }\n        require(vegrowwToken.balanceOf(msg.sender) >= finalCost, \"Insufficient funds\");\n        vegrowwToken.transferFrom(farmerAddress,vendorAddress, finalCost);\n    }\n    // customer actions\n    function rateFarmer(address farmerAddress, uint32 rating) public view{\n        FarmerDetails memory thisFarmer = farmerDetailsMap[farmerAddress];\n        thisFarmer.numberOfRatings +=1;\n        thisFarmer.rating = uint32(thisFarmer.rating + rating)/ uint32(thisFarmer.numberOfRatings);\n    }\n\n    function getFarmerRating(address farmerAddress) public view returns(uint32){\n        return farmerDetailsMap[farmerAddress].rating;\n    }\n    // customer actions\n    function payFarmer(address farmerAddress, uint256 amount) public  {\n        address vendorAddress = msg.sender;\n        require(vegrowwToken.balanceOf(msg.sender) >= amount, \"Insufficient funds\");\n        vegrowwToken.transferFrom(vendorAddress,farmerAddress, amount);\n    }\n\n    //subscription\n\n    function subscribe(uint256 subscribtionAmount) public {\n        address subscriberAddress = msg.sender;\n        require(vegrowwToken.balanceOf(msg.sender) >= subscribtionAmount, \"Insufficient funds\");\n        vegrowwToken.transferFrom(subscriberAddress, address(this), subscribtionAmount);\n    }\n\n\n\n\n}"},"contracts/Storage.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n */\ncontract Storage {\n\n    uint256 number;\n\n    // Declaring an event\n    event StoreEvent(address owner); \n\n    /**\n     * @dev Store value in variable\n     * @param num value to store\n     */\n    function store(uint256 num) public {\n\n        // To demonstrate revert functionality\n        require(num < 100, \"Number must be < 100\");\n        \n\n        emit StoreEvent(msg.sender);\n        number = num;\n    }\n\n    /**\n     * @dev Return value \n     * @return value of 'number'\n     */\n    function retrieve() public view returns (uint256){\n        return number;\n    }\n}"},"contracts/VeGroww.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract VeGroww is ERC20, ERC20Permit {\n    constructor() ERC20(\"VeGroww\", \"VG\") ERC20Permit(\"VeGroww\") {\n        _mint(msg.sender, 1000 * 10 ** decimals());\n    }\n    \n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[24]},"id":25,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":24,"linearizedBaseContracts":[24],"name":"IERC5267","nameLocation":"143:8:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"158:84:0","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":4,"name":"EIP712DomainChanged","nameLocation":"253:19:0","nodeType":"EventDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"272:2:0"},"src":"247:28:0"},{"documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"281:140:0","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":23,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"447:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"fields","nameLocation":"517:6:0","nodeType":"VariableDeclaration","scope":23,"src":"510:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":7,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"name","nameLocation":"551:4:0","nodeType":"VariableDeclaration","scope":23,"src":"537:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"version","nameLocation":"583:7:0","nodeType":"VariableDeclaration","scope":23,"src":"569:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"chainId","nameLocation":"612:7:0","nodeType":"VariableDeclaration","scope":23,"src":"604:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:0","nodeType":"VariableDeclaration","scope":23,"src":"633:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"salt","nameLocation":"680:4:0","nodeType":"VariableDeclaration","scope":23,"src":"672:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"extensions","nameLocation":"715:10:0","nodeType":"VariableDeclaration","scope":23,"src":"698:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":20,"nodeType":"ArrayTypeName","src":"698:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:0"},"scope":24,"src":"426:310:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":25,"src":"133:605:0","usedErrors":[],"usedEvents":[4]}],"src":"107:632:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[161],"IERC20Errors":[66],"IERC721Errors":[114]},"id":162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":26,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":66,"linearizedBaseContracts":[66],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":36,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":36,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":36,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":36,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":41,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":41,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":46,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":46,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":55,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":55,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":55,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":55,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":60,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":60,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":65,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":65,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":162,"src":"278:1764:1","usedErrors":[36,41,46,55,60,65],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":114,"linearizedBaseContracts":[114],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":72,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":72,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":77,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":77,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":86,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":86,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":86,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":86,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":91,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":91,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":88,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":96,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":96,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":103,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":103,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":103,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":108,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":108,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":113,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":113,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":162,"src":"2186:2092:1","usedErrors":[72,77,86,91,96,103,108,113],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":161,"linearizedBaseContracts":[161],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":126,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":126,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":126,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":126,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":126,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":131,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":131,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":136,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":136,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":143,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":143,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":143,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":148,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":148,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":153,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":153,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":160,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":160,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":160,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":162,"src":"4424:2107:1","usedErrors":[126,131,136,143,148,153,160],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[992],"ERC20":[676],"IERC20":[754],"IERC20Errors":[66],"IERC20Metadata":[934]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":163,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":755,"src":"131:36:2","symbolAliases":[{"foreign":{"id":164,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":935,"src":"168:63:2","symbolAliases":[{"foreign":{"id":166,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":993,"src":"232:48:2","symbolAliases":[{"foreign":{"id":168,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":162,"src":"281:65:2","symbolAliases":[{"foreign":{"id":170,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":173,"name":"Context","nameLocations":["1428:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1428:7:2"},"id":174,"nodeType":"InheritanceSpecifier","src":"1428:7:2"},{"baseName":{"id":175,"name":"IERC20","nameLocations":["1437:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":754,"src":"1437:6:2"},"id":176,"nodeType":"InheritanceSpecifier","src":"1437:6:2"},{"baseName":{"id":177,"name":"IERC20Metadata","nameLocations":["1445:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":934,"src":"1445:14:2"},"id":178,"nodeType":"InheritanceSpecifier","src":"1445:14:2"},{"baseName":{"id":179,"name":"IERC20Errors","nameLocations":["1461:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"1461:12:2"},"id":180,"nodeType":"InheritanceSpecifier","src":"1461:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"348:1052:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,66,934,754,992],"name":"ERC20","nameLocation":"1419:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":184,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:2","nodeType":"VariableDeclaration","scope":676,"src":"1480:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":183,"keyName":"account","keyNameLocation":"1496:7:2","keyType":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":190,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:2","nodeType":"VariableDeclaration","scope":676,"src":"1540:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":189,"keyName":"account","keyNameLocation":"1556:7:2","keyType":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":188,"keyName":"spender","keyNameLocation":"1583:7:2","keyType":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":192,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:2","nodeType":"VariableDeclaration","scope":676,"src":"1630:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":194,"mutability":"mutable","name":"_name","nameLocation":"1680:5:2","nodeType":"VariableDeclaration","scope":676,"src":"1665:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":193,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":196,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:2","nodeType":"VariableDeclaration","scope":676,"src":"1691:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":195,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":212,"nodeType":"Block","src":"1952:57:2","statements":[{"expression":{"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":204,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1962:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":205,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"1970:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":207,"nodeType":"ExpressionStatement","src":"1962:13:2"},{"expression":{"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":208,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"1985:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":209,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1995:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":211,"nodeType":"ExpressionStatement","src":"1985:17:2"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"1720:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":213,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"name_","nameLocation":"1922:5:2","nodeType":"VariableDeclaration","scope":213,"src":"1908:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":198,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:2","nodeType":"VariableDeclaration","scope":213,"src":"1929:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:2"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"1952:0:2"},"scope":676,"src":"1896:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[921],"body":{"id":221,"nodeType":"Block","src":"2134:29:2","statements":[{"expression":{"id":219,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"2151:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":218,"id":220,"nodeType":"Return","src":"2144:12:2"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2015:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":222,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:2","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"2087:2:2"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"2119:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":216,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:2"},"scope":676,"src":"2074:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[927],"body":{"id":230,"nodeType":"Block","src":"2338:31:2","statements":[{"expression":{"id":228,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"2355:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":227,"id":229,"nodeType":"Return","src":"2348:14:2"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"2169:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":231,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:2","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"2291:2:2"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":231,"src":"2323:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":225,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:2"},"scope":676,"src":"2276:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[933],"body":{"id":239,"nodeType":"Block","src":"3058:26:2","statements":[{"expression":{"hexValue":"3138","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":236,"id":238,"nodeType":"Return","src":"3068:9:2"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"2375:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":240,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:2","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"3019:2:2"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"3051:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":234,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:2"},"scope":676,"src":"3002:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[703],"body":{"id":248,"nodeType":"Block","src":"3205:36:2","statements":[{"expression":{"id":246,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3222:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":245,"id":247,"nodeType":"Return","src":"3215:19:2"}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"3090:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":249,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:2","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"3164:2:2"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":249,"src":"3196:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:2"},"scope":676,"src":"3144:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[711],"body":{"id":261,"nodeType":"Block","src":"3373:42:2","statements":[{"expression":{"baseExpression":{"id":257,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"3390:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":259,"indexExpression":{"id":258,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"3400:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":256,"id":260,"nodeType":"Return","src":"3383:25:2"}]},"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"3247:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":262,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:2","nodeType":"FunctionDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"account","nameLocation":"3326:7:2","nodeType":"VariableDeclaration","scope":262,"src":"3318:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:2"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"3364:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:2"},"scope":676,"src":"3299:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[721],"body":{"id":285,"nodeType":"Block","src":"3685:103:2","statements":[{"assignments":[273],"declarations":[{"constant":false,"id":273,"mutability":"mutable","name":"owner","nameLocation":"3703:5:2","nodeType":"VariableDeclaration","scope":285,"src":"3695:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":276,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":274,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3711:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:2"},{"expression":{"arguments":[{"id":278,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3743:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":279,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"3750:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"3754:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":277,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"3733:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"3733:27:2"},{"expression":{"hexValue":"74727565","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":271,"id":284,"nodeType":"Return","src":"3770:11:2"}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"3421:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":286,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:2","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"to","nameLocation":"3636:2:2","nodeType":"VariableDeclaration","scope":286,"src":"3628:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"value","nameLocation":"3648:5:2","nodeType":"VariableDeclaration","scope":286,"src":"3640:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:2"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":286,"src":"3679:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":269,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:2"},"scope":676,"src":"3610:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[731],"body":{"id":302,"nodeType":"Block","src":"3935:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":296,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3952:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":298,"indexExpression":{"id":297,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"3964:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":300,"indexExpression":{"id":299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"3971:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":295,"id":301,"nodeType":"Return","src":"3945:34:2"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"3794:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":303,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:2","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"3873:5:2","nodeType":"VariableDeclaration","scope":303,"src":"3865:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"spender","nameLocation":"3888:7:2","nodeType":"VariableDeclaration","scope":303,"src":"3880:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:2"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":303,"src":"3926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:2"},"scope":676,"src":"3846:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[741],"body":{"id":326,"nodeType":"Block","src":"4372:107:2","statements":[{"assignments":[314],"declarations":[{"constant":false,"id":314,"mutability":"mutable","name":"owner","nameLocation":"4390:5:2","nodeType":"VariableDeclaration","scope":326,"src":"4382:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":317,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":315,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"4398:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:2"},{"expression":{"arguments":[{"id":319,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4429:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":320,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4436:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"4445:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":318,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[567,627],"referencedDeclaration":567,"src":"4420:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"4420:31:2"},{"expression":{"hexValue":"74727565","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":312,"id":325,"nodeType":"Return","src":"4461:11:2"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"3992:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":327,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:2","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"spender","nameLocation":"4318:7:2","nodeType":"VariableDeclaration","scope":327,"src":"4310:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"value","nameLocation":"4335:5:2","nodeType":"VariableDeclaration","scope":327,"src":"4327:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:2"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":327,"src":"4366:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":310,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:2"},"scope":676,"src":"4293:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[753],"body":{"id":358,"nodeType":"Block","src":"5132:151:2","statements":[{"assignments":[340],"declarations":[{"constant":false,"id":340,"mutability":"mutable","name":"spender","nameLocation":"5150:7:2","nodeType":"VariableDeclaration","scope":358,"src":"5142:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":343,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":341,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"5160:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:2"},{"expression":{"arguments":[{"id":345,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"5204:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"5213:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":344,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"5182:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"ExpressionStatement","src":"5182:37:2"},{"expression":{"arguments":[{"id":351,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5239:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":352,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5245:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"5249:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":350,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5229:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"5229:26:2"},{"expression":{"hexValue":"74727565","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":338,"id":357,"nodeType":"Return","src":"5265:11:2"}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"4485:549:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":359,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:2","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"from","nameLocation":"5069:4:2","nodeType":"VariableDeclaration","scope":359,"src":"5061:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"to","nameLocation":"5083:2:2","nodeType":"VariableDeclaration","scope":359,"src":"5075:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"value","nameLocation":"5095:5:2","nodeType":"VariableDeclaration","scope":359,"src":"5087:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:2"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":359,"src":"5126:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":336,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:2"},"scope":676,"src":"5039:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":405,"nodeType":"Block","src":"5725:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":369,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5739:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:2","typeDescriptions":{}}},"id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":383,"nodeType":"IfStatement","src":"5735:86:2","trueBody":{"id":382,"nodeType":"Block","src":"5759:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:2","typeDescriptions":{}}},"id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":375,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"5780:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"RevertStatement","src":"5773:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":384,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5834:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:2","typeDescriptions":{}}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":398,"nodeType":"IfStatement","src":"5830:86:2","trueBody":{"id":397,"nodeType":"Block","src":"5852:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:2","typeDescriptions":{}}},"id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":390,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"5873:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":396,"nodeType":"RevertStatement","src":"5866:39:2"}]}},{"expression":{"arguments":[{"id":400,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5933:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":401,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5939:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5943:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":399,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5925:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":404,"nodeType":"ExpressionStatement","src":"5925:24:2"}]},"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"5289:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":406,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:2","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"from","nameLocation":"5683:4:2","nodeType":"VariableDeclaration","scope":406,"src":"5675:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"to","nameLocation":"5697:2:2","nodeType":"VariableDeclaration","scope":406,"src":"5689:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"value","nameLocation":"5709:5:2","nodeType":"VariableDeclaration","scope":406,"src":"5701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"5725:0:2"},"scope":676,"src":"5656:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":482,"nodeType":"Block","src":"6346:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":416,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6360:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:2","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":453,"nodeType":"Block","src":"6534:362:2","statements":[{"assignments":[428],"declarations":[{"constant":false,"id":428,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:2","nodeType":"VariableDeclaration","scope":453,"src":"6548:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":432,"initialValue":{"baseExpression":{"id":429,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6570:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":431,"indexExpression":{"id":430,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6580:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"6603:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6617:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":443,"nodeType":"IfStatement","src":"6599:115:2","trueBody":{"id":442,"nodeType":"Block","src":"6624:90:2","statements":[{"errorCall":{"arguments":[{"id":437,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":438,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"6680:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6693:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":436,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"6649:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"RevertStatement","src":"6642:57:2"}]}},{"id":452,"nodeType":"UncheckedBlock","src":"6727:159:2","statements":[{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":444,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6834:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":446,"indexExpression":{"id":445,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"6844:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"6852:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6866:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":451,"nodeType":"ExpressionStatement","src":"6834:37:2"}]}]},"id":454,"nodeType":"IfStatement","src":"6356:540:2","trueBody":{"id":426,"nodeType":"Block","src":"6380:148:2","statements":[{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":422,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6496:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6512:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":425,"nodeType":"ExpressionStatement","src":"6496:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":455,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6910:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:2","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":474,"nodeType":"Block","src":"7125:206:2","statements":[{"id":473,"nodeType":"UncheckedBlock","src":"7139:182:2","statements":[{"expression":{"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":467,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"7284:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":469,"indexExpression":{"id":468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"7294:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"7301:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":472,"nodeType":"ExpressionStatement","src":"7284:22:2"}]}]},"id":475,"nodeType":"IfStatement","src":"6906:425:2","trueBody":{"id":466,"nodeType":"Block","src":"6928:191:2","statements":[{"id":465,"nodeType":"UncheckedBlock","src":"6942:167:2","statements":[{"expression":{"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":461,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"7073:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"7089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":464,"nodeType":"ExpressionStatement","src":"7073:21:2"}]}]}},{"eventCall":{"arguments":[{"id":477,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"7355:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"7361:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"7365:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":476,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"7346:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":481,"nodeType":"EmitStatement","src":"7341:30:2"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"5962:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":483,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:2","nodeType":"FunctionDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"from","nameLocation":"6296:4:2","nodeType":"VariableDeclaration","scope":483,"src":"6288:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"to","nameLocation":"6310:2:2","nodeType":"VariableDeclaration","scope":483,"src":"6302:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"value","nameLocation":"6322:5:2","nodeType":"VariableDeclaration","scope":483,"src":"6314:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:2"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"6346:0:2"},"scope":676,"src":"6271:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"7777:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"7791:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"IfStatement","src":"7787:91:2","trueBody":{"id":504,"nodeType":"Block","src":"7814:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:2","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7835:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"RevertStatement","src":"7828:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:2","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"7907:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"7916:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"7887:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"7887:35:2"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"7384:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:2","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"account","nameLocation":"7744:7:2","nodeType":"VariableDeclaration","scope":516,"src":"7736:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"value","nameLocation":"7761:5:2","nodeType":"VariableDeclaration","scope":516,"src":"7753:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:2"},"returnParameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"7777:0:2"},"scope":676,"src":"7721:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":548,"nodeType":"Block","src":"8303:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"8317:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:2","typeDescriptions":{}}},"id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"IfStatement","src":"8313:89:2","trueBody":{"id":537,"nodeType":"Block","src":"8340:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:2","typeDescriptions":{}}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"8361:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"RevertStatement","src":"8354:37:2"}]}},{"expression":{"arguments":[{"id":540,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"8419:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:2","typeDescriptions":{}}},"id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"8440:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":539,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"8411:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"ExpressionStatement","src":"8411:35:2"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"7935:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":549,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:2","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"account","nameLocation":"8270:7:2","nodeType":"VariableDeclaration","scope":549,"src":"8262:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"value","nameLocation":"8287:5:2","nodeType":"VariableDeclaration","scope":549,"src":"8279:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:2"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"8303:0:2"},"scope":676,"src":"8247:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":566,"nodeType":"Block","src":"9063:54:2","statements":[{"expression":{"arguments":[{"id":560,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"9082:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"9089:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"9098:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":559,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[567,627],"referencedDeclaration":627,"src":"9073:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"9073:37:2"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"8459:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:2","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"owner","nameLocation":"9015:5:2","nodeType":"VariableDeclaration","scope":567,"src":"9007:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"spender","nameLocation":"9030:7:2","nodeType":"VariableDeclaration","scope":567,"src":"9022:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"value","nameLocation":"9047:5:2","nodeType":"VariableDeclaration","scope":567,"src":"9039:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:2"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"9063:0:2"},"scope":676,"src":"8989:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":626,"nodeType":"Block","src":"10047:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"10061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:2","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":593,"nodeType":"IfStatement","src":"10057:89:2","trueBody":{"id":592,"nodeType":"Block","src":"10082:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:2","typeDescriptions":{}}},"id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":585,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"10103:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"RevertStatement","src":"10096:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":594,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"10159:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:2","typeDescriptions":{}}},"id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":608,"nodeType":"IfStatement","src":"10155:90:2","trueBody":{"id":607,"nodeType":"Block","src":"10182:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:2","typeDescriptions":{}}},"id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":600,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"10203:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":606,"nodeType":"RevertStatement","src":"10196:38:2"}]}},{"expression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":609,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"10254:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":612,"indexExpression":{"id":610,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"10266:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":613,"indexExpression":{"id":611,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"10273:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10284:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":616,"nodeType":"ExpressionStatement","src":"10254:35:2"},{"condition":{"id":617,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"10303:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":625,"nodeType":"IfStatement","src":"10299:76:2","trueBody":{"id":624,"nodeType":"Block","src":"10314:61:2","statements":[{"eventCall":{"arguments":[{"id":619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"10342:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"10349:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"10358:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":618,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10333:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"EmitStatement","src":"10328:36:2"}]}}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"9123:821:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":627,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:2","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"owner","nameLocation":"9975:5:2","nodeType":"VariableDeclaration","scope":627,"src":"9967:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"spender","nameLocation":"9990:7:2","nodeType":"VariableDeclaration","scope":627,"src":"9982:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"value","nameLocation":"10007:5:2","nodeType":"VariableDeclaration","scope":627,"src":"9999:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:2","nodeType":"VariableDeclaration","scope":627,"src":"10014:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":575,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:2"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"10047:0:2"},"scope":676,"src":"9949:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"10752:388:2","statements":[{"assignments":[638],"declarations":[{"constant":false,"id":638,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:2","nodeType":"VariableDeclaration","scope":674,"src":"10762:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":643,"initialValue":{"arguments":[{"id":640,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"10799:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"10806:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":639,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"10789:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10828:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":645,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:2","memberName":"max","nodeType":"MemberAccess","src":"10848:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":673,"nodeType":"IfStatement","src":"10824:310:2","trueBody":{"id":672,"nodeType":"Block","src":"10867:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":651,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10885:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"10904:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"10881:130:2","trueBody":{"id":660,"nodeType":"Block","src":"10911:100:2","statements":[{"errorCall":{"arguments":[{"id":655,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"10963:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":656,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10972:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"10990:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"10936:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"10929:67:2"}]}},{"id":671,"nodeType":"UncheckedBlock","src":"11024:100:2","statements":[{"expression":{"arguments":[{"id":663,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"11061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":664,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"11068:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":665,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11077:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"11096:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":662,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[567,627],"referencedDeclaration":627,"src":"11052:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"11052:57:2"}]}]}}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"10387:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:2","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"owner","nameLocation":"10696:5:2","nodeType":"VariableDeclaration","scope":675,"src":"10688:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"spender","nameLocation":"10711:7:2","nodeType":"VariableDeclaration","scope":675,"src":"10703:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"value","nameLocation":"10728:5:2","nodeType":"VariableDeclaration","scope":675,"src":"10720:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:2"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"10752:0:2"},"scope":676,"src":"10663:477:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":677,"src":"1401:9741:2","usedErrors":[36,41,46,55,60,65],"usedEvents":[688,697]}],"src":"105:11038:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[754]},"id":755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"132:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":754,"linearizedBaseContracts":[754],"name":"IERC20","nameLocation":"213:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"226:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":688,"name":"Transfer","nameLocation":"395:8:3","nodeType":"EventDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:3","nodeType":"VariableDeclaration","scope":688,"src":"404:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:3","nodeType":"VariableDeclaration","scope":688,"src":"426:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:3","nodeType":"VariableDeclaration","scope":688,"src":"446:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:3"},"src":"389:72:3"},{"anonymous":false,"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"467:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":697,"name":"Approval","nameLocation":"626:8:3","nodeType":"EventDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:3","nodeType":"VariableDeclaration","scope":697,"src":"635:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:3","nodeType":"VariableDeclaration","scope":697,"src":"658:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:3","nodeType":"VariableDeclaration","scope":697,"src":"683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:3"},"src":"620:78:3"},{"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"704:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":703,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":754,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"835:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":711,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:3","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"account","nameLocation":"938:7:3","nodeType":"VariableDeclaration","scope":711,"src":"930:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:3"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"970:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:3"},"scope":754,"src":"911:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"985:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":721,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:3","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"to","nameLocation":"1229:2:3","nodeType":"VariableDeclaration","scope":721,"src":"1221:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"value","nameLocation":"1241:5:3","nodeType":"VariableDeclaration","scope":721,"src":"1233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:3"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":721,"src":"1266:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":718,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:3"},"scope":754,"src":"1203:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"1278:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":731,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:3","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"owner","nameLocation":"1574:5:3","nodeType":"VariableDeclaration","scope":731,"src":"1566:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"spender","nameLocation":"1589:7:3","nodeType":"VariableDeclaration","scope":731,"src":"1581:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:3"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"1621:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:3"},"scope":754,"src":"1547:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"1636:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":741,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:3","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"spender","nameLocation":"2333:7:3","nodeType":"VariableDeclaration","scope":741,"src":"2325:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"value","nameLocation":"2350:5:3","nodeType":"VariableDeclaration","scope":741,"src":"2342:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:3"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":741,"src":"2375:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":738,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:3"},"scope":754,"src":"2308:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"2387:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":753,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:3","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"from","nameLocation":"2719:4:3","nodeType":"VariableDeclaration","scope":753,"src":"2711:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"to","nameLocation":"2733:2:3","nodeType":"VariableDeclaration","scope":753,"src":"2725:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"value","nameLocation":"2745:5:3","nodeType":"VariableDeclaration","scope":753,"src":"2737:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:3"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"2770:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":750,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:3"},"scope":754,"src":"2689:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":755,"src":"203:2575:3","usedErrors":[],"usedEvents":[688,697]}],"src":"106:2673:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[1990],"EIP712":[2217],"ERC20":[676],"ERC20Permit":[908],"IERC20Permit":[970],"Nonces":[1060]},"id":909,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":756,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":758,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":971,"src":"148:48:4","symbolAliases":[{"foreign":{"id":757,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"156:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":760,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":677,"src":"197:35:4","symbolAliases":[{"foreign":{"id":759,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"205:5:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":762,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":1991,"src":"233:60:4","symbolAliases":[{"foreign":{"id":761,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"241:5:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":764,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":2218,"src":"294:62:4","symbolAliases":[{"foreign":{"id":763,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"302:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":766,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":909,"sourceUnit":1061,"src":"357:49:4","symbolAliases":[{"foreign":{"id":765,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"365:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":768,"name":"ERC20","nameLocations":["929:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"929:5:4"},"id":769,"nodeType":"InheritanceSpecifier","src":"929:5:4"},{"baseName":{"id":770,"name":"IERC20Permit","nameLocations":["936:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":970,"src":"936:12:4"},"id":771,"nodeType":"InheritanceSpecifier","src":"936:12:4"},{"baseName":{"id":772,"name":"EIP712","nameLocations":["950:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2217,"src":"950:6:4"},"id":773,"nodeType":"InheritanceSpecifier","src":"950:6:4"},{"baseName":{"id":774,"name":"Nonces","nameLocations":["958:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1060,"src":"958:6:4"},"id":775,"nodeType":"InheritanceSpecifier","src":"958:6:4"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"408:487:4","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":908,"linearizedBaseContracts":[908,1060,2217,24,970,676,66,934,754,992],"name":"ERC20Permit","nameLocation":"914:11:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":780,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:4","nodeType":"VariableDeclaration","scope":908,"src":"971:146:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":777,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"1124:52:4","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":785,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:4","nodeType":"ErrorDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:4","nodeType":"VariableDeclaration","scope":785,"src":"1211:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:4"},"src":"1181:48:4"},{"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"1235:45:4","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":792,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:4","nodeType":"ErrorDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"signer","nameLocation":"1320:6:4","nodeType":"VariableDeclaration","scope":792,"src":"1312:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"owner","nameLocation":"1336:5:4","nodeType":"VariableDeclaration","scope":792,"src":"1328:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:4"},"src":"1285:58:4"},{"body":{"id":802,"nodeType":"Block","src":"1624:2:4","statements":[]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"1349:220:4","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":803,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":798,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"1613:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":800,"kind":"baseConstructorSpecifier","modifierName":{"id":797,"name":"EIP712","nameLocations":["1606:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2217,"src":"1606:6:4"},"nodeType":"ModifierInvocation","src":"1606:17:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"name","nameLocation":"1600:4:4","nodeType":"VariableDeclaration","scope":803,"src":"1586:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":794,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:4"},"returnParameters":{"id":801,"nodeType":"ParameterList","parameters":[],"src":"1624:0:4"},"scope":908,"src":"1574:52:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[955],"body":{"id":879,"nodeType":"Block","src":"1869:483:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":821,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":823,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1901:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":830,"nodeType":"IfStatement","src":"1879:97:4","trueBody":{"id":829,"nodeType":"Block","src":"1911:65:4","statements":[{"errorCall":{"arguments":[{"id":826,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1956:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":825,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"1932:23:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":828,"nodeType":"RevertStatement","src":"1925:40:4"}]}},{"assignments":[832],"declarations":[{"constant":false,"id":832,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:4","nodeType":"VariableDeclaration","scope":879,"src":"1986:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":846,"initialValue":{"arguments":[{"arguments":[{"id":836,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"2028:15:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":837,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2045:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2052:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2061:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":841,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2078:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":840,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2068:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":843,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2086:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":834,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:4","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":833,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:4"},{"assignments":[848],"declarations":[{"constant":false,"id":848,"mutability":"mutable","name":"hash","nameLocation":"2115:4:4","nodeType":"VariableDeclaration","scope":879,"src":"2107:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":852,"initialValue":{"arguments":[{"id":850,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2139:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":849,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"2122:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:4"},{"assignments":[854],"declarations":[{"constant":false,"id":854,"mutability":"mutable","name":"signer","nameLocation":"2169:6:4","nodeType":"VariableDeclaration","scope":879,"src":"2161:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":862,"initialValue":{"arguments":[{"id":857,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2192:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":858,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2198:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":859,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"2201:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":860,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2204:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":855,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2178:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1990_$","typeString":"type(library ECDSA)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:4","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1940,"src":"2178:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":863,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2220:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":864,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2230:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":872,"nodeType":"IfStatement","src":"2216:88:4","trueBody":{"id":871,"nodeType":"Block","src":"2237:67:4","statements":[{"errorCall":{"arguments":[{"id":867,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2279:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2287:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":866,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"2258:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"RevertStatement","src":"2251:42:4"}]}},{"expression":{"arguments":[{"id":874,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2323:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2330:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2339:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":873,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[567,627],"referencedDeclaration":567,"src":"2314:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"2314:31:4"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"1632:43:4","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":880,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:4","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"owner","nameLocation":"1713:5:4","nodeType":"VariableDeclaration","scope":880,"src":"1705:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"spender","nameLocation":"1736:7:4","nodeType":"VariableDeclaration","scope":880,"src":"1728:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"value","nameLocation":"1761:5:4","nodeType":"VariableDeclaration","scope":880,"src":"1753:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:4","nodeType":"VariableDeclaration","scope":880,"src":"1776:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"v","nameLocation":"1808:1:4","nodeType":"VariableDeclaration","scope":880,"src":"1802:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":813,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"r","nameLocation":"1827:1:4","nodeType":"VariableDeclaration","scope":880,"src":"1819:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"s","nameLocation":"1846:1:4","nodeType":"VariableDeclaration","scope":880,"src":"1838:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:4"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[],"src":"1869:0:4"},"scope":908,"src":"1680:672:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[963,1019],"body":{"id":896,"nodeType":"Block","src":"2506:43:4","statements":[{"expression":{"arguments":[{"id":893,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"2536:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":891,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$908_$","typeString":"type(contract super ERC20Permit)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1019,"src":"2523:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":890,"id":895,"nodeType":"Return","src":"2516:26:4"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"2358:43:4","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":897,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:4","nodeType":"FunctionDefinition","overrides":{"id":887,"nodeType":"OverrideSpecifier","overrides":[{"id":885,"name":"IERC20Permit","nameLocations":["2466:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":970,"src":"2466:12:4"},{"id":886,"name":"Nonces","nameLocations":["2480:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1060,"src":"2480:6:4"}],"src":"2457:30:4"},"parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"owner","nameLocation":"2430:5:4","nodeType":"VariableDeclaration","scope":897,"src":"2422:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:4"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":897,"src":"2497:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:4"},"scope":908,"src":"2406:143:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[969],"body":{"id":906,"nodeType":"Block","src":"2724:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":903,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"2741:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":902,"id":905,"nodeType":"Return","src":"2734:27:4"}]},"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"2555:43:4","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:4","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"2681:2:4"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"2715:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:4"},"scope":908,"src":"2656:112:4","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":909,"src":"896:1874:4","usedErrors":[36,41,46,55,60,65,785,792,1002,1074,1076,1653,1658,1663],"usedEvents":[4,688,697]}],"src":"122:2649:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[754],"IERC20Metadata":[934]},"id":935,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":910,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":935,"sourceUnit":755,"src":"151:37:5","symbolAliases":[{"foreign":{"id":911,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"159:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":914,"name":"IERC20","nameLocations":["305:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":754,"src":"305:6:5"},"id":915,"nodeType":"InheritanceSpecifier","src":"305:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"190:86:5","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":934,"linearizedBaseContracts":[934,754],"name":"IERC20Metadata","nameLocation":"287:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"318:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":921,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"390:2:5"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"416:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":918,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:5"},"scope":934,"src":"377:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"437:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":927,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"513:2:5"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":927,"src":"539:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":924,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:5"},"scope":934,"src":"498:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"560:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":933,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:5","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[],"src":"647:2:5"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"673:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":930,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:5"},"scope":934,"src":"630:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":935,"src":"277:405:5","usedErrors":[],"usedEvents":[688,697]}],"src":"125:558:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[970]},"id":971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":936,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"149:1963:6","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":970,"linearizedBaseContracts":[970],"name":"IERC20Permit","nameLocation":"2123:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"2142:850:6","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":955,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:6","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"owner","nameLocation":"3030:5:6","nodeType":"VariableDeclaration","scope":955,"src":"3022:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"spender","nameLocation":"3053:7:6","nodeType":"VariableDeclaration","scope":955,"src":"3045:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"value","nameLocation":"3078:5:6","nodeType":"VariableDeclaration","scope":955,"src":"3070:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:6","nodeType":"VariableDeclaration","scope":955,"src":"3093:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"v","nameLocation":"3125:1:6","nodeType":"VariableDeclaration","scope":955,"src":"3119:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":947,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"r","nameLocation":"3144:1:6","nodeType":"VariableDeclaration","scope":955,"src":"3136:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"s","nameLocation":"3163:1:6","nodeType":"VariableDeclaration","scope":955,"src":"3155:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"3179:0:6"},"scope":970,"src":"2997:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"3186:294:6","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":963,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:6","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"owner","nameLocation":"3509:5:6","nodeType":"VariableDeclaration","scope":963,"src":"3501:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:6"},"returnParameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":963,"src":"3539:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:6"},"scope":970,"src":"3485:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"3554:128:6","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":969,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:6","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"3765:2:6"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":969,"src":"3791:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:6"},"scope":970,"src":"3740:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":971,"src":"2113:1689:6","usedErrors":[],"usedEvents":[]}],"src":"123:3680:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[992]},"id":993,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":972,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"127:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":992,"linearizedBaseContracts":[992],"name":"Context","nameLocation":"642:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":981,"nodeType":"Block","src":"718:34:7","statements":[{"expression":{"expression":{"id":978,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:7","memberName":"sender","nodeType":"MemberAccess","src":"735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":977,"id":980,"nodeType":"Return","src":"728:17:7"}]},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:7","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[],"src":"675:2:7"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"709:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:7"},"scope":992,"src":"656:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"825:32:7","statements":[{"expression":{"expression":{"id":987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:7","memberName":"data","nodeType":"MemberAccess","src":"842:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":986,"id":989,"nodeType":"Return","src":"835:15:7"}]},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:7","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"775:2:7"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"809:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":984,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:7"},"scope":992,"src":"758:99:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":993,"src":"624:235:7","usedErrors":[],"usedEvents":[]}],"src":"101:759:7"},"id":7},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1060]},"id":1061,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":994,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"125:83:8","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1060,"linearizedBaseContracts":[1060],"name":"Nonces","nameLocation":"227:6:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"240:90:8","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1002,"name":"InvalidAccountNonce","nameLocation":"341:19:8","nodeType":"ErrorDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"account","nameLocation":"369:7:8","nodeType":"VariableDeclaration","scope":1002,"src":"361:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:8","nodeType":"VariableDeclaration","scope":1002,"src":"378:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:8"},"src":"335:65:8"},{"constant":false,"id":1006,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:8","nodeType":"VariableDeclaration","scope":1060,"src":"406:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1005,"keyName":"account","keyNameLocation":"422:7:8","keyType":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1018,"nodeType":"Block","src":"607:38:8","statements":[{"expression":{"baseExpression":{"id":1014,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"624:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1016,"indexExpression":{"id":1015,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"632:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1013,"id":1017,"nodeType":"Return","src":"617:21:8"}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"464:69:8","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1019,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:8","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"owner","nameLocation":"562:5:8","nodeType":"VariableDeclaration","scope":1019,"src":"554:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:8"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1019,"src":"598:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:8"},"scope":1060,"src":"538:107:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1033,"nodeType":"Block","src":"828:326:8","statements":[{"id":1032,"nodeType":"UncheckedBlock","src":"1031:117:8","statements":[{"expression":{"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:8","subExpression":{"baseExpression":{"id":1027,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1121:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1029,"indexExpression":{"id":1028,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"1129:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1026,"id":1031,"nodeType":"Return","src":"1114:23:8"}]}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"651:103:8","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:8","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"owner","nameLocation":"786:5:8","nodeType":"VariableDeclaration","scope":1034,"src":"778:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:8"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"819:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:8"},"scope":1060,"src":"759:395:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1058,"nodeType":"Block","src":"1338:149:8","statements":[{"assignments":[1043],"declarations":[{"constant":false,"id":1043,"mutability":"mutable","name":"current","nameLocation":"1356:7:8","nodeType":"VariableDeclaration","scope":1058,"src":"1348:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1047,"initialValue":{"arguments":[{"id":1045,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1376:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1044,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"1366:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1396:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1049,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1405:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1057,"nodeType":"IfStatement","src":"1392:89:8","trueBody":{"id":1056,"nodeType":"Block","src":"1414:67:8","statements":[{"errorCall":{"arguments":[{"id":1052,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1455:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1462:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1051,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"1435:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"RevertStatement","src":"1428:42:8"}]}}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"1160:100:8","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:8","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"owner","nameLocation":"1299:5:8","nodeType":"VariableDeclaration","scope":1059,"src":"1291:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:8","nodeType":"VariableDeclaration","scope":1059,"src":"1306:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:8"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"1338:0:8"},"scope":1060,"src":"1265:222:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1061,"src":"209:1280:8","usedErrors":[1002],"usedEvents":[]}],"src":"99:1391:8"},"id":8},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1066],"ShortStrings":[1277],"StorageSlot":[1387]},"id":1278,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1062,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1064,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1278,"sourceUnit":1388,"src":"132:46:9","symbolAliases":[{"foreign":{"id":1063,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"140:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1066,"name":"ShortString","nameLocation":"353:11:9","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:9","underlyingType":{"id":1065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"378:876:9","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1277,"linearizedBaseContracts":[1277],"name":"ShortStrings","nameLocation":"1263:12:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1070,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:9","nodeType":"VariableDeclaration","scope":1277,"src":"1345:111:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1074,"name":"StringTooLong","nameLocation":"1469:13:9","nodeType":"ErrorDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"str","nameLocation":"1490:3:9","nodeType":"VariableDeclaration","scope":1074,"src":"1483:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1071,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:9"},"src":"1463:32:9"},{"errorSelector":"b3512b0c","id":1076,"name":"InvalidShortString","nameLocation":"1506:18:9","nodeType":"ErrorDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[],"src":"1524:2:9"},"src":"1500:27:9"},{"body":{"id":1119,"nodeType":"Block","src":"1786:208:9","statements":[{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:9","nodeType":"VariableDeclaration","scope":1119,"src":"1796:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1085,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1091,"initialValue":{"arguments":[{"id":1089,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1822:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1087,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:9","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1092,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"1840:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:9","memberName":"length","nodeType":"MemberAccess","src":"1840:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:9","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"1836:72:9","trueBody":{"id":1100,"nodeType":"Block","src":"1858:50:9","statements":[{"errorCall":{"arguments":[{"id":1097,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1893:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1096,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"1879:13:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"RevertStatement","src":"1872:25:9"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1110,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"1965:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:9","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:9","typeDescriptions":{}}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1113,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"1974:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:9","memberName":"length","nodeType":"MemberAccess","src":"1974:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:9","typeDescriptions":{}}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1102,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"1924:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"type(ShortString)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:9","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:9","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"functionReturnParameters":1084,"id":1118,"nodeType":"Return","src":"1917:70:9"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"1533:170:9","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:9","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"str","nameLocation":"1745:3:9","nodeType":"VariableDeclaration","scope":1120,"src":"1731:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1078,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:9"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"1773:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"},"typeName":{"id":1082,"nodeType":"UserDefinedTypeName","pathNode":{"id":1081,"name":"ShortString","nameLocations":["1773:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"1773:11:9"},"referencedDeclaration":1066,"src":"1773:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:9"},"scope":1277,"src":"1708:286:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1145,"nodeType":"Block","src":"2152:331:9","statements":[{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"len","nameLocation":"2170:3:9","nodeType":"VariableDeclaration","scope":1145,"src":"2162:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1134,"initialValue":{"arguments":[{"id":1132,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2187:4:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}],"id":1131,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"2176:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1066_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:9"},{"assignments":[1136],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"str","nameLocation":"2294:3:9","nodeType":"VariableDeclaration","scope":1145,"src":"2280:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1135,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1141,"initialValue":{"arguments":[{"hexValue":"3332","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1137,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:9"},{"AST":{"nativeSrc":"2376:81:9","nodeType":"YulBlock","src":"2376:81:9","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:9","nodeType":"YulIdentifier","src":"2397:3:9"},{"name":"len","nativeSrc":"2402:3:9","nodeType":"YulIdentifier","src":"2402:3:9"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:9","nodeType":"YulIdentifier","src":"2390:6:9"},"nativeSrc":"2390:16:9","nodeType":"YulFunctionCall","src":"2390:16:9"},"nativeSrc":"2390:16:9","nodeType":"YulExpressionStatement","src":"2390:16:9"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:9","nodeType":"YulIdentifier","src":"2430:3:9"},{"kind":"number","nativeSrc":"2435:4:9","nodeType":"YulLiteral","src":"2435:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:9","nodeType":"YulIdentifier","src":"2426:3:9"},"nativeSrc":"2426:14:9","nodeType":"YulFunctionCall","src":"2426:14:9"},{"name":"sstr","nativeSrc":"2442:4:9","nodeType":"YulIdentifier","src":"2442:4:9"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:9","nodeType":"YulIdentifier","src":"2419:6:9"},"nativeSrc":"2419:28:9","nodeType":"YulFunctionCall","src":"2419:28:9"},"nativeSrc":"2419:28:9","nodeType":"YulExpressionStatement","src":"2419:28:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1130,"isOffset":false,"isSlot":false,"src":"2402:3:9","valueSize":1},{"declaration":1124,"isOffset":false,"isSlot":false,"src":"2442:4:9","valueSize":1},{"declaration":1136,"isOffset":false,"isSlot":false,"src":"2397:3:9","valueSize":1},{"declaration":1136,"isOffset":false,"isSlot":false,"src":"2430:3:9","valueSize":1}],"id":1142,"nodeType":"InlineAssembly","src":"2367:90:9"},{"expression":{"id":1143,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2473:3:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1128,"id":1144,"nodeType":"Return","src":"2466:10:9"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"2000:73:9","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1146,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:9","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:9","nodeType":"VariableDeclaration","scope":1146,"src":"2096:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"},"typeName":{"id":1123,"nodeType":"UserDefinedTypeName","pathNode":{"id":1122,"name":"ShortString","nameLocations":["2096:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"2096:11:9"},"referencedDeclaration":1066,"src":"2096:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:9"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1146,"src":"2137:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1126,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:9"},"scope":1277,"src":"2078:405:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1177,"nodeType":"Block","src":"2625:175:9","statements":[{"assignments":[1156],"declarations":[{"constant":false,"id":1156,"mutability":"mutable","name":"result","nameLocation":"2643:6:9","nodeType":"VariableDeclaration","scope":1177,"src":"2635:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1166,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1161,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"2679:4:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}],"expression":{"id":1159,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"2660:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"type(ShortString)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:9","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:9","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1066_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:9","typeDescriptions":{}}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2706:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:9","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1174,"nodeType":"IfStatement","src":"2702:69:9","trueBody":{"id":1173,"nodeType":"Block","src":"2719:52:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1170,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2740:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1172,"nodeType":"RevertStatement","src":"2733:27:9"}]}},{"expression":{"id":1175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2787:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1154,"id":1176,"nodeType":"Return","src":"2780:13:9"}]},"documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"2489:61:9","text":" @dev Return the length of a `ShortString`."},"id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:9","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:9","nodeType":"VariableDeclaration","scope":1178,"src":"2575:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"},"typeName":{"id":1149,"nodeType":"UserDefinedTypeName","pathNode":{"id":1148,"name":"ShortString","nameLocations":["2575:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"2575:11:9"},"referencedDeclaration":1066,"src":"2575:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:9"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1178,"src":"2616:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:9"},"scope":1277,"src":"2555:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1217,"nodeType":"Block","src":"3023:231:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"3043:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1189,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:9","typeDescriptions":{}}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:9","memberName":"length","nodeType":"MemberAccess","src":"3037:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1215,"nodeType":"Block","src":"3121:127:9","statements":[{"expression":{"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1204,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"3161:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1201,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"3135:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1387_$","typeString":"type(library StorageSlot)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:9","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1364,"src":"3135:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1295_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1295_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1294,"src":"3135:38:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"3176:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1209,"nodeType":"ExpressionStatement","src":"3135:46:9"},{"expression":{"arguments":[{"id":1212,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"3219:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1210,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"3202:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"type(ShortString)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:9","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:9","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"functionReturnParameters":1188,"id":1214,"nodeType":"Return","src":"3195:42:9"}]},"id":1216,"nodeType":"IfStatement","src":"3033:215:9","trueBody":{"id":1200,"nodeType":"Block","src":"3063:52:9","statements":[{"expression":{"arguments":[{"id":1197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"3098:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1196,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"3084:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"functionReturnParameters":1188,"id":1199,"nodeType":"Return","src":"3077:27:9"}]}}]},"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"2806:103:9","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1218,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:9","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"value","nameLocation":"2963:5:9","nodeType":"VariableDeclaration","scope":1218,"src":"2949:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1180,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"store","nameLocation":"2985:5:9","nodeType":"VariableDeclaration","scope":1218,"src":"2970:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1182,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:9"},"returnParameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"3010:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"},"typeName":{"id":1186,"nodeType":"UserDefinedTypeName","pathNode":{"id":1185,"name":"ShortString","nameLocations":["3010:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"3010:11:9"},"referencedDeclaration":1066,"src":"3010:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:9"},"scope":1277,"src":"2914:340:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1244,"nodeType":"Block","src":"3494:158:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3527:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}],"expression":{"id":1229,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"3508:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"type(ShortString)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:9","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:9","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1066_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1233,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"3537:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1242,"nodeType":"Block","src":"3609:37:9","statements":[{"expression":{"id":1240,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3630:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1228,"id":1241,"nodeType":"Return","src":"3623:12:9"}]},"id":1243,"nodeType":"IfStatement","src":"3504:142:9","trueBody":{"id":1239,"nodeType":"Block","src":"3556:47:9","statements":[{"expression":{"arguments":[{"id":1236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3586:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}],"id":1235,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3577:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1066_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1228,"id":1238,"nodeType":"Return","src":"3570:22:9"}]}}]},"documentation":{"id":1219,"nodeType":"StructuredDocumentation","src":"3260:120:9","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:9","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"value","nameLocation":"3427:5:9","nodeType":"VariableDeclaration","scope":1245,"src":"3415:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"},"typeName":{"id":1221,"nodeType":"UserDefinedTypeName","pathNode":{"id":1220,"name":"ShortString","nameLocations":["3415:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"3415:11:9"},"referencedDeclaration":1066,"src":"3415:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1224,"mutability":"mutable","name":"store","nameLocation":"3449:5:9","nodeType":"VariableDeclaration","scope":1245,"src":"3434:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1223,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:9"},"returnParameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1245,"src":"3479:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1226,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:9"},"scope":1277,"src":"3385:267:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"4132:174:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4165:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}],"expression":{"id":1256,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"4146:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"type(ShortString)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:9","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:9","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1066_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1260,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4175:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1273,"nodeType":"Block","src":"4249:51:9","statements":[{"expression":{"expression":{"arguments":[{"id":1269,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"4276:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1267,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:9","typeDescriptions":{}}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:9","memberName":"length","nodeType":"MemberAccess","src":"4270:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1255,"id":1272,"nodeType":"Return","src":"4263:26:9"}]},"id":1274,"nodeType":"IfStatement","src":"4142:158:9","trueBody":{"id":1266,"nodeType":"Block","src":"4194:49:9","statements":[{"expression":{"arguments":[{"id":1263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4226:5:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}],"id":1262,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4215:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1066_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1255,"id":1265,"nodeType":"Return","src":"4208:24:9"}]}}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"3658:364:9","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:9","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"4071:5:9","nodeType":"VariableDeclaration","scope":1276,"src":"4059:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"},"typeName":{"id":1248,"nodeType":"UserDefinedTypeName","pathNode":{"id":1247,"name":"ShortString","nameLocations":["4059:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"4059:11:9"},"referencedDeclaration":1066,"src":"4059:11:9","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"store","nameLocation":"4093:5:9","nodeType":"VariableDeclaration","scope":1276,"src":"4078:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1250,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:9"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"4123:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:9"},"scope":1277,"src":"4027:279:9","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1278,"src":"1255:3053:9","usedErrors":[1074,1076],"usedEvents":[]}],"src":"106:4203:9"},"id":9},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1387]},"id":1388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1279,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"219:1025:10","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1387,"linearizedBaseContracts":[1387],"name":"StorageSlot","nameLocation":"1253:11:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1283,"members":[{"constant":false,"id":1282,"mutability":"mutable","name":"value","nameLocation":"1308:5:10","nodeType":"VariableDeclaration","scope":1283,"src":"1300:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:10","nodeType":"StructDefinition","scope":1387,"src":"1271:49:10","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1286,"members":[{"constant":false,"id":1285,"mutability":"mutable","name":"value","nameLocation":"1360:5:10","nodeType":"VariableDeclaration","scope":1286,"src":"1355:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1284,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:10","nodeType":"StructDefinition","scope":1387,"src":"1326:46:10","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1289,"members":[{"constant":false,"id":1288,"mutability":"mutable","name":"value","nameLocation":"1415:5:10","nodeType":"VariableDeclaration","scope":1289,"src":"1407:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:10","nodeType":"StructDefinition","scope":1387,"src":"1378:49:10","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1292,"members":[{"constant":false,"id":1291,"mutability":"mutable","name":"value","nameLocation":"1470:5:10","nodeType":"VariableDeclaration","scope":1292,"src":"1462:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:10","nodeType":"StructDefinition","scope":1387,"src":"1433:49:10","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1295,"members":[{"constant":false,"id":1294,"mutability":"mutable","name":"value","nameLocation":"1523:5:10","nodeType":"VariableDeclaration","scope":1295,"src":"1516:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1293,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:10","nodeType":"StructDefinition","scope":1387,"src":"1488:47:10","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1298,"members":[{"constant":false,"id":1297,"mutability":"mutable","name":"value","nameLocation":"1574:5:10","nodeType":"VariableDeclaration","scope":1298,"src":"1568:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1296,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:10","nodeType":"StructDefinition","scope":1387,"src":"1541:45:10","visibility":"public"},{"body":{"id":1308,"nodeType":"Block","src":"1768:106:10","statements":[{"AST":{"nativeSrc":"1830:38:10","nodeType":"YulBlock","src":"1830:38:10","statements":[{"nativeSrc":"1844:14:10","nodeType":"YulAssignment","src":"1844:14:10","value":{"name":"slot","nativeSrc":"1854:4:10","nodeType":"YulIdentifier","src":"1854:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:10","nodeType":"YulIdentifier","src":"1844:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1305,"isOffset":false,"isSlot":true,"src":"1844:6:10","suffix":"slot","valueSize":1},{"declaration":1301,"isOffset":false,"isSlot":false,"src":"1854:4:10","valueSize":1}],"id":1307,"nodeType":"InlineAssembly","src":"1821:47:10"}]},"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"1592:87:10","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1309,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:10","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"slot","nameLocation":"1716:4:10","nodeType":"VariableDeclaration","scope":1309,"src":"1708:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:10"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"r","nameLocation":"1765:1:10","nodeType":"VariableDeclaration","scope":1309,"src":"1745:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1283_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1304,"nodeType":"UserDefinedTypeName","pathNode":{"id":1303,"name":"AddressSlot","nameLocations":["1745:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"1745:11:10"},"referencedDeclaration":1283,"src":"1745:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1283_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:10"},"scope":1387,"src":"1684:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1319,"nodeType":"Block","src":"2056:106:10","statements":[{"AST":{"nativeSrc":"2118:38:10","nodeType":"YulBlock","src":"2118:38:10","statements":[{"nativeSrc":"2132:14:10","nodeType":"YulAssignment","src":"2132:14:10","value":{"name":"slot","nativeSrc":"2142:4:10","nodeType":"YulIdentifier","src":"2142:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:10","nodeType":"YulIdentifier","src":"2132:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1316,"isOffset":false,"isSlot":true,"src":"2132:6:10","suffix":"slot","valueSize":1},{"declaration":1312,"isOffset":false,"isSlot":false,"src":"2142:4:10","valueSize":1}],"id":1318,"nodeType":"InlineAssembly","src":"2109:47:10"}]},"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"1880:87:10","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1320,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:10","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"slot","nameLocation":"2004:4:10","nodeType":"VariableDeclaration","scope":1320,"src":"1996:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:10"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"r","nameLocation":"2053:1:10","nodeType":"VariableDeclaration","scope":1320,"src":"2033:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1286_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1315,"nodeType":"UserDefinedTypeName","pathNode":{"id":1314,"name":"BooleanSlot","nameLocations":["2033:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1286,"src":"2033:11:10"},"referencedDeclaration":1286,"src":"2033:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1286_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:10"},"scope":1387,"src":"1972:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"2344:106:10","statements":[{"AST":{"nativeSrc":"2406:38:10","nodeType":"YulBlock","src":"2406:38:10","statements":[{"nativeSrc":"2420:14:10","nodeType":"YulAssignment","src":"2420:14:10","value":{"name":"slot","nativeSrc":"2430:4:10","nodeType":"YulIdentifier","src":"2430:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:10","nodeType":"YulIdentifier","src":"2420:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1327,"isOffset":false,"isSlot":true,"src":"2420:6:10","suffix":"slot","valueSize":1},{"declaration":1323,"isOffset":false,"isSlot":false,"src":"2430:4:10","valueSize":1}],"id":1329,"nodeType":"InlineAssembly","src":"2397:47:10"}]},"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"2168:87:10","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:10","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"slot","nameLocation":"2292:4:10","nodeType":"VariableDeclaration","scope":1331,"src":"2284:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:10"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"r","nameLocation":"2341:1:10","nodeType":"VariableDeclaration","scope":1331,"src":"2321:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1289_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1326,"nodeType":"UserDefinedTypeName","pathNode":{"id":1325,"name":"Bytes32Slot","nameLocations":["2321:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1289,"src":"2321:11:10"},"referencedDeclaration":1289,"src":"2321:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1289_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:10"},"scope":1387,"src":"2260:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1341,"nodeType":"Block","src":"2632:106:10","statements":[{"AST":{"nativeSrc":"2694:38:10","nodeType":"YulBlock","src":"2694:38:10","statements":[{"nativeSrc":"2708:14:10","nodeType":"YulAssignment","src":"2708:14:10","value":{"name":"slot","nativeSrc":"2718:4:10","nodeType":"YulIdentifier","src":"2718:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:10","nodeType":"YulIdentifier","src":"2708:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1338,"isOffset":false,"isSlot":true,"src":"2708:6:10","suffix":"slot","valueSize":1},{"declaration":1334,"isOffset":false,"isSlot":false,"src":"2718:4:10","valueSize":1}],"id":1340,"nodeType":"InlineAssembly","src":"2685:47:10"}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"2456:87:10","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1342,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:10","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"slot","nameLocation":"2580:4:10","nodeType":"VariableDeclaration","scope":1342,"src":"2572:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:10"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"r","nameLocation":"2629:1:10","nodeType":"VariableDeclaration","scope":1342,"src":"2609:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1292_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1337,"nodeType":"UserDefinedTypeName","pathNode":{"id":1336,"name":"Uint256Slot","nameLocations":["2609:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1292,"src":"2609:11:10"},"referencedDeclaration":1292,"src":"2609:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1292_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:10"},"scope":1387,"src":"2548:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"2917:106:10","statements":[{"AST":{"nativeSrc":"2979:38:10","nodeType":"YulBlock","src":"2979:38:10","statements":[{"nativeSrc":"2993:14:10","nodeType":"YulAssignment","src":"2993:14:10","value":{"name":"slot","nativeSrc":"3003:4:10","nodeType":"YulIdentifier","src":"3003:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:10","nodeType":"YulIdentifier","src":"2993:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1349,"isOffset":false,"isSlot":true,"src":"2993:6:10","suffix":"slot","valueSize":1},{"declaration":1345,"isOffset":false,"isSlot":false,"src":"3003:4:10","valueSize":1}],"id":1351,"nodeType":"InlineAssembly","src":"2970:47:10"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"2744:86:10","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:10","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"slot","nameLocation":"2866:4:10","nodeType":"VariableDeclaration","scope":1353,"src":"2858:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:10"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"r","nameLocation":"2914:1:10","nodeType":"VariableDeclaration","scope":1353,"src":"2895:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1295_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1348,"nodeType":"UserDefinedTypeName","pathNode":{"id":1347,"name":"StringSlot","nameLocations":["2895:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1295,"src":"2895:10:10"},"referencedDeclaration":1295,"src":"2895:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1295_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:10"},"scope":1387,"src":"2835:188:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1363,"nodeType":"Block","src":"3225:112:10","statements":[{"AST":{"nativeSrc":"3287:44:10","nodeType":"YulBlock","src":"3287:44:10","statements":[{"nativeSrc":"3301:20:10","nodeType":"YulAssignment","src":"3301:20:10","value":{"name":"store.slot","nativeSrc":"3311:10:10","nodeType":"YulIdentifier","src":"3311:10:10"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:10","nodeType":"YulIdentifier","src":"3301:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1360,"isOffset":false,"isSlot":true,"src":"3301:6:10","suffix":"slot","valueSize":1},{"declaration":1356,"isOffset":false,"isSlot":true,"src":"3311:10:10","suffix":"slot","valueSize":1}],"id":1362,"nodeType":"InlineAssembly","src":"3278:53:10"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"3029:101:10","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1364,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:10","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"store","nameLocation":"3173:5:10","nodeType":"VariableDeclaration","scope":1364,"src":"3158:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1355,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:10"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"r","nameLocation":"3222:1:10","nodeType":"VariableDeclaration","scope":1364,"src":"3203:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1295_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1359,"nodeType":"UserDefinedTypeName","pathNode":{"id":1358,"name":"StringSlot","nameLocations":["3203:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1295,"src":"3203:10:10"},"referencedDeclaration":1295,"src":"3203:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1295_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:10"},"scope":1387,"src":"3135:202:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"3513:106:10","statements":[{"AST":{"nativeSrc":"3575:38:10","nodeType":"YulBlock","src":"3575:38:10","statements":[{"nativeSrc":"3589:14:10","nodeType":"YulAssignment","src":"3589:14:10","value":{"name":"slot","nativeSrc":"3599:4:10","nodeType":"YulIdentifier","src":"3599:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:10","nodeType":"YulIdentifier","src":"3589:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1371,"isOffset":false,"isSlot":true,"src":"3589:6:10","suffix":"slot","valueSize":1},{"declaration":1367,"isOffset":false,"isSlot":false,"src":"3599:4:10","valueSize":1}],"id":1373,"nodeType":"InlineAssembly","src":"3566:47:10"}]},"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"3343:85:10","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:10","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"slot","nameLocation":"3463:4:10","nodeType":"VariableDeclaration","scope":1375,"src":"3455:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:10"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"r","nameLocation":"3510:1:10","nodeType":"VariableDeclaration","scope":1375,"src":"3492:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1298_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1370,"nodeType":"UserDefinedTypeName","pathNode":{"id":1369,"name":"BytesSlot","nameLocations":["3492:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1298,"src":"3492:9:10"},"referencedDeclaration":1298,"src":"3492:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1298_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:10"},"scope":1387,"src":"3433:186:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1385,"nodeType":"Block","src":"3816:112:10","statements":[{"AST":{"nativeSrc":"3878:44:10","nodeType":"YulBlock","src":"3878:44:10","statements":[{"nativeSrc":"3892:20:10","nodeType":"YulAssignment","src":"3892:20:10","value":{"name":"store.slot","nativeSrc":"3902:10:10","nodeType":"YulIdentifier","src":"3902:10:10"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:10","nodeType":"YulIdentifier","src":"3892:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1382,"isOffset":false,"isSlot":true,"src":"3892:6:10","suffix":"slot","valueSize":1},{"declaration":1378,"isOffset":false,"isSlot":true,"src":"3902:10:10","suffix":"slot","valueSize":1}],"id":1384,"nodeType":"InlineAssembly","src":"3869:53:10"}]},"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"3625:99:10","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:10","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"store","nameLocation":"3765:5:10","nodeType":"VariableDeclaration","scope":1386,"src":"3751:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1377,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:10"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"r","nameLocation":"3813:1:10","nodeType":"VariableDeclaration","scope":1386,"src":"3795:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1298_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1381,"nodeType":"UserDefinedTypeName","pathNode":{"id":1380,"name":"BytesSlot","nameLocations":["3795:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1298,"src":"3795:9:10"},"referencedDeclaration":1298,"src":"3795:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1298_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:10"},"scope":1387,"src":"3729:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1388,"src":"1245:2685:10","usedErrors":[],"usedEvents":[]}],"src":"193:3738:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3345],"SignedMath":[3450],"Strings":[1642]},"id":1643,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1389,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1643,"sourceUnit":3346,"src":"127:37:11","symbolAliases":[{"foreign":{"id":1390,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"135:4:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1643,"sourceUnit":3451,"src":"165:49:11","symbolAliases":[{"foreign":{"id":1392,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"173:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"216:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":1642,"linearizedBaseContracts":[1642],"name":"Strings","nameLocation":"259:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1397,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:11","nodeType":"VariableDeclaration","scope":1642,"src":"273:56:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1395,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1400,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:11","nodeType":"VariableDeclaration","scope":1642,"src":"335:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1398,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"384:81:11","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1407,"name":"StringsInsufficientHexLength","nameLocation":"476:28:11","nodeType":"ErrorDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"value","nameLocation":"513:5:11","nodeType":"VariableDeclaration","scope":1407,"src":"505:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"length","nameLocation":"528:6:11","nodeType":"VariableDeclaration","scope":1407,"src":"520:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:11"},"src":"470:66:11"},{"body":{"id":1454,"nodeType":"Block","src":"708:627:11","statements":[{"id":1453,"nodeType":"UncheckedBlock","src":"718:611:11","statements":[{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"length","nameLocation":"750:6:11","nodeType":"VariableDeclaration","scope":1453,"src":"742:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1423,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"770:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1417,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"759:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3345_$","typeString":"type(library Math)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:11","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3165,"src":"759:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:11"},{"assignments":[1425],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"buffer","nameLocation":"808:6:11","nodeType":"VariableDeclaration","scope":1453,"src":"794:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1424,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1430,"initialValue":{"arguments":[{"id":1428,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"828:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1426,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:11"},{"assignments":[1432],"declarations":[{"constant":false,"id":1432,"mutability":"mutable","name":"ptr","nameLocation":"857:3:11","nodeType":"VariableDeclaration","scope":1453,"src":"849:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1433,"nodeType":"VariableDeclarationStatement","src":"849:11:11"},{"AST":{"nativeSrc":"930:67:11","nodeType":"YulBlock","src":"930:67:11","statements":[{"nativeSrc":"948:35:11","nodeType":"YulAssignment","src":"948:35:11","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:11","nodeType":"YulIdentifier","src":"959:6:11"},{"arguments":[{"kind":"number","nativeSrc":"971:2:11","nodeType":"YulLiteral","src":"971:2:11","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:11","nodeType":"YulIdentifier","src":"975:6:11"}],"functionName":{"name":"add","nativeSrc":"967:3:11","nodeType":"YulIdentifier","src":"967:3:11"},"nativeSrc":"967:15:11","nodeType":"YulFunctionCall","src":"967:15:11"}],"functionName":{"name":"add","nativeSrc":"955:3:11","nodeType":"YulIdentifier","src":"955:3:11"},"nativeSrc":"955:28:11","nodeType":"YulFunctionCall","src":"955:28:11"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:11","nodeType":"YulIdentifier","src":"948:3:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1425,"isOffset":false,"isSlot":false,"src":"959:6:11","valueSize":1},{"declaration":1416,"isOffset":false,"isSlot":false,"src":"975:6:11","valueSize":1},{"declaration":1432,"isOffset":false,"isSlot":false,"src":"948:3:11","valueSize":1}],"id":1434,"nodeType":"InlineAssembly","src":"921:76:11"},{"body":{"id":1449,"nodeType":"Block","src":"1023:269:11","statements":[{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:11","subExpression":{"id":1436,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1041:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1438,"nodeType":"ExpressionStatement","src":"1041:5:11"},{"AST":{"nativeSrc":"1124:86:11","nodeType":"YulBlock","src":"1124:86:11","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:11","nodeType":"YulIdentifier","src":"1154:3:11"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:11","nodeType":"YulIdentifier","src":"1168:5:11"},{"kind":"number","nativeSrc":"1175:2:11","nodeType":"YulLiteral","src":"1175:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:11","nodeType":"YulIdentifier","src":"1164:3:11"},"nativeSrc":"1164:14:11","nodeType":"YulFunctionCall","src":"1164:14:11"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:11","nodeType":"YulIdentifier","src":"1180:10:11"}],"functionName":{"name":"byte","nativeSrc":"1159:4:11","nodeType":"YulIdentifier","src":"1159:4:11"},"nativeSrc":"1159:32:11","nodeType":"YulFunctionCall","src":"1159:32:11"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:11","nodeType":"YulIdentifier","src":"1146:7:11"},"nativeSrc":"1146:46:11","nodeType":"YulFunctionCall","src":"1146:46:11"},"nativeSrc":"1146:46:11","nodeType":"YulExpressionStatement","src":"1146:46:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1397,"isOffset":false,"isSlot":false,"src":"1180:10:11","valueSize":1},{"declaration":1432,"isOffset":false,"isSlot":false,"src":"1154:3:11","valueSize":1},{"declaration":1410,"isOffset":false,"isSlot":false,"src":"1168:5:11","valueSize":1}],"id":1439,"nodeType":"InlineAssembly","src":"1115:95:11"},{"expression":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1227:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1443,"nodeType":"ExpressionStatement","src":"1227:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1260:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1448,"nodeType":"IfStatement","src":"1256:21:11","trueBody":{"id":1447,"nodeType":"Break","src":"1272:5:11"}}]},"condition":{"hexValue":"74727565","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1450,"nodeType":"WhileStatement","src":"1010:282:11"},{"expression":{"id":1451,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"1312:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1414,"id":1452,"nodeType":"Return","src":"1305:13:11"}]}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"542:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:11","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"value","nameLocation":"663:5:11","nodeType":"VariableDeclaration","scope":1455,"src":"655:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:11"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"693:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1412,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:11"},"scope":1642,"src":"637:698:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1480,"nodeType":"Block","src":"1511:92:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1542:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:11","trueExpression":{"hexValue":"2d","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1588:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1473,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"1573:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3450_$","typeString":"type(library SignedMath)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:11","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3449,"src":"1573:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1472,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"1564:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1463,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:11","typeDescriptions":{}}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:11","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1462,"id":1479,"nodeType":"Return","src":"1521:75:11"}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"1341:89:11","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:11","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"value","nameLocation":"1466:5:11","nodeType":"VariableDeclaration","scope":1481,"src":"1459:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1457,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:11"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1481,"src":"1496:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1460,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:11"},"scope":1642,"src":"1435:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1500,"nodeType":"Block","src":"1782:100:11","statements":[{"id":1499,"nodeType":"UncheckedBlock","src":"1792:84:11","statements":[{"expression":{"arguments":[{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1854:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1491,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"1842:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3345_$","typeString":"type(library Math)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:11","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3287,"src":"1842:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1489,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1501,1584,1604],"referencedDeclaration":1584,"src":"1823:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1488,"id":1498,"nodeType":"Return","src":"1816:49:11"}]}]},"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"1609:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1501,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:11","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"value","nameLocation":"1737:5:11","nodeType":"VariableDeclaration","scope":1501,"src":"1729:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:11"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"1767:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1486,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:11"},"scope":1642,"src":"1708:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1583,"nodeType":"Block","src":"2095:435:11","statements":[{"assignments":[1512],"declarations":[{"constant":false,"id":1512,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:11","nodeType":"VariableDeclaration","scope":1583,"src":"2105:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1514,"initialValue":{"id":1513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2126:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:11"},{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:11","nodeType":"VariableDeclaration","scope":1583,"src":"2141:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1515,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1525,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1520,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2177:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1517,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:11"},{"expression":{"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1526,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2198:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1528,"indexExpression":{"hexValue":"30","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1531,"nodeType":"ExpressionStatement","src":"2198:15:11"},{"expression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1532,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2223:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1534,"indexExpression":{"hexValue":"31","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1537,"nodeType":"ExpressionStatement","src":"2223:15:11"},{"body":{"id":1566,"nodeType":"Block","src":"2293:95:11","statements":[{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1552,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2307:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1554,"indexExpression":{"id":1553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"2314:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1555,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"2319:10:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1559,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2330:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1561,"nodeType":"ExpressionStatement","src":"2307:40:11"},{"expression":{"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1562,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2361:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1565,"nodeType":"ExpressionStatement","src":"2361:16:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1546,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"2281:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"initializationExpression":{"assignments":[1539],"declarations":[{"constant":false,"id":1539,"mutability":"mutable","name":"i","nameLocation":"2261:1:11","nodeType":"VariableDeclaration","scope":1567,"src":"2253:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1545,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1541,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2269:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:11"},"loopExpression":{"expression":{"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:11","subExpression":{"id":1549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"2290:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1551,"nodeType":"ExpressionStatement","src":"2288:3:11"},"nodeType":"ForStatement","src":"2248:140:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2401:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1577,"nodeType":"IfStatement","src":"2397:96:11","trueBody":{"id":1576,"nodeType":"Block","src":"2418:75:11","statements":[{"errorCall":{"arguments":[{"id":1572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2468:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1573,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2475:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1571,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2439:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1575,"nodeType":"RevertStatement","src":"2432:50:11"}]}},{"expression":{"arguments":[{"id":1580,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2516:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1578,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:11","typeDescriptions":{}}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1510,"id":1582,"nodeType":"Return","src":"2502:21:11"}]},"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"1888:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1584,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:11","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"value","nameLocation":"2034:5:11","nodeType":"VariableDeclaration","scope":1584,"src":"2026:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"length","nameLocation":"2049:6:11","nodeType":"VariableDeclaration","scope":1584,"src":"2041:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:11"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1584,"src":"2080:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1508,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:11"},"scope":1642,"src":"2005:525:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1603,"nodeType":"Block","src":"2762:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1597,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"2807:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1595,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:11","typeDescriptions":{}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:11","typeDescriptions":{}}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1600,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"2815:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1592,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1501,1584,1604],"referencedDeclaration":1584,"src":"2779:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1591,"id":1602,"nodeType":"Return","src":"2772:58:11"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"2536:148:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:11","nodeType":"FunctionDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"addr","nameLocation":"2718:4:11","nodeType":"VariableDeclaration","scope":1604,"src":"2710:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:11"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"2747:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1589,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:11"},"scope":1642,"src":"2689:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1640,"nodeType":"Block","src":"2992:104:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"3015:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1614,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:11","typeDescriptions":{}}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:11","memberName":"length","nodeType":"MemberAccess","src":"3009:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1621,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3034:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1619,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:11","typeDescriptions":{}}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:11","memberName":"length","nodeType":"MemberAccess","src":"3028:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1628,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"3063:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1626,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:11","typeDescriptions":{}}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1625,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1634,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3086:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1632,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:11","typeDescriptions":{}}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1631,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1613,"id":1639,"nodeType":"Return","src":"3002:87:11"}]},"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"2843:66:11","text":" @dev Returns true if the two strings are equal."},"id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:11","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"a","nameLocation":"2943:1:11","nodeType":"VariableDeclaration","scope":1641,"src":"2929:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1606,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"b","nameLocation":"2960:1:11","nodeType":"VariableDeclaration","scope":1641,"src":"2946:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1608,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:11"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1641,"src":"2986:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1611,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:11"},"scope":1642,"src":"2914:182:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1643,"src":"251:2847:11","usedErrors":[1407],"usedEvents":[]}],"src":"101:2998:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1990]},"id":1991,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1644,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1645,"nodeType":"StructuredDocumentation","src":"138:205:12","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1990,"linearizedBaseContracts":[1990],"name":"ECDSA","nameLocation":"352:5:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1650,"members":[{"id":1646,"name":"NoError","nameLocation":"392:7:12","nodeType":"EnumValue","src":"392:7:12"},{"id":1647,"name":"InvalidSignature","nameLocation":"409:16:12","nodeType":"EnumValue","src":"409:16:12"},{"id":1648,"name":"InvalidSignatureLength","nameLocation":"435:22:12","nodeType":"EnumValue","src":"435:22:12"},{"id":1649,"name":"InvalidSignatureS","nameLocation":"467:17:12","nodeType":"EnumValue","src":"467:17:12"}],"name":"RecoverError","nameLocation":"369:12:12","nodeType":"EnumDefinition","src":"364:126:12"},{"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"496:63:12","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1653,"name":"ECDSAInvalidSignature","nameLocation":"570:21:12","nodeType":"ErrorDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[],"src":"591:2:12"},"src":"564:30:12"},{"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"600:60:12","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1658,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:12","nodeType":"ErrorDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"length","nameLocation":"707:6:12","nodeType":"VariableDeclaration","scope":1658,"src":"699:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:12"},"src":"665:50:12"},{"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"721:85:12","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1663,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:12","nodeType":"ErrorDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"s","nameLocation":"848:1:12","nodeType":"VariableDeclaration","scope":1663,"src":"840:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:12"},"src":"811:40:12"},{"body":{"id":1715,"nodeType":"Block","src":"2242:653:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1678,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2256:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:12","memberName":"length","nodeType":"MemberAccess","src":"2256:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1713,"nodeType":"Block","src":"2781:108:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:12","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1704,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"2815:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1650_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1648,"src":"2815:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1708,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2860:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:12","memberName":"length","nodeType":"MemberAccess","src":"2860:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:12","typeDescriptions":{}}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1677,"id":1712,"nodeType":"Return","src":"2795:83:12"}]},"id":1714,"nodeType":"IfStatement","src":"2252:637:12","trueBody":{"id":1699,"nodeType":"Block","src":"2280:495:12","statements":[{"assignments":[1683],"declarations":[{"constant":false,"id":1683,"mutability":"mutable","name":"r","nameLocation":"2302:1:12","nodeType":"VariableDeclaration","scope":1699,"src":"2294:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1684,"nodeType":"VariableDeclarationStatement","src":"2294:9:12"},{"assignments":[1686],"declarations":[{"constant":false,"id":1686,"mutability":"mutable","name":"s","nameLocation":"2325:1:12","nodeType":"VariableDeclaration","scope":1699,"src":"2317:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1687,"nodeType":"VariableDeclarationStatement","src":"2317:9:12"},{"assignments":[1689],"declarations":[{"constant":false,"id":1689,"mutability":"mutable","name":"v","nameLocation":"2346:1:12","nodeType":"VariableDeclaration","scope":1699,"src":"2340:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1688,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1690,"nodeType":"VariableDeclarationStatement","src":"2340:7:12"},{"AST":{"nativeSrc":"2548:171:12","nodeType":"YulBlock","src":"2548:171:12","statements":[{"nativeSrc":"2566:32:12","nodeType":"YulAssignment","src":"2566:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:12","nodeType":"YulIdentifier","src":"2581:9:12"},{"kind":"number","nativeSrc":"2592:4:12","nodeType":"YulLiteral","src":"2592:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:12","nodeType":"YulIdentifier","src":"2577:3:12"},"nativeSrc":"2577:20:12","nodeType":"YulFunctionCall","src":"2577:20:12"}],"functionName":{"name":"mload","nativeSrc":"2571:5:12","nodeType":"YulIdentifier","src":"2571:5:12"},"nativeSrc":"2571:27:12","nodeType":"YulFunctionCall","src":"2571:27:12"},"variableNames":[{"name":"r","nativeSrc":"2566:1:12","nodeType":"YulIdentifier","src":"2566:1:12"}]},{"nativeSrc":"2615:32:12","nodeType":"YulAssignment","src":"2615:32:12","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:12","nodeType":"YulIdentifier","src":"2630:9:12"},{"kind":"number","nativeSrc":"2641:4:12","nodeType":"YulLiteral","src":"2641:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:12","nodeType":"YulIdentifier","src":"2626:3:12"},"nativeSrc":"2626:20:12","nodeType":"YulFunctionCall","src":"2626:20:12"}],"functionName":{"name":"mload","nativeSrc":"2620:5:12","nodeType":"YulIdentifier","src":"2620:5:12"},"nativeSrc":"2620:27:12","nodeType":"YulFunctionCall","src":"2620:27:12"},"variableNames":[{"name":"s","nativeSrc":"2615:1:12","nodeType":"YulIdentifier","src":"2615:1:12"}]},{"nativeSrc":"2664:41:12","nodeType":"YulAssignment","src":"2664:41:12","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:12","nodeType":"YulLiteral","src":"2674:1:12","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:12","nodeType":"YulIdentifier","src":"2687:9:12"},{"kind":"number","nativeSrc":"2698:4:12","nodeType":"YulLiteral","src":"2698:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:12","nodeType":"YulIdentifier","src":"2683:3:12"},"nativeSrc":"2683:20:12","nodeType":"YulFunctionCall","src":"2683:20:12"}],"functionName":{"name":"mload","nativeSrc":"2677:5:12","nodeType":"YulIdentifier","src":"2677:5:12"},"nativeSrc":"2677:27:12","nodeType":"YulFunctionCall","src":"2677:27:12"}],"functionName":{"name":"byte","nativeSrc":"2669:4:12","nodeType":"YulIdentifier","src":"2669:4:12"},"nativeSrc":"2669:36:12","nodeType":"YulFunctionCall","src":"2669:36:12"},"variableNames":[{"name":"v","nativeSrc":"2664:1:12","nodeType":"YulIdentifier","src":"2664:1:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1683,"isOffset":false,"isSlot":false,"src":"2566:1:12","valueSize":1},{"declaration":1686,"isOffset":false,"isSlot":false,"src":"2615:1:12","valueSize":1},{"declaration":1668,"isOffset":false,"isSlot":false,"src":"2581:9:12","valueSize":1},{"declaration":1668,"isOffset":false,"isSlot":false,"src":"2630:9:12","valueSize":1},{"declaration":1668,"isOffset":false,"isSlot":false,"src":"2687:9:12","valueSize":1},{"declaration":1689,"isOffset":false,"isSlot":false,"src":"2664:1:12","valueSize":1}],"id":1691,"nodeType":"InlineAssembly","src":"2539:180:12"},{"expression":{"arguments":[{"id":1693,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"2750:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1694,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"2756:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1695,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"2759:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1696,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2762:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1692,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1716,1796,1904],"referencedDeclaration":1904,"src":"2739:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1677,"id":1698,"nodeType":"Return","src":"2732:32:12"}]}}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"857:1267:12","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:12","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"hash","nameLocation":"2157:4:12","nodeType":"VariableDeclaration","scope":1716,"src":"2149:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"signature","nameLocation":"2176:9:12","nodeType":"VariableDeclaration","scope":1716,"src":"2163:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1667,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:12"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2210:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2219:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1673,"nodeType":"UserDefinedTypeName","pathNode":{"id":1672,"name":"RecoverError","nameLocations":["2219:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"2219:12:12"},"referencedDeclaration":1650,"src":"2219:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2233:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:12"},"scope":1990,"src":"2129:766:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"3789:168:12","statements":[{"assignments":[1727,1730,1732],"declarations":[{"constant":false,"id":1727,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:12","nodeType":"VariableDeclaration","scope":1745,"src":"3800:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"error","nameLocation":"3832:5:12","nodeType":"VariableDeclaration","scope":1745,"src":"3819:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1729,"nodeType":"UserDefinedTypeName","pathNode":{"id":1728,"name":"RecoverError","nameLocations":["3819:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"3819:12:12"},"referencedDeclaration":1650,"src":"3819:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:12","nodeType":"VariableDeclaration","scope":1745,"src":"3839:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1737,"initialValue":{"arguments":[{"id":1734,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"3870:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1735,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"3876:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1733,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1716,1796,1904],"referencedDeclaration":1716,"src":"3859:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:12"},{"expression":{"arguments":[{"id":1739,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"3908:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},{"id":1740,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3915:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1738,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"3896:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1650_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1742,"nodeType":"ExpressionStatement","src":"3896:28:12"},{"expression":{"id":1743,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"3941:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1725,"id":1744,"nodeType":"Return","src":"3934:16:12"}]},"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2901:796:12","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:12","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"hash","nameLocation":"3727:4:12","nodeType":"VariableDeclaration","scope":1746,"src":"3719:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"signature","nameLocation":"3746:9:12","nodeType":"VariableDeclaration","scope":1746,"src":"3733:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1720,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:12"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"3780:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:12"},"scope":1990,"src":"3702:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1795,"nodeType":"Block","src":"4285:342:12","statements":[{"id":1794,"nodeType":"UncheckedBlock","src":"4295:326:12","statements":[{"assignments":[1764],"declarations":[{"constant":false,"id":1764,"mutability":"mutable","name":"s","nameLocation":"4327:1:12","nodeType":"VariableDeclaration","scope":1794,"src":"4319:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1771,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"4331:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:12","typeDescriptions":{}}},"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:12"},{"assignments":[1773],"declarations":[{"constant":false,"id":1773,"mutability":"mutable","name":"v","nameLocation":"4528:1:12","nodeType":"VariableDeclaration","scope":1794,"src":"4522:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1772,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1786,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1778,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"4547:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:12","typeDescriptions":{}}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:12","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1774,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:12","typeDescriptions":{}}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:12"},{"expression":{"arguments":[{"id":1788,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"4596:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1789,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4602:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1790,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"4605:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1791,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"4608:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1787,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1716,1796,1904],"referencedDeclaration":1904,"src":"4585:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1762,"id":1793,"nodeType":"Return","src":"4578:32:12"}]}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"3963:205:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":1796,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:12","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"hash","nameLocation":"4201:4:12","nodeType":"VariableDeclaration","scope":1796,"src":"4193:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"r","nameLocation":"4215:1:12","nodeType":"VariableDeclaration","scope":1796,"src":"4207:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"vs","nameLocation":"4226:2:12","nodeType":"VariableDeclaration","scope":1796,"src":"4218:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:12"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1796,"src":"4253:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1796,"src":"4262:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1758,"nodeType":"UserDefinedTypeName","pathNode":{"id":1757,"name":"RecoverError","nameLocations":["4262:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"4262:12:12"},"referencedDeclaration":1650,"src":"4262:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1796,"src":"4276:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:12"},"scope":1990,"src":"4173:454:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"4840:164:12","statements":[{"assignments":[1809,1812,1814],"declarations":[{"constant":false,"id":1809,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:12","nodeType":"VariableDeclaration","scope":1828,"src":"4851:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"error","nameLocation":"4883:5:12","nodeType":"VariableDeclaration","scope":1828,"src":"4870:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1811,"nodeType":"UserDefinedTypeName","pathNode":{"id":1810,"name":"RecoverError","nameLocations":["4870:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"4870:12:12"},"referencedDeclaration":1650,"src":"4870:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:12","nodeType":"VariableDeclaration","scope":1828,"src":"4890:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1820,"initialValue":{"arguments":[{"id":1816,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"4921:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1817,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"4927:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1818,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"4930:2:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1815,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1716,1796,1904],"referencedDeclaration":1796,"src":"4910:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:12"},{"expression":{"arguments":[{"id":1822,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"4955:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},{"id":1823,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"4962:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1821,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4943:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1650_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1825,"nodeType":"ExpressionStatement","src":"4943:28:12"},{"expression":{"id":1826,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"4988:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1807,"id":1827,"nodeType":"Return","src":"4981:16:12"}]},"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"4633:116:12","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:12","nodeType":"FunctionDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"hash","nameLocation":"4779:4:12","nodeType":"VariableDeclaration","scope":1829,"src":"4771:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"r","nameLocation":"4793:1:12","nodeType":"VariableDeclaration","scope":1829,"src":"4785:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"vs","nameLocation":"4804:2:12","nodeType":"VariableDeclaration","scope":1829,"src":"4796:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:12"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"4831:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:12"},"scope":1990,"src":"4754:250:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1903,"nodeType":"Block","src":"5298:1372:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1850,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6194:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:12","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1864,"nodeType":"IfStatement","src":"6182:164:12","trueBody":{"id":1863,"nodeType":"Block","src":"6267:79:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:12","typeDescriptions":{}}},"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1858,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"6301:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1650_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"6301:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},{"id":1860,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6333:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1847,"id":1862,"nodeType":"Return","src":"6281:54:12"}]}},{"assignments":[1866],"declarations":[{"constant":false,"id":1866,"mutability":"mutable","name":"signer","nameLocation":"6448:6:12","nodeType":"VariableDeclaration","scope":1903,"src":"6440:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1865,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1873,"initialValue":{"arguments":[{"id":1868,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"6467:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1869,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"6473:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1870,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"6476:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1871,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6479:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1867,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:12","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1874,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"6495:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:12","typeDescriptions":{}}},"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1893,"nodeType":"IfStatement","src":"6491:113:12","trueBody":{"id":1892,"nodeType":"Block","src":"6517:87:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:12","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1884,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"6551:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1650_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"6551:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:12","typeDescriptions":{}}},"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1847,"id":1891,"nodeType":"Return","src":"6531:62:12"}]}},{"expression":{"components":[{"id":1894,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"6622:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1895,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"6630:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1650_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1646,"src":"6630:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:12","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1847,"id":1902,"nodeType":"Return","src":"6614:49:12"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"5010:125:12","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1904,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:12","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"hash","nameLocation":"5177:4:12","nodeType":"VariableDeclaration","scope":1904,"src":"5169:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"v","nameLocation":"5197:1:12","nodeType":"VariableDeclaration","scope":1904,"src":"5191:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1833,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"r","nameLocation":"5216:1:12","nodeType":"VariableDeclaration","scope":1904,"src":"5208:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"s","nameLocation":"5235:1:12","nodeType":"VariableDeclaration","scope":1904,"src":"5227:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:12"},"returnParameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"5266:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"5275:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1843,"nodeType":"UserDefinedTypeName","pathNode":{"id":1842,"name":"RecoverError","nameLocations":["5275:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"5275:12:12"},"referencedDeclaration":1650,"src":"5275:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"5289:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:12"},"scope":1990,"src":"5140:1530:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1939,"nodeType":"Block","src":"6897:166:12","statements":[{"assignments":[1919,1922,1924],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:12","nodeType":"VariableDeclaration","scope":1939,"src":"6908:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1918,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"error","nameLocation":"6940:5:12","nodeType":"VariableDeclaration","scope":1939,"src":"6927:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1921,"nodeType":"UserDefinedTypeName","pathNode":{"id":1920,"name":"RecoverError","nameLocations":["6927:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"6927:12:12"},"referencedDeclaration":1650,"src":"6927:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:12","nodeType":"VariableDeclaration","scope":1939,"src":"6947:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1931,"initialValue":{"arguments":[{"id":1926,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"6978:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1927,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"6984:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1928,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"6987:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1929,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"6990:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1925,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1716,1796,1904],"referencedDeclaration":1904,"src":"6967:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1650_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:12"},{"expression":{"arguments":[{"id":1933,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"7014:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},{"id":1934,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"7021:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1932,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"7002:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1650_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1936,"nodeType":"ExpressionStatement","src":"7002:28:12"},{"expression":{"id":1937,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"7047:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1917,"id":1938,"nodeType":"Return","src":"7040:16:12"}]},"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"6676:122:12","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1940,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:12","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"hash","nameLocation":"6828:4:12","nodeType":"VariableDeclaration","scope":1940,"src":"6820:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"v","nameLocation":"6840:1:12","nodeType":"VariableDeclaration","scope":1940,"src":"6834:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1908,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"r","nameLocation":"6851:1:12","nodeType":"VariableDeclaration","scope":1940,"src":"6843:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"s","nameLocation":"6862:1:12","nodeType":"VariableDeclaration","scope":1940,"src":"6854:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:12"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1940,"src":"6888:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:12"},"scope":1990,"src":"6803:260:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"7268:460:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"7282:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1950,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"7291:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1650_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:12","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1646,"src":"7291:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"7378:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1956,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"7387:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1650_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:12","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"7387:29:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1963,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"7483:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1964,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"7492:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1650_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:12","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1648,"src":"7492:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"7617:5:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1976,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"7626:12:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1650_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:12","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"7626:30:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"nodeType":"IfStatement","src":"7613:109:12","trueBody":{"id":1983,"nodeType":"Block","src":"7658:64:12","statements":[{"errorCall":{"arguments":[{"id":1980,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7702:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1979,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7679:22:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"RevertStatement","src":"7672:39:12"}]}},"id":1985,"nodeType":"IfStatement","src":"7479:243:12","trueBody":{"id":1974,"nodeType":"Block","src":"7529:78:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1970,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7586:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:12","typeDescriptions":{}}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1967,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"7550:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1973,"nodeType":"RevertStatement","src":"7543:53:12"}]}},"id":1986,"nodeType":"IfStatement","src":"7374:348:12","trueBody":{"id":1962,"nodeType":"Block","src":"7418:55:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1959,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"7439:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1961,"nodeType":"RevertStatement","src":"7432:30:12"}]}},"id":1987,"nodeType":"IfStatement","src":"7278:444:12","trueBody":{"id":1954,"nodeType":"Block","src":"7313:55:12","statements":[{"functionReturnParameters":1948,"id":1953,"nodeType":"Return","src":"7327:7:12"}]}}]},"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"7069:122:12","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:12","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"error","nameLocation":"7230:5:12","nodeType":"VariableDeclaration","scope":1989,"src":"7217:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1943,"nodeType":"UserDefinedTypeName","pathNode":{"id":1942,"name":"RecoverError","nameLocations":["7217:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"7217:12:12"},"referencedDeclaration":1650,"src":"7217:12:12","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1650","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:12","nodeType":"VariableDeclaration","scope":1989,"src":"7237:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:12"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[],"src":"7268:0:12"},"scope":1990,"src":"7196:532:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1991,"src":"344:7386:12","usedErrors":[1653,1658,1663],"usedEvents":[]}],"src":"112:7619:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2217],"IERC5267":[24],"MessageHashUtils":[2291],"ShortString":[1066],"ShortStrings":[1277]},"id":2218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1992,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":1994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2218,"sourceUnit":2292,"src":"139:56:13","symbolAliases":[{"foreign":{"id":1993,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"147:16:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":1997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2218,"sourceUnit":1278,"src":"196:62:13","symbolAliases":[{"foreign":{"id":1995,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"204:12:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1996,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"218:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":1999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2218,"sourceUnit":25,"src":"259:55:13","symbolAliases":[{"foreign":{"id":1998,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"267:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2001,"name":"IERC5267","nameLocations":["1988:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"1988:8:13"},"id":2002,"nodeType":"InheritanceSpecifier","src":"1988:8:13"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"316:1643:13","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2217,"linearizedBaseContracts":[2217,24],"name":"EIP712","nameLocation":"1978:6:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2004,"libraryName":{"id":2003,"name":"ShortStrings","nameLocations":["2009:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":1277,"src":"2009:12:13"},"nodeType":"UsingForDirective","src":"2003:25:13"},{"constant":true,"id":2009,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:13","nodeType":"VariableDeclaration","scope":2217,"src":"2034:140:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2006,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2011,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:13","nodeType":"VariableDeclaration","scope":2217,"src":"2373:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2013,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:13","nodeType":"VariableDeclaration","scope":2217,"src":"2427:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2015,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:13","nodeType":"VariableDeclaration","scope":2217,"src":"2473:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2017,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:13","nodeType":"VariableDeclaration","scope":2217,"src":"2517:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2019,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:13","nodeType":"VariableDeclaration","scope":2217,"src":"2560:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2022,"mutability":"immutable","name":"_name","nameLocation":"2637:5:13","nodeType":"VariableDeclaration","scope":2217,"src":"2607:35:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"},"typeName":{"id":2021,"nodeType":"UserDefinedTypeName","pathNode":{"id":2020,"name":"ShortString","nameLocations":["2607:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"2607:11:13"},"referencedDeclaration":1066,"src":"2607:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2025,"mutability":"immutable","name":"_version","nameLocation":"2678:8:13","nodeType":"VariableDeclaration","scope":2217,"src":"2648:38:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"},"typeName":{"id":2024,"nodeType":"UserDefinedTypeName","pathNode":{"id":2023,"name":"ShortString","nameLocations":["2648:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"2648:11:13"},"referencedDeclaration":1066,"src":"2648:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2027,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:13","nodeType":"VariableDeclaration","scope":2217,"src":"2692:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2029,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:13","nodeType":"VariableDeclaration","scope":2217,"src":"2726:31:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2028,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2086,"nodeType":"Block","src":"3383:376:13","statements":[{"expression":{"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2037,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"3393:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2040,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"3432:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2038,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"3401:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:13","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"3401:30:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1066_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"src":"3393:53:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"id":2043,"nodeType":"ExpressionStatement","src":"3393:53:13"},{"expression":{"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2044,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"3456:8:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2047,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"3501:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2045,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"3467:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:13","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1218,"src":"3467:33:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1066_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"src":"3456:62:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"id":2050,"nodeType":"ExpressionStatement","src":"3456:62:13"},{"expression":{"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2051,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3528:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2055,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"3558:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2053,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:13","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2052,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2059,"nodeType":"ExpressionStatement","src":"3528:36:13"},{"expression":{"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2060,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3574:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2064,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"3607:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2062,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:13","typeDescriptions":{}}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2061,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2068,"nodeType":"ExpressionStatement","src":"3574:42:13"},{"expression":{"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2069,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"3627:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2070,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2073,"nodeType":"ExpressionStatement","src":"3627:30:13"},{"expression":{"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2074,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"3667:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2075,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"3692:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2078,"nodeType":"ExpressionStatement","src":"3667:48:13"},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2079,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3725:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2082,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2217","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2217","typeString":"contract EIP712"}],"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:13","typeDescriptions":{}}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2085,"nodeType":"ExpressionStatement","src":"3725:27:13"}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"2764:559:13","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2087,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"name","nameLocation":"3354:4:13","nodeType":"VariableDeclaration","scope":2087,"src":"3340:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2031,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"version","nameLocation":"3374:7:13","nodeType":"VariableDeclaration","scope":2087,"src":"3360:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2033,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:13"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[],"src":"3383:0:13"},"scope":2217,"src":"3328:431:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2112,"nodeType":"Block","src":"3907:200:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2095,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2217","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2217","typeString":"contract EIP712"}],"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:13","typeDescriptions":{}}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2097,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3938:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2099,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2101,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"3970:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2110,"nodeType":"Block","src":"4046:55:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2107,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"4067:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2092,"id":2109,"nodeType":"Return","src":"4060:30:13"}]},"id":2111,"nodeType":"IfStatement","src":"3917:184:13","trueBody":{"id":2106,"nodeType":"Block","src":"3986:54:13","statements":[{"expression":{"id":2104,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"4007:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2092,"id":2105,"nodeType":"Return","src":"4000:29:13"}]}}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"3765:75:13","text":" @dev Returns the domain separator for the current chain."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:13","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"3872:2:13"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"3898:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:13"},"scope":2217,"src":"3845:262:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2133,"nodeType":"Block","src":"4177:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2121,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"4215:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2122,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"4226:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2123,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4239:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2124,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2128,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2217","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2217","typeString":"contract EIP712"}],"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2126,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:13","typeDescriptions":{}}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2119,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:13","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2118,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2117,"id":2132,"nodeType":"Return","src":"4187:98:13"}]},"id":2134,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:13","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[],"src":"4143:2:13"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2134,"src":"4168:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:13"},"scope":2217,"src":"4113:179:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2149,"nodeType":"Block","src":"5003:90:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2144,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"5053:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2146,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"5075:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2142,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"5020:16:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2291_$","typeString":"type(library MessageHashUtils)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:13","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2290,"src":"5020:32:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2141,"id":2148,"nodeType":"Return","src":"5013:73:13"}]},"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"4298:614:13","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:13","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:13","nodeType":"VariableDeclaration","scope":2150,"src":"4943:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:13"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2150,"src":"4994:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:13"},"scope":2217,"src":"4917:176:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[23],"body":{"id":2191,"nodeType":"Block","src":"5472:229:13","statements":[{"expression":{"components":[{"hexValue":"0f","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2170,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"5533:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2172,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"5560:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2174,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2178,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2217","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2217","typeString":"contract EIP712"}],"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2176,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:13","typeDescriptions":{}}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:13","typeDescriptions":{}}},"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2185,"nodeType":"ArrayTypeName","src":"5672:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2168,"id":2190,"nodeType":"Return","src":"5482:212:13"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"5099:40:13","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:13","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[],"src":"5165:2:13"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"fields","nameLocation":"5249:6:13","nodeType":"VariableDeclaration","scope":2192,"src":"5242:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2153,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2156,"mutability":"mutable","name":"name","nameLocation":"5283:4:13","nodeType":"VariableDeclaration","scope":2192,"src":"5269:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2155,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"version","nameLocation":"5315:7:13","nodeType":"VariableDeclaration","scope":2192,"src":"5301:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2157,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:13","nodeType":"VariableDeclaration","scope":2192,"src":"5336:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:13","nodeType":"VariableDeclaration","scope":2192,"src":"5365:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"salt","nameLocation":"5412:4:13","nodeType":"VariableDeclaration","scope":2192,"src":"5404:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:13","nodeType":"VariableDeclaration","scope":2192,"src":"5430:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2166,"nodeType":"ArrayTypeName","src":"5430:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:13"},"scope":2217,"src":"5144:557:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2203,"nodeType":"Block","src":"6082:65:13","statements":[{"expression":{"arguments":[{"id":2200,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"6126:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2198,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6099:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:13","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1245,"src":"6099:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1066_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2197,"id":2202,"nodeType":"Return","src":"6092:48:13"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"5707:256:13","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:13","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"6041:2:13"},"returnParameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2204,"src":"6067:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2195,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:13"},"scope":2217,"src":"6021:126:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"6537:71:13","statements":[{"expression":{"arguments":[{"id":2212,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"6584:16:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2210,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"6554:8:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1066","typeString":"ShortString"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:13","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1245,"src":"6554:29:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1066_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1066_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2209,"id":2214,"nodeType":"Return","src":"6547:54:13"}]},"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"6153:262:13","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:13","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"6496:2:13"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"6522:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2207,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:13"},"scope":2217,"src":"6473:135:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2218,"src":"1960:4650:13","usedErrors":[1074,1076],"usedEvents":[4]}],"src":"113:6498:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2291],"Strings":[1642]},"id":2292,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2219,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2292,"sourceUnit":1643,"src":"149:39:14","symbolAliases":[{"foreign":{"id":2220,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"157:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"190:330:14","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2291,"linearizedBaseContracts":[2291],"name":"MessageHashUtils","nameLocation":"529:16:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2231,"nodeType":"Block","src":"1314:368:14","statements":[{"AST":{"nativeSrc":"1376:300:14","nodeType":"YulBlock","src":"1376:300:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:14","nodeType":"YulLiteral","src":"1397:4:14","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:14","nodeType":"YulLiteral","src":"1403:34:14","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:14","nodeType":"YulIdentifier","src":"1390:6:14"},"nativeSrc":"1390:48:14","nodeType":"YulFunctionCall","src":"1390:48:14"},"nativeSrc":"1390:48:14","nodeType":"YulExpressionStatement","src":"1390:48:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:14","nodeType":"YulLiteral","src":"1499:4:14","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:14","nodeType":"YulIdentifier","src":"1505:11:14"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:14","nodeType":"YulIdentifier","src":"1492:6:14"},"nativeSrc":"1492:25:14","nodeType":"YulFunctionCall","src":"1492:25:14"},"nativeSrc":"1492:25:14","nodeType":"YulExpressionStatement","src":"1492:25:14"},{"nativeSrc":"1571:31:14","nodeType":"YulAssignment","src":"1571:31:14","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:14","nodeType":"YulLiteral","src":"1591:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:14","nodeType":"YulLiteral","src":"1597:4:14","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:14","nodeType":"YulIdentifier","src":"1581:9:14"},"nativeSrc":"1581:21:14","nodeType":"YulFunctionCall","src":"1581:21:14"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:14","nodeType":"YulIdentifier","src":"1571:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2228,"isOffset":false,"isSlot":false,"src":"1571:6:14","valueSize":1},{"declaration":2225,"isOffset":false,"isSlot":false,"src":"1505:11:14","valueSize":1}],"id":2230,"nodeType":"InlineAssembly","src":"1367:309:14"}]},"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"552:665:14","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2232,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:14","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:14","nodeType":"VariableDeclaration","scope":2232,"src":"1254:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:14"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"digest","nameLocation":"1306:6:14","nodeType":"VariableDeclaration","scope":2232,"src":"1298:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:14"},"scope":2291,"src":"1222:460:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2257,"nodeType":"Block","src":"2234:143:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2249,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"2343:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:14","memberName":"length","nodeType":"MemberAccess","src":"2343:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2247,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"2326:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1642_$","typeString":"type(library Strings)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:14","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1455,"src":"2326:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:14","typeDescriptions":{}}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2253,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"2361:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2241,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:14","typeDescriptions":{}}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:14","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:14","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2240,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2239,"id":2256,"nodeType":"Return","src":"2244:126:14"}]},"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"1688:455:14","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2258,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:14","nodeType":"FunctionDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"message","nameLocation":"2193:7:14","nodeType":"VariableDeclaration","scope":2258,"src":"2180:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2234,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:14"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2258,"src":"2225:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:14"},"scope":2291,"src":"2148:229:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2277,"nodeType":"Block","src":"2831:80:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2272,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"2887:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2273,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"2898:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2269,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2268,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2267,"id":2276,"nodeType":"Return","src":"2841:63:14"}]},"documentation":{"id":2259,"nodeType":"StructuredDocumentation","src":"2383:332:14","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2278,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:14","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"validator","nameLocation":"2769:9:14","nodeType":"VariableDeclaration","scope":2278,"src":"2761:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"data","nameLocation":"2793:4:14","nodeType":"VariableDeclaration","scope":2278,"src":"2780:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2262,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:14"},"returnParameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2278,"src":"2822:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:14"},"scope":2291,"src":"2720:191:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2289,"nodeType":"Block","src":"3462:292:14","statements":[{"AST":{"nativeSrc":"3524:224:14","nodeType":"YulBlock","src":"3524:224:14","statements":[{"nativeSrc":"3538:22:14","nodeType":"YulVariableDeclaration","src":"3538:22:14","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:14","nodeType":"YulLiteral","src":"3555:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:14","nodeType":"YulIdentifier","src":"3549:5:14"},"nativeSrc":"3549:11:14","nodeType":"YulFunctionCall","src":"3549:11:14"},"variables":[{"name":"ptr","nativeSrc":"3542:3:14","nodeType":"YulTypedName","src":"3542:3:14","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:14","nodeType":"YulIdentifier","src":"3580:3:14"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:14","nodeType":"YulLiteral","src":"3585:10:14","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:14","nodeType":"YulIdentifier","src":"3573:6:14"},"nativeSrc":"3573:23:14","nodeType":"YulFunctionCall","src":"3573:23:14"},"nativeSrc":"3573:23:14","nodeType":"YulExpressionStatement","src":"3573:23:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:14","nodeType":"YulIdentifier","src":"3620:3:14"},{"kind":"number","nativeSrc":"3625:4:14","nodeType":"YulLiteral","src":"3625:4:14","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:14","nodeType":"YulIdentifier","src":"3616:3:14"},"nativeSrc":"3616:14:14","nodeType":"YulFunctionCall","src":"3616:14:14"},{"name":"domainSeparator","nativeSrc":"3632:15:14","nodeType":"YulIdentifier","src":"3632:15:14"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:14","nodeType":"YulIdentifier","src":"3609:6:14"},"nativeSrc":"3609:39:14","nodeType":"YulFunctionCall","src":"3609:39:14"},"nativeSrc":"3609:39:14","nodeType":"YulExpressionStatement","src":"3609:39:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:14","nodeType":"YulIdentifier","src":"3672:3:14"},{"kind":"number","nativeSrc":"3677:4:14","nodeType":"YulLiteral","src":"3677:4:14","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:14","nodeType":"YulIdentifier","src":"3668:3:14"},"nativeSrc":"3668:14:14","nodeType":"YulFunctionCall","src":"3668:14:14"},{"name":"structHash","nativeSrc":"3684:10:14","nodeType":"YulIdentifier","src":"3684:10:14"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:14","nodeType":"YulIdentifier","src":"3661:6:14"},"nativeSrc":"3661:34:14","nodeType":"YulFunctionCall","src":"3661:34:14"},"nativeSrc":"3661:34:14","nodeType":"YulExpressionStatement","src":"3661:34:14"},{"nativeSrc":"3708:30:14","nodeType":"YulAssignment","src":"3708:30:14","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:14","nodeType":"YulIdentifier","src":"3728:3:14"},{"kind":"number","nativeSrc":"3733:4:14","nodeType":"YulLiteral","src":"3733:4:14","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:14","nodeType":"YulIdentifier","src":"3718:9:14"},"nativeSrc":"3718:20:14","nodeType":"YulFunctionCall","src":"3718:20:14"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:14","nodeType":"YulIdentifier","src":"3708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2286,"isOffset":false,"isSlot":false,"src":"3708:6:14","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"3632:15:14","valueSize":1},{"declaration":2283,"isOffset":false,"isSlot":false,"src":"3684:10:14","valueSize":1}],"id":2288,"nodeType":"InlineAssembly","src":"3515:233:14"}]},"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"2917:431:14","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:14","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2281,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:14","nodeType":"VariableDeclaration","scope":2290,"src":"3378:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:14","nodeType":"VariableDeclaration","scope":2290,"src":"3403:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:14"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"digest","nameLocation":"3454:6:14","nodeType":"VariableDeclaration","scope":2290,"src":"3446:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:14"},"scope":2291,"src":"3353:401:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2292,"src":"521:3235:14","usedErrors":[],"usedEvents":[]}],"src":"123:3634:14"},"id":14},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3345]},"id":3346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2293,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"129:73:15","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3345,"linearizedBaseContracts":[3345],"name":"Math","nameLocation":"211:4:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"222:50:15","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2297,"name":"MathOverflowedMulDiv","nameLocation":"283:20:15","nodeType":"ErrorDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[],"src":"303:2:15"},"src":"277:29:15"},{"canonicalName":"Math.Rounding","id":2302,"members":[{"id":2298,"name":"Floor","nameLocation":"336:5:15","nodeType":"EnumValue","src":"336:5:15"},{"id":2299,"name":"Ceil","nameLocation":"379:4:15","nodeType":"EnumValue","src":"379:4:15"},{"id":2300,"name":"Trunc","nameLocation":"421:5:15","nodeType":"EnumValue","src":"421:5:15"},{"id":2301,"name":"Expand","nameLocation":"451:6:15","nodeType":"EnumValue","src":"451:6:15"}],"name":"Rounding","nameLocation":"317:8:15","nodeType":"EnumDefinition","src":"312:169:15"},{"body":{"id":2333,"nodeType":"Block","src":"661:140:15","statements":[{"id":2332,"nodeType":"UncheckedBlock","src":"671:124:15","statements":[{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"c","nameLocation":"703:1:15","nodeType":"VariableDeclaration","scope":2332,"src":"695:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2319,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2316,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"707:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2317,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"711:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"730:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2321,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"734:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2327,"nodeType":"IfStatement","src":"726:28:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2313,"id":2326,"nodeType":"Return","src":"737:17:15"}},{"expression":{"components":[{"hexValue":"74727565","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2329,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"782:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2313,"id":2331,"nodeType":"Return","src":"768:16:15"}]}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"487:93:15","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:15","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"a","nameLocation":"609:1:15","nodeType":"VariableDeclaration","scope":2334,"src":"601:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"b","nameLocation":"620:1:15","nodeType":"VariableDeclaration","scope":2334,"src":"612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:15"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"646:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2309,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"652:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:15"},"scope":3345,"src":"585:216:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2361,"nodeType":"Block","src":"984:113:15","statements":[{"id":2360,"nodeType":"UncheckedBlock","src":"994:97:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2346,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1022:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1026:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2353,"nodeType":"IfStatement","src":"1018:28:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2345,"id":2352,"nodeType":"Return","src":"1029:17:15"}},{"expression":{"components":[{"hexValue":"74727565","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1074:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2356,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"1078:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2345,"id":2359,"nodeType":"Return","src":"1060:20:15"}]}]},"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"807:96:15","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2362,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:15","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"a","nameLocation":"932:1:15","nodeType":"VariableDeclaration","scope":2362,"src":"924:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"b","nameLocation":"943:1:15","nodeType":"VariableDeclaration","scope":2362,"src":"935:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:15"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2362,"src":"969:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2341,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2362,"src":"975:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:15"},"scope":3345,"src":"908:189:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2403,"nodeType":"Block","src":"1283:417:15","statements":[{"id":2402,"nodeType":"UncheckedBlock","src":"1293:401:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1551:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2381,"nodeType":"IfStatement","src":"1547:28:15","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2373,"id":2380,"nodeType":"Return","src":"1559:16:15"}},{"assignments":[2383],"declarations":[{"constant":false,"id":2383,"mutability":"mutable","name":"c","nameLocation":"1597:1:15","nodeType":"VariableDeclaration","scope":2402,"src":"1589:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2387,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1601:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"1605:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"1624:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"1628:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2391,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"1633:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2397,"nodeType":"IfStatement","src":"1620:33:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2373,"id":2396,"nodeType":"Return","src":"1636:17:15"}},{"expression":{"components":[{"hexValue":"74727565","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2399,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"1681:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2373,"id":2401,"nodeType":"Return","src":"1667:16:15"}]}]},"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"1103:99:15","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2404,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:15","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"a","nameLocation":"1231:1:15","nodeType":"VariableDeclaration","scope":2404,"src":"1223:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"b","nameLocation":"1242:1:15","nodeType":"VariableDeclaration","scope":2404,"src":"1234:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:15"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2404,"src":"1268:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2369,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2404,"src":"1274:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:15"},"scope":3345,"src":"1207:493:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2431,"nodeType":"Block","src":"1887:114:15","statements":[{"id":2430,"nodeType":"UncheckedBlock","src":"1897:98:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1925:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2423,"nodeType":"IfStatement","src":"1921:29:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2415,"id":2422,"nodeType":"Return","src":"1933:17:15"}},{"expression":{"components":[{"hexValue":"74727565","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1978:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1982:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2415,"id":2429,"nodeType":"Return","src":"1964:20:15"}]}]},"documentation":{"id":2405,"nodeType":"StructuredDocumentation","src":"1706:100:15","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:15","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"a","nameLocation":"1835:1:15","nodeType":"VariableDeclaration","scope":2432,"src":"1827:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"b","nameLocation":"1846:1:15","nodeType":"VariableDeclaration","scope":2432,"src":"1838:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:15"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2432,"src":"1872:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2411,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2432,"src":"1878:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:15"},"scope":3345,"src":"1811:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"2198:114:15","statements":[{"id":2458,"nodeType":"UncheckedBlock","src":"2208:98:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2444,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2236:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2451,"nodeType":"IfStatement","src":"2232:29:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2443,"id":2450,"nodeType":"Return","src":"2244:17:15"}},{"expression":{"components":[{"hexValue":"74727565","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"2289:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2454,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"2293:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2443,"id":2457,"nodeType":"Return","src":"2275:20:15"}]}]},"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"2007:110:15","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:15","nodeType":"FunctionDefinition","parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"a","nameLocation":"2146:1:15","nodeType":"VariableDeclaration","scope":2460,"src":"2138:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"b","nameLocation":"2157:1:15","nodeType":"VariableDeclaration","scope":2460,"src":"2149:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:15"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"2183:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2439,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"2189:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:15"},"scope":3345,"src":"2122:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2477,"nodeType":"Block","src":"2449:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"2466:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2471,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"2470:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2474,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"2478:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:15","trueExpression":{"id":2473,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"2474:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2469,"id":2476,"nodeType":"Return","src":"2459:20:15"}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"2318:59:15","text":" @dev Returns the largest of two numbers."},"id":2478,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:15","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"a","nameLocation":"2403:1:15","nodeType":"VariableDeclaration","scope":2478,"src":"2395:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"b","nameLocation":"2414:1:15","nodeType":"VariableDeclaration","scope":2478,"src":"2406:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:15"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2478,"src":"2440:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:15"},"scope":3345,"src":"2382:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2495,"nodeType":"Block","src":"2624:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2641:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2489,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2645:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2492,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2653:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:15","trueExpression":{"id":2491,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2649:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2487,"id":2494,"nodeType":"Return","src":"2634:20:15"}]},"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"2492:60:15","text":" @dev Returns the smallest of two numbers."},"id":2496,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:15","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"a","nameLocation":"2578:1:15","nodeType":"VariableDeclaration","scope":2496,"src":"2570:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"b","nameLocation":"2589:1:15","nodeType":"VariableDeclaration","scope":2496,"src":"2581:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:15"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2496,"src":"2615:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:15"},"scope":3345,"src":"2557:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2518,"nodeType":"Block","src":"2845:82:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"2900:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2507,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2904:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"2910:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2511,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"2914:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2505,"id":2517,"nodeType":"Return","src":"2892:28:15"}]},"documentation":{"id":2497,"nodeType":"StructuredDocumentation","src":"2667:102:15","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2519,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:15","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"a","nameLocation":"2799:1:15","nodeType":"VariableDeclaration","scope":2519,"src":"2791:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"b","nameLocation":"2810:1:15","nodeType":"VariableDeclaration","scope":2519,"src":"2802:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:15"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2519,"src":"2836:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:15"},"scope":3345,"src":"2774:153:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2552,"nodeType":"Block","src":"3219:260:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3233:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2537,"nodeType":"IfStatement","src":"3229:127:15","trueBody":{"id":2536,"nodeType":"Block","src":"3241:115:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"3340:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3344:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2528,"id":2535,"nodeType":"Return","src":"3333:12:15"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"3444:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"3458:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"3467:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:15","trueExpression":{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2528,"id":2551,"nodeType":"Return","src":"3437:35:15"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"2933:210:15","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2553,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:15","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"a","nameLocation":"3173:1:15","nodeType":"VariableDeclaration","scope":2553,"src":"3165:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"b","nameLocation":"3184:1:15","nodeType":"VariableDeclaration","scope":2553,"src":"3176:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:15"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2553,"src":"3210:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:15"},"scope":3345,"src":"3148:331:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2678,"nodeType":"Block","src":"3901:4018:15","statements":[{"id":2677,"nodeType":"UncheckedBlock","src":"3911:4002:15","statements":[{"assignments":[2566],"declarations":[{"constant":false,"id":2566,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:15","nodeType":"VariableDeclaration","scope":2677,"src":"4232:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2570,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2567,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"4248:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2568,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"4252:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:15"},{"assignments":[2572],"declarations":[{"constant":false,"id":2572,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:15","nodeType":"VariableDeclaration","scope":2677,"src":"4312:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2573,"nodeType":"VariableDeclarationStatement","src":"4312:13:15"},{"AST":{"nativeSrc":"4392:122:15","nodeType":"YulBlock","src":"4392:122:15","statements":[{"nativeSrc":"4410:30:15","nodeType":"YulVariableDeclaration","src":"4410:30:15","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:15","nodeType":"YulIdentifier","src":"4427:1:15"},{"name":"y","nativeSrc":"4430:1:15","nodeType":"YulIdentifier","src":"4430:1:15"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:15","nodeType":"YulLiteral","src":"4437:1:15","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:15","nodeType":"YulIdentifier","src":"4433:3:15"},"nativeSrc":"4433:6:15","nodeType":"YulFunctionCall","src":"4433:6:15"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:15","nodeType":"YulIdentifier","src":"4420:6:15"},"nativeSrc":"4420:20:15","nodeType":"YulFunctionCall","src":"4420:20:15"},"variables":[{"name":"mm","nativeSrc":"4414:2:15","nodeType":"YulTypedName","src":"4414:2:15","type":""}]},{"nativeSrc":"4457:43:15","nodeType":"YulAssignment","src":"4457:43:15","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:15","nodeType":"YulIdentifier","src":"4474:2:15"},{"name":"prod0","nativeSrc":"4478:5:15","nodeType":"YulIdentifier","src":"4478:5:15"}],"functionName":{"name":"sub","nativeSrc":"4470:3:15","nodeType":"YulIdentifier","src":"4470:3:15"},"nativeSrc":"4470:14:15","nodeType":"YulFunctionCall","src":"4470:14:15"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:15","nodeType":"YulIdentifier","src":"4489:2:15"},{"name":"prod0","nativeSrc":"4493:5:15","nodeType":"YulIdentifier","src":"4493:5:15"}],"functionName":{"name":"lt","nativeSrc":"4486:2:15","nodeType":"YulIdentifier","src":"4486:2:15"},"nativeSrc":"4486:13:15","nodeType":"YulFunctionCall","src":"4486:13:15"}],"functionName":{"name":"sub","nativeSrc":"4466:3:15","nodeType":"YulIdentifier","src":"4466:3:15"},"nativeSrc":"4466:34:15","nodeType":"YulFunctionCall","src":"4466:34:15"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:15","nodeType":"YulIdentifier","src":"4457:5:15"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":2566,"isOffset":false,"isSlot":false,"src":"4478:5:15","valueSize":1},{"declaration":2566,"isOffset":false,"isSlot":false,"src":"4493:5:15","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"4457:5:15","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"4427:1:15","valueSize":1},{"declaration":2558,"isOffset":false,"isSlot":false,"src":"4430:1:15","valueSize":1}],"id":2574,"nodeType":"InlineAssembly","src":"4383:131:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"4595:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2583,"nodeType":"IfStatement","src":"4591:368:15","trueBody":{"id":2582,"nodeType":"Block","src":"4607:352:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2578,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"4925:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2579,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"4933:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2564,"id":2581,"nodeType":"Return","src":"4918:26:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5065:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2585,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5080:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2591,"nodeType":"IfStatement","src":"5061:88:15","trueBody":{"id":2590,"nodeType":"Block","src":"5087:62:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2587,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"5112:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2589,"nodeType":"RevertStatement","src":"5105:29:15"}]}},{"assignments":[2593],"declarations":[{"constant":false,"id":2593,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:15","nodeType":"VariableDeclaration","scope":2677,"src":"5404:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2594,"nodeType":"VariableDeclarationStatement","src":"5404:17:15"},{"AST":{"nativeSrc":"5444:291:15","nodeType":"YulBlock","src":"5444:291:15","statements":[{"nativeSrc":"5513:38:15","nodeType":"YulAssignment","src":"5513:38:15","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:15","nodeType":"YulIdentifier","src":"5533:1:15"},{"name":"y","nativeSrc":"5536:1:15","nodeType":"YulIdentifier","src":"5536:1:15"},{"name":"denominator","nativeSrc":"5539:11:15","nodeType":"YulIdentifier","src":"5539:11:15"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:15","nodeType":"YulIdentifier","src":"5526:6:15"},"nativeSrc":"5526:25:15","nodeType":"YulFunctionCall","src":"5526:25:15"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:15","nodeType":"YulIdentifier","src":"5513:9:15"}]},{"nativeSrc":"5633:41:15","nodeType":"YulAssignment","src":"5633:41:15","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:15","nodeType":"YulIdentifier","src":"5646:5:15"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:15","nodeType":"YulIdentifier","src":"5656:9:15"},{"name":"prod0","nativeSrc":"5667:5:15","nodeType":"YulIdentifier","src":"5667:5:15"}],"functionName":{"name":"gt","nativeSrc":"5653:2:15","nodeType":"YulIdentifier","src":"5653:2:15"},"nativeSrc":"5653:20:15","nodeType":"YulFunctionCall","src":"5653:20:15"}],"functionName":{"name":"sub","nativeSrc":"5642:3:15","nodeType":"YulIdentifier","src":"5642:3:15"},"nativeSrc":"5642:32:15","nodeType":"YulFunctionCall","src":"5642:32:15"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:15","nodeType":"YulIdentifier","src":"5633:5:15"}]},{"nativeSrc":"5691:30:15","nodeType":"YulAssignment","src":"5691:30:15","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:15","nodeType":"YulIdentifier","src":"5704:5:15"},{"name":"remainder","nativeSrc":"5711:9:15","nodeType":"YulIdentifier","src":"5711:9:15"}],"functionName":{"name":"sub","nativeSrc":"5700:3:15","nodeType":"YulIdentifier","src":"5700:3:15"},"nativeSrc":"5700:21:15","nodeType":"YulFunctionCall","src":"5700:21:15"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:15","nodeType":"YulIdentifier","src":"5691:5:15"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":2560,"isOffset":false,"isSlot":false,"src":"5539:11:15","valueSize":1},{"declaration":2566,"isOffset":false,"isSlot":false,"src":"5667:5:15","valueSize":1},{"declaration":2566,"isOffset":false,"isSlot":false,"src":"5691:5:15","valueSize":1},{"declaration":2566,"isOffset":false,"isSlot":false,"src":"5704:5:15","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"5633:5:15","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"5646:5:15","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"5513:9:15","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"5656:9:15","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"5711:9:15","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"5533:1:15","valueSize":1},{"declaration":2558,"isOffset":false,"isSlot":false,"src":"5536:1:15","valueSize":1}],"id":2595,"nodeType":"InlineAssembly","src":"5435:300:15"},{"assignments":[2597],"declarations":[{"constant":false,"id":2597,"mutability":"mutable","name":"twos","nameLocation":"5947:4:15","nodeType":"VariableDeclaration","scope":2677,"src":"5939:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2604,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5954:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2600,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"5973:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:15"},{"AST":{"nativeSrc":"6008:362:15","nodeType":"YulBlock","src":"6008:362:15","statements":[{"nativeSrc":"6073:37:15","nodeType":"YulAssignment","src":"6073:37:15","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:15","nodeType":"YulIdentifier","src":"6092:11:15"},{"name":"twos","nativeSrc":"6105:4:15","nodeType":"YulIdentifier","src":"6105:4:15"}],"functionName":{"name":"div","nativeSrc":"6088:3:15","nodeType":"YulIdentifier","src":"6088:3:15"},"nativeSrc":"6088:22:15","nodeType":"YulFunctionCall","src":"6088:22:15"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:15","nodeType":"YulIdentifier","src":"6073:11:15"}]},{"nativeSrc":"6177:25:15","nodeType":"YulAssignment","src":"6177:25:15","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:15","nodeType":"YulIdentifier","src":"6190:5:15"},{"name":"twos","nativeSrc":"6197:4:15","nodeType":"YulIdentifier","src":"6197:4:15"}],"functionName":{"name":"div","nativeSrc":"6186:3:15","nodeType":"YulIdentifier","src":"6186:3:15"},"nativeSrc":"6186:16:15","nodeType":"YulFunctionCall","src":"6186:16:15"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:15","nodeType":"YulIdentifier","src":"6177:5:15"}]},{"nativeSrc":"6317:39:15","nodeType":"YulAssignment","src":"6317:39:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:15","nodeType":"YulLiteral","src":"6337:1:15","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:15","nodeType":"YulIdentifier","src":"6340:4:15"}],"functionName":{"name":"sub","nativeSrc":"6333:3:15","nodeType":"YulIdentifier","src":"6333:3:15"},"nativeSrc":"6333:12:15","nodeType":"YulFunctionCall","src":"6333:12:15"},{"name":"twos","nativeSrc":"6347:4:15","nodeType":"YulIdentifier","src":"6347:4:15"}],"functionName":{"name":"div","nativeSrc":"6329:3:15","nodeType":"YulIdentifier","src":"6329:3:15"},"nativeSrc":"6329:23:15","nodeType":"YulFunctionCall","src":"6329:23:15"},{"kind":"number","nativeSrc":"6354:1:15","nodeType":"YulLiteral","src":"6354:1:15","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:15","nodeType":"YulIdentifier","src":"6325:3:15"},"nativeSrc":"6325:31:15","nodeType":"YulFunctionCall","src":"6325:31:15"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:15","nodeType":"YulIdentifier","src":"6317:4:15"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":2560,"isOffset":false,"isSlot":false,"src":"6073:11:15","valueSize":1},{"declaration":2560,"isOffset":false,"isSlot":false,"src":"6092:11:15","valueSize":1},{"declaration":2566,"isOffset":false,"isSlot":false,"src":"6177:5:15","valueSize":1},{"declaration":2566,"isOffset":false,"isSlot":false,"src":"6190:5:15","valueSize":1},{"declaration":2597,"isOffset":false,"isSlot":false,"src":"6105:4:15","valueSize":1},{"declaration":2597,"isOffset":false,"isSlot":false,"src":"6197:4:15","valueSize":1},{"declaration":2597,"isOffset":false,"isSlot":false,"src":"6317:4:15","valueSize":1},{"declaration":2597,"isOffset":false,"isSlot":false,"src":"6340:4:15","valueSize":1},{"declaration":2597,"isOffset":false,"isSlot":false,"src":"6347:4:15","valueSize":1}],"id":2605,"nodeType":"InlineAssembly","src":"5999:371:15"},{"expression":{"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2606,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"6436:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"6445:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2608,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"6453:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2611,"nodeType":"ExpressionStatement","src":"6436:21:15"},{"assignments":[2613],"declarations":[{"constant":false,"id":2613,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:15","nodeType":"VariableDeclaration","scope":2677,"src":"6775:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2620,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2615,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"6798:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:15"},{"expression":{"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2621,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7031:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2623,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"7046:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2624,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7060:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2628,"nodeType":"ExpressionStatement","src":"7031:36:15"},{"expression":{"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7100:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"7115:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2632,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7129:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2636,"nodeType":"ExpressionStatement","src":"7100:36:15"},{"expression":{"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2637,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7170:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"7185:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2640,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7199:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2644,"nodeType":"ExpressionStatement","src":"7170:36:15"},{"expression":{"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2645,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7240:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"7255:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2648,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7269:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2652,"nodeType":"ExpressionStatement","src":"7240:36:15"},{"expression":{"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2653,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7310:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2655,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"7325:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2656,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2660,"nodeType":"ExpressionStatement","src":"7310:36:15"},{"expression":{"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2661,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7381:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"7396:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2664,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2668,"nodeType":"ExpressionStatement","src":"7381:36:15"},{"expression":{"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"7851:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"7860:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2671,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7868:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2674,"nodeType":"ExpressionStatement","src":"7851:24:15"},{"expression":{"id":2675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"7896:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2564,"id":2676,"nodeType":"Return","src":"7889:13:15"}]}]},"documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"3485:313:15","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2679,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:15","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"x","nameLocation":"3827:1:15","nodeType":"VariableDeclaration","scope":2679,"src":"3819:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"y","nameLocation":"3838:1:15","nodeType":"VariableDeclaration","scope":2679,"src":"3830:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:15","nodeType":"VariableDeclaration","scope":2679,"src":"3841:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:15"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"result","nameLocation":"3893:6:15","nodeType":"VariableDeclaration","scope":2679,"src":"3885:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:15"},"scope":3345,"src":"3803:4116:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2721,"nodeType":"Block","src":"8161:192:15","statements":[{"assignments":[2695],"declarations":[{"constant":false,"id":2695,"mutability":"mutable","name":"result","nameLocation":"8179:6:15","nodeType":"VariableDeclaration","scope":2721,"src":"8171:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2701,"initialValue":{"arguments":[{"id":2697,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"8195:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2698,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"8198:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2699,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"8201:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2696,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2679,2722],"referencedDeclaration":2679,"src":"8188:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2703,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"8244:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}],"id":2702,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"8227:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2302_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2706,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"8264:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2707,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"8267:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2708,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"8270:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2705,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2718,"nodeType":"IfStatement","src":"8223:101:15","trueBody":{"id":2717,"nodeType":"Block","src":"8288:36:15","statements":[{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"8302:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2716,"nodeType":"ExpressionStatement","src":"8302:11:15"}]}},{"expression":{"id":2719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"8340:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2693,"id":2720,"nodeType":"Return","src":"8333:13:15"}]},"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"7925:121:15","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2722,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:15","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"x","nameLocation":"8075:1:15","nodeType":"VariableDeclaration","scope":2722,"src":"8067:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"y","nameLocation":"8086:1:15","nodeType":"VariableDeclaration","scope":2722,"src":"8078:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:15","nodeType":"VariableDeclaration","scope":2722,"src":"8089:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:15","nodeType":"VariableDeclaration","scope":2722,"src":"8110:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"},"typeName":{"id":2688,"nodeType":"UserDefinedTypeName","pathNode":{"id":2687,"name":"Rounding","nameLocations":["8110:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2302,"src":"8110:8:15"},"referencedDeclaration":2302,"src":"8110:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:15"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2722,"src":"8152:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:15"},"scope":3345,"src":"8051:302:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2833,"nodeType":"Block","src":"8644:1585:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"8658:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2736,"nodeType":"IfStatement","src":"8654:45:15","trueBody":{"id":2735,"nodeType":"Block","src":"8666:33:15","statements":[{"expression":{"hexValue":"30","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2729,"id":2734,"nodeType":"Return","src":"8680:8:15"}]}},{"assignments":[2738],"declarations":[{"constant":false,"id":2738,"mutability":"mutable","name":"result","nameLocation":"9386:6:15","nodeType":"VariableDeclaration","scope":2833,"src":"9378:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2747,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2741,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9406:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2740,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3001,3036],"referencedDeclaration":3001,"src":"9401:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:15"},{"id":2832,"nodeType":"UncheckedBlock","src":"9815:408:15","statements":[{"expression":{"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9839:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9849:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9858:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9862:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2758,"nodeType":"ExpressionStatement","src":"9839:35:15"},{"expression":{"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9888:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9898:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9907:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9911:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2769,"nodeType":"ExpressionStatement","src":"9888:35:15"},{"expression":{"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9937:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9947:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9956:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9960:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2780,"nodeType":"ExpressionStatement","src":"9937:35:15"},{"expression":{"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9986:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"9996:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"10005:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2784,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10009:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2791,"nodeType":"ExpressionStatement","src":"9986:35:15"},{"expression":{"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10035:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10045:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"10054:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10058:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2802,"nodeType":"ExpressionStatement","src":"10035:35:15"},{"expression":{"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10084:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10094:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"10103:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10107:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2813,"nodeType":"ExpressionStatement","src":"10084:35:15"},{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10133:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10143:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"10152:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10156:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"10133:35:15"},{"expression":{"arguments":[{"id":2826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10193:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"10201:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"10205:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2825,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"10189:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2729,"id":2831,"nodeType":"Return","src":"10182:30:15"}]}]},"documentation":{"id":2723,"nodeType":"StructuredDocumentation","src":"8359:223:15","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2834,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:15","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"a","nameLocation":"8609:1:15","nodeType":"VariableDeclaration","scope":2834,"src":"8601:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:15"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2834,"src":"8635:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:15"},"scope":3345,"src":"8587:1642:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2868,"nodeType":"Block","src":"10405:164:15","statements":[{"id":2867,"nodeType":"UncheckedBlock","src":"10415:148:15","statements":[{"assignments":[2846],"declarations":[{"constant":false,"id":2846,"mutability":"mutable","name":"result","nameLocation":"10447:6:15","nodeType":"VariableDeclaration","scope":2867,"src":"10439:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2850,"initialValue":{"arguments":[{"id":2848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"10461:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2847,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2834,2869],"referencedDeclaration":2834,"src":"10456:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"10484:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2853,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"10511:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}],"id":2852,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"10494:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2302_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"10524:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"10533:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"10542:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:15","trueExpression":{"hexValue":"31","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2844,"id":2866,"nodeType":"Return","src":"10477:75:15"}]}]},"documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"10235:89:15","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2869,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:15","nodeType":"FunctionDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"a","nameLocation":"10351:1:15","nodeType":"VariableDeclaration","scope":2869,"src":"10343:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:15","nodeType":"VariableDeclaration","scope":2869,"src":"10354:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"},"typeName":{"id":2839,"nodeType":"UserDefinedTypeName","pathNode":{"id":2838,"name":"Rounding","nameLocations":["10354:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2302,"src":"10354:8:15"},"referencedDeclaration":2302,"src":"10354:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:15"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2869,"src":"10396:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:15"},"scope":3345,"src":"10329:240:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3000,"nodeType":"Block","src":"10760:922:15","statements":[{"assignments":[2878],"declarations":[{"constant":false,"id":2878,"mutability":"mutable","name":"result","nameLocation":"10778:6:15","nodeType":"VariableDeclaration","scope":3000,"src":"10770:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2880,"initialValue":{"hexValue":"30","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:15"},{"id":2997,"nodeType":"UncheckedBlock","src":"10798:855:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"10826:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2895,"nodeType":"IfStatement","src":"10822:99:15","trueBody":{"id":2894,"nodeType":"Block","src":"10844:77:15","statements":[{"expression":{"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"10862:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2889,"nodeType":"ExpressionStatement","src":"10862:13:15"},{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2890,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10893:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"10893:13:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"10938:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"IfStatement","src":"10934:96:15","trueBody":{"id":2909,"nodeType":"Block","src":"10955:75:15","statements":[{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"10973:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2904,"nodeType":"ExpressionStatement","src":"10973:12:15"},{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"11003:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"11003:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11047:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2925,"nodeType":"IfStatement","src":"11043:96:15","trueBody":{"id":2924,"nodeType":"Block","src":"11064:75:15","statements":[{"expression":{"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11082:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2919,"nodeType":"ExpressionStatement","src":"11082:12:15"},{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"11112:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2923,"nodeType":"ExpressionStatement","src":"11112:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11156:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2940,"nodeType":"IfStatement","src":"11152:96:15","trueBody":{"id":2939,"nodeType":"Block","src":"11173:75:15","statements":[{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11191:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2934,"nodeType":"ExpressionStatement","src":"11191:12:15"},{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"11221:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2938,"nodeType":"ExpressionStatement","src":"11221:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11265:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2955,"nodeType":"IfStatement","src":"11261:93:15","trueBody":{"id":2954,"nodeType":"Block","src":"11281:73:15","statements":[{"expression":{"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11299:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2949,"nodeType":"ExpressionStatement","src":"11299:11:15"},{"expression":{"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"11328:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2953,"nodeType":"ExpressionStatement","src":"11328:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11371:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2970,"nodeType":"IfStatement","src":"11367:93:15","trueBody":{"id":2969,"nodeType":"Block","src":"11387:73:15","statements":[{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11405:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"11405:11:15"},{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"11434:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"nodeType":"ExpressionStatement","src":"11434:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11477:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2985,"nodeType":"IfStatement","src":"11473:93:15","trueBody":{"id":2984,"nodeType":"Block","src":"11493:73:15","statements":[{"expression":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11511:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2979,"nodeType":"ExpressionStatement","src":"11511:11:15"},{"expression":{"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"11540:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"nodeType":"ExpressionStatement","src":"11540:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"11583:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2996,"nodeType":"IfStatement","src":"11579:64:15","trueBody":{"id":2995,"nodeType":"Block","src":"11599:44:15","statements":[{"expression":{"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2991,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"11617:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2994,"nodeType":"ExpressionStatement","src":"11617:11:15"}]}}]},{"expression":{"id":2998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"11669:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2876,"id":2999,"nodeType":"Return","src":"11662:13:15"}]},"documentation":{"id":2870,"nodeType":"StructuredDocumentation","src":"10575:119:15","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:15","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"value","nameLocation":"10721:5:15","nodeType":"VariableDeclaration","scope":3001,"src":"10713:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:15"},"returnParameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3001,"src":"10751:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:15"},"scope":3345,"src":"10699:983:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3035,"nodeType":"Block","src":"11915:168:15","statements":[{"id":3034,"nodeType":"UncheckedBlock","src":"11925:152:15","statements":[{"assignments":[3013],"declarations":[{"constant":false,"id":3013,"mutability":"mutable","name":"result","nameLocation":"11957:6:15","nodeType":"VariableDeclaration","scope":3034,"src":"11949:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3017,"initialValue":{"arguments":[{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"11971:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3014,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3001,3036],"referencedDeclaration":3001,"src":"11966:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"11998:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3020,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"12025:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}],"id":3019,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"12008:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2302_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"12043:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12052:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:15","trueExpression":{"hexValue":"31","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3011,"id":3033,"nodeType":"Return","src":"11991:75:15"}]}]},"documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"11688:142:15","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:15","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"value","nameLocation":"11857:5:15","nodeType":"VariableDeclaration","scope":3036,"src":"11849:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:15","nodeType":"VariableDeclaration","scope":3036,"src":"11864:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"},"typeName":{"id":3006,"nodeType":"UserDefinedTypeName","pathNode":{"id":3005,"name":"Rounding","nameLocations":["11864:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2302,"src":"11864:8:15"},"referencedDeclaration":2302,"src":"11864:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:15"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3036,"src":"11906:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:15"},"scope":3345,"src":"11835:248:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"12276:854:15","statements":[{"assignments":[3045],"declarations":[{"constant":false,"id":3045,"mutability":"mutable","name":"result","nameLocation":"12294:6:15","nodeType":"VariableDeclaration","scope":3164,"src":"12286:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3047,"initialValue":{"hexValue":"30","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:15"},{"id":3161,"nodeType":"UncheckedBlock","src":"12314:787:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12342:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3064,"nodeType":"IfStatement","src":"12338:103:15","trueBody":{"id":3063,"nodeType":"Block","src":"12361:80:15","statements":[{"expression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12379:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3058,"nodeType":"ExpressionStatement","src":"12379:17:15"},{"expression":{"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3059,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"12414:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3062,"nodeType":"ExpressionStatement","src":"12414:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12458:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3081,"nodeType":"IfStatement","src":"12454:103:15","trueBody":{"id":3080,"nodeType":"Block","src":"12477:80:15","statements":[{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12495:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"12495:17:15"},{"expression":{"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"12530:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3079,"nodeType":"ExpressionStatement","src":"12530:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12574:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3098,"nodeType":"IfStatement","src":"12570:103:15","trueBody":{"id":3097,"nodeType":"Block","src":"12593:80:15","statements":[{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12611:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"12611:17:15"},{"expression":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"12646:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3096,"nodeType":"ExpressionStatement","src":"12646:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12690:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3115,"nodeType":"IfStatement","src":"12686:100:15","trueBody":{"id":3114,"nodeType":"Block","src":"12708:78:15","statements":[{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12726:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"nodeType":"ExpressionStatement","src":"12726:16:15"},{"expression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3110,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"12760:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3113,"nodeType":"ExpressionStatement","src":"12760:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12803:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3132,"nodeType":"IfStatement","src":"12799:100:15","trueBody":{"id":3131,"nodeType":"Block","src":"12821:78:15","statements":[{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12839:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3126,"nodeType":"ExpressionStatement","src":"12839:16:15"},{"expression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"12873:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3130,"nodeType":"ExpressionStatement","src":"12873:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12916:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3149,"nodeType":"IfStatement","src":"12912:100:15","trueBody":{"id":3148,"nodeType":"Block","src":"12934:78:15","statements":[{"expression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"12952:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3143,"nodeType":"ExpressionStatement","src":"12952:16:15"},{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"12986:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3147,"nodeType":"ExpressionStatement","src":"12986:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"13029:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3160,"nodeType":"IfStatement","src":"13025:66:15","trueBody":{"id":3159,"nodeType":"Block","src":"13047:44:15","statements":[{"expression":{"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"13065:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3158,"nodeType":"ExpressionStatement","src":"13065:11:15"}]}}]},{"expression":{"id":3162,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"13117:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3043,"id":3163,"nodeType":"Return","src":"13110:13:15"}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"12089:120:15","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:15","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"value","nameLocation":"12237:5:15","nodeType":"VariableDeclaration","scope":3165,"src":"12229:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:15"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"12267:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:15"},"scope":3345,"src":"12214:916:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3199,"nodeType":"Block","src":"13365:170:15","statements":[{"id":3198,"nodeType":"UncheckedBlock","src":"13375:154:15","statements":[{"assignments":[3177],"declarations":[{"constant":false,"id":3177,"mutability":"mutable","name":"result","nameLocation":"13407:6:15","nodeType":"VariableDeclaration","scope":3198,"src":"13399:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3181,"initialValue":{"arguments":[{"id":3179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"13422:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3165,3200],"referencedDeclaration":3165,"src":"13416:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"13449:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3184,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"13476:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}],"id":3183,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"13459:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2302_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"13495:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"13504:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:15","trueExpression":{"hexValue":"31","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3175,"id":3197,"nodeType":"Return","src":"13442:76:15"}]}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"13136:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3200,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:15","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"value","nameLocation":"13307:5:15","nodeType":"VariableDeclaration","scope":3200,"src":"13299:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:15","nodeType":"VariableDeclaration","scope":3200,"src":"13314:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"},"typeName":{"id":3170,"nodeType":"UserDefinedTypeName","pathNode":{"id":3169,"name":"Rounding","nameLocations":["13314:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2302,"src":"13314:8:15"},"referencedDeclaration":2302,"src":"13314:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:15"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3200,"src":"13356:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:15"},"scope":3345,"src":"13284:251:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"13855:600:15","statements":[{"assignments":[3209],"declarations":[{"constant":false,"id":3209,"mutability":"mutable","name":"result","nameLocation":"13873:6:15","nodeType":"VariableDeclaration","scope":3286,"src":"13865:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3211,"initialValue":{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:15"},{"id":3283,"nodeType":"UncheckedBlock","src":"13893:533:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"13921:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3226,"nodeType":"IfStatement","src":"13917:98:15","trueBody":{"id":3225,"nodeType":"Block","src":"13939:76:15","statements":[{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"13957:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3220,"nodeType":"ExpressionStatement","src":"13957:13:15"},{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"13988:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3224,"nodeType":"ExpressionStatement","src":"13988:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"14032:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3241,"nodeType":"IfStatement","src":"14028:95:15","trueBody":{"id":3240,"nodeType":"Block","src":"14049:74:15","statements":[{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"14067:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3235,"nodeType":"ExpressionStatement","src":"14067:12:15"},{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"14097:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"14097:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"14140:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3256,"nodeType":"IfStatement","src":"14136:95:15","trueBody":{"id":3255,"nodeType":"Block","src":"14157:74:15","statements":[{"expression":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"14175:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3250,"nodeType":"ExpressionStatement","src":"14175:12:15"},{"expression":{"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"14205:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3254,"nodeType":"ExpressionStatement","src":"14205:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"14248:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3271,"nodeType":"IfStatement","src":"14244:95:15","trueBody":{"id":3270,"nodeType":"Block","src":"14265:74:15","statements":[{"expression":{"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"14283:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3265,"nodeType":"ExpressionStatement","src":"14283:12:15"},{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"14313:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3269,"nodeType":"ExpressionStatement","src":"14313:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"14356:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3282,"nodeType":"IfStatement","src":"14352:64:15","trueBody":{"id":3281,"nodeType":"Block","src":"14372:44:15","statements":[{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"14390:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"nodeType":"ExpressionStatement","src":"14390:11:15"}]}}]},{"expression":{"id":3284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"14442:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3207,"id":3285,"nodeType":"Return","src":"14435:13:15"}]},"documentation":{"id":3201,"nodeType":"StructuredDocumentation","src":"13541:246:15","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:15","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"value","nameLocation":"13816:5:15","nodeType":"VariableDeclaration","scope":3287,"src":"13808:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:15"},"returnParameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"13846:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:15"},"scope":3345,"src":"13792:663:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3324,"nodeType":"Block","src":"14692:177:15","statements":[{"id":3323,"nodeType":"UncheckedBlock","src":"14702:161:15","statements":[{"assignments":[3299],"declarations":[{"constant":false,"id":3299,"mutability":"mutable","name":"result","nameLocation":"14734:6:15","nodeType":"VariableDeclaration","scope":3323,"src":"14726:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3303,"initialValue":{"arguments":[{"id":3301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"14750:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3300,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3287,3325],"referencedDeclaration":3287,"src":"14743:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"14777:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3306,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"14804:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}],"id":3305,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"14787:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2302_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"14823:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"14838:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:15","trueExpression":{"hexValue":"31","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3297,"id":3322,"nodeType":"Return","src":"14770:82:15"}]}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"14461:144:15","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:15","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"value","nameLocation":"14634:5:15","nodeType":"VariableDeclaration","scope":3325,"src":"14626:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:15","nodeType":"VariableDeclaration","scope":3325,"src":"14641:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"},"typeName":{"id":3292,"nodeType":"UserDefinedTypeName","pathNode":{"id":3291,"name":"Rounding","nameLocations":["14641:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2302,"src":"14641:8:15"},"referencedDeclaration":2302,"src":"14641:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:15"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3325,"src":"14683:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:15"},"scope":3345,"src":"14610:259:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3343,"nodeType":"Block","src":"15067:48:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3336,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3329,"src":"15090:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}],"id":3335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3334,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:15","typeDescriptions":{}}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3333,"id":3342,"nodeType":"Return","src":"15077:31:15"}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"14875:113:15","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:15","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:15","nodeType":"VariableDeclaration","scope":3344,"src":"15019:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"},"typeName":{"id":3328,"nodeType":"UserDefinedTypeName","pathNode":{"id":3327,"name":"Rounding","nameLocations":["15019:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2302,"src":"15019:8:15"},"referencedDeclaration":2302,"src":"15019:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2302","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:15"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3344,"src":"15061:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3331,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:15"},"scope":3345,"src":"14993:122:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3346,"src":"203:14914:15","usedErrors":[2297],"usedEvents":[]}],"src":"103:15015:15"},"id":15},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3450]},"id":3451,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3347,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"135:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3450,"linearizedBaseContracts":[3450],"name":"SignedMath","nameLocation":"224:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3365,"nodeType":"Block","src":"376:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"393:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"397:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3362,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"405:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:16","trueExpression":{"id":3361,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"401:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3357,"id":3364,"nodeType":"Return","src":"386:20:16"}]},"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"241:66:16","text":" @dev Returns the largest of two signed numbers."},"id":3366,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:16","nodeType":"FunctionDefinition","parameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"a","nameLocation":"332:1:16","nodeType":"VariableDeclaration","scope":3366,"src":"325:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3350,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"b","nameLocation":"342:1:16","nodeType":"VariableDeclaration","scope":3366,"src":"335:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3352,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:16"},"returnParameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3366,"src":"368:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3355,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:16"},"scope":3450,"src":"312:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3383,"nodeType":"Block","src":"555:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"572:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"576:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3380,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"584:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:16","trueExpression":{"id":3379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"580:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3375,"id":3382,"nodeType":"Return","src":"565:20:16"}]},"documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"419:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":3384,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:16","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"a","nameLocation":"511:1:16","nodeType":"VariableDeclaration","scope":3384,"src":"504:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3368,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3371,"mutability":"mutable","name":"b","nameLocation":"521:1:16","nodeType":"VariableDeclaration","scope":3384,"src":"514:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3370,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:16"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3384,"src":"547:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3373,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:16"},"scope":3450,"src":"491:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3427,"nodeType":"Block","src":"797:162:16","statements":[{"assignments":[3395],"declarations":[{"constant":false,"id":3395,"mutability":"mutable","name":"x","nameLocation":"866:1:16","nodeType":"VariableDeclaration","scope":3427,"src":"859:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3394,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3408,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"871:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3397,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"875:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"882:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3401,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"886:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"911:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3414,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"931:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:16","typeDescriptions":{}}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3410,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:16","typeDescriptions":{}}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3419,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"945:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3420,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"949:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3393,"id":3426,"nodeType":"Return","src":"904:48:16"}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"598:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3428,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:16","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"a","nameLocation":"753:1:16","nodeType":"VariableDeclaration","scope":3428,"src":"746:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3386,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"b","nameLocation":"763:1:16","nodeType":"VariableDeclaration","scope":3428,"src":"756:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3388,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:16"},"returnParameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3428,"src":"789:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3391,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:16"},"scope":3450,"src":"729:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3448,"nodeType":"Block","src":"1103:158:16","statements":[{"id":3447,"nodeType":"UncheckedBlock","src":"1113:142:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"1228:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:16","subExpression":{"id":3442,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"1242:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:16","trueExpression":{"id":3441,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"1237:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:16","typeDescriptions":{}}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3435,"id":3446,"nodeType":"Return","src":"1213:31:16"}]}]},"documentation":{"id":3429,"nodeType":"StructuredDocumentation","src":"965:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3449,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:16","nodeType":"FunctionDefinition","parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3431,"mutability":"mutable","name":"n","nameLocation":"1068:1:16","nodeType":"VariableDeclaration","scope":3449,"src":"1061:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3430,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:16"},"returnParameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3449,"src":"1094:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:16"},"scope":3450,"src":"1048:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3451,"src":"216:1047:16","usedErrors":[],"usedEvents":[]}],"src":"109:1155:16"},"id":16},"contracts/Farmer.sol":{"ast":{"absolutePath":"contracts/Farmer.sol","exportedSymbols":{"ECDSA":[1990],"EIP712":[2217],"ERC20":[676],"ERC20Permit":[908],"Farmer":[3695],"IERC20":[754],"IERC20Permit":[970],"Nonces":[1060]},"id":3696,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3452,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":3453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":909,"src":"58:72:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":755,"src":"131:56:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Farmer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3695,"linearizedBaseContracts":[3695],"name":"Farmer","nameLocation":"199:6:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"4f367b32","id":3457,"mutability":"mutable","name":"vegrowwToken","nameLocation":"227:12:17","nodeType":"VariableDeclaration","scope":3695,"src":"213:26:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"},"typeName":{"id":3456,"nodeType":"UserDefinedTypeName","pathNode":{"id":3455,"name":"IERC20","nameLocations":["213:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":754,"src":"213:6:17"},"referencedDeclaration":754,"src":"213:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"id":3462,"mutability":"mutable","name":"farmerDetailsMap","nameLocation":"317:16:17","nodeType":"VariableDeclaration","scope":3695,"src":"283:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FarmerDetails_$3481_storage_$","typeString":"mapping(address => struct Farmer.FarmerDetails)"},"typeName":{"id":3461,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3458,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"283:33:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FarmerDetails_$3481_storage_$","typeString":"mapping(address => struct Farmer.FarmerDetails)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3460,"nodeType":"UserDefinedTypeName","pathNode":{"id":3459,"name":"FarmerDetails","nameLocations":["302:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":3481,"src":"302:13:17"},"referencedDeclaration":3481,"src":"302:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_storage_ptr","typeString":"struct Farmer.FarmerDetails"}}},"visibility":"internal"},{"body":{"id":3473,"nodeType":"Block","src":"374:101:17","statements":[{"expression":{"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3467,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"432:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3469,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"454:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3468,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"447:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$754_$","typeString":"type(contract IERC20)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"447:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"src":"432:36:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3472,"nodeType":"ExpressionStatement","src":"432:36:17"}]},"id":3474,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"_tokenAddress","nameLocation":"359:13:17","nodeType":"VariableDeclaration","scope":3474,"src":"351:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3463,"name":"address","nodeType":"ElementaryTypeName","src":"351:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"350:23:17"},"returnParameters":{"id":3466,"nodeType":"ParameterList","parameters":[],"src":"374:0:17"},"scope":3695,"src":"339:136:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"Farmer.FarmerDetails","id":3481,"members":[{"constant":false,"id":3476,"mutability":"mutable","name":"walletAddress","nameLocation":"520:13:17","nodeType":"VariableDeclaration","scope":3481,"src":"512:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3475,"name":"address","nodeType":"ElementaryTypeName","src":"512:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"rating","nameLocation":"550:6:17","nodeType":"VariableDeclaration","scope":3481,"src":"543:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3477,"name":"uint32","nodeType":"ElementaryTypeName","src":"543:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"numberOfRatings","nameLocation":"571:15:17","nodeType":"VariableDeclaration","scope":3481,"src":"566:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint","nodeType":"ElementaryTypeName","src":"566:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FarmerDetails","nameLocation":"489:13:17","nodeType":"StructDefinition","scope":3695,"src":"482:111:17","visibility":"public"},{"body":{"id":3496,"nodeType":"Block","src":"686:114:17","statements":[{"expression":{"arguments":[{"id":3492,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"778:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3493,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"785:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3490,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"755:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"768:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":731,"src":"755:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"755:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3489,"id":3495,"nodeType":"Return","src":"748:45:17"}]},"functionSelector":"8b099b23","id":3497,"implemented":true,"kind":"function","modifiers":[],"name":"checkAllowance","nameLocation":"609:14:17","nodeType":"FunctionDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"owner","nameLocation":"632:5:17","nodeType":"VariableDeclaration","scope":3497,"src":"624:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3482,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"spender","nameLocation":"647:7:17","nodeType":"VariableDeclaration","scope":3497,"src":"639:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"639:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"623:32:17"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3497,"src":"677:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"676:9:17"},"scope":3695,"src":"600:200:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3523,"nodeType":"Block","src":"885:158:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3507,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"934:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Farmer_$3695","typeString":"contract Farmer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Farmer_$3695","typeString":"contract Farmer"}],"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3505,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:17","typeDescriptions":{}}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3503,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"903:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"916:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":711,"src":"903:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3510,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"944:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"903:53:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":3502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"895:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"895:84:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3514,"nodeType":"ExpressionStatement","src":"895:84:17"},{"expression":{"arguments":[{"expression":{"id":3518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1011:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1015:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1011:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3520,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"1023:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3515,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"989:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1002:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":721,"src":"989:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"989:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3522,"nodeType":"ExpressionStatement","src":"989:47:17"}]},"functionSelector":"da30923f","id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"transferTokensToFarmer","nameLocation":"836:22:17","nodeType":"FunctionDefinition","parameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"rewardAmount","nameLocation":"864:12:17","nodeType":"VariableDeclaration","scope":3524,"src":"859:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3498,"name":"uint","nodeType":"ElementaryTypeName","src":"859:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"858:19:17"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[],"src":"885:0:17"},"scope":3695,"src":"827:216:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3576,"nodeType":"Block","src":"1140:369:17","statements":[{"assignments":[3532],"declarations":[{"constant":false,"id":3532,"mutability":"mutable","name":"farmerAddress","nameLocation":"1158:13:17","nodeType":"VariableDeclaration","scope":3576,"src":"1150:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3531,"name":"address","nodeType":"ElementaryTypeName","src":"1150:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3535,"initialValue":{"expression":{"id":3533,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1174:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1178:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1174:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1150:34:17"},{"assignments":[3537],"declarations":[{"constant":false,"id":3537,"mutability":"mutable","name":"finalCost","nameLocation":"1202:9:17","nodeType":"VariableDeclaration","scope":3576,"src":"1194:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1194:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3539,"initialValue":{"id":3538,"name":"itemsCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"1214:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1194:29:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3540,"name":"farmerDetailsMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"1237:16:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FarmerDetails_$3481_storage_$","typeString":"mapping(address => struct Farmer.FarmerDetails storage ref)"}},"id":3542,"indexExpression":{"id":3541,"name":"farmerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1254:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1237:31:17","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_storage","typeString":"struct Farmer.FarmerDetails storage ref"}},"id":3543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1269:6:17","memberName":"rating","nodeType":"MemberAccess","referencedDeclaration":3478,"src":"1237:38:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"35","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1279:1:17","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1237:43:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3556,"nodeType":"IfStatement","src":"1233:107:17","trueBody":{"id":3555,"nodeType":"Block","src":"1281:59:17","statements":[{"expression":{"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3546,"name":"finalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"1295:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"itemsCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"1308:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1320:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1308:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1307:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1307:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1295:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3554,"nodeType":"ExpressionStatement","src":"1295:34:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1380:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1384:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1380:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3558,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"1357:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1370:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":711,"src":"1357:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1357:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3563,"name":"finalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"1395:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1357:47:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1406:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":3557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3567,"nodeType":"ExpressionStatement","src":"1349:78:17"},{"expression":{"arguments":[{"id":3571,"name":"farmerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1463:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3572,"name":"vendorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"1477:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3573,"name":"finalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"1492:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3568,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"1437:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1450:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":753,"src":"1437:25:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3575,"nodeType":"ExpressionStatement","src":"1437:65:17"}]},"functionSelector":"1718b22e","id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"buyProducts","nameLocation":"1079:11:17","nodeType":"FunctionDefinition","parameters":{"id":3529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"vendorAddress","nameLocation":"1099:13:17","nodeType":"VariableDeclaration","scope":3577,"src":"1091:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3525,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3528,"mutability":"mutable","name":"itemsCost","nameLocation":"1122:9:17","nodeType":"VariableDeclaration","scope":3577,"src":"1114:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1114:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1090:42:17"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[],"src":"1140:0:17"},"scope":3695,"src":"1070:439:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3615,"nodeType":"Block","src":"1607:222:17","statements":[{"assignments":[3586],"declarations":[{"constant":false,"id":3586,"mutability":"mutable","name":"thisFarmer","nameLocation":"1638:10:17","nodeType":"VariableDeclaration","scope":3615,"src":"1617:31:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_memory_ptr","typeString":"struct Farmer.FarmerDetails"},"typeName":{"id":3585,"nodeType":"UserDefinedTypeName","pathNode":{"id":3584,"name":"FarmerDetails","nameLocations":["1617:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":3481,"src":"1617:13:17"},"referencedDeclaration":3481,"src":"1617:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_storage_ptr","typeString":"struct Farmer.FarmerDetails"}},"visibility":"internal"}],"id":3590,"initialValue":{"baseExpression":{"id":3587,"name":"farmerDetailsMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"1651:16:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FarmerDetails_$3481_storage_$","typeString":"mapping(address => struct Farmer.FarmerDetails storage ref)"}},"id":3589,"indexExpression":{"id":3588,"name":"farmerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"1668:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1651:31:17","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_storage","typeString":"struct Farmer.FarmerDetails storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1617:65:17"},{"expression":{"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3591,"name":"thisFarmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"1692:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_memory_ptr","typeString":"struct Farmer.FarmerDetails memory"}},"id":3593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1703:15:17","memberName":"numberOfRatings","nodeType":"MemberAccess","referencedDeclaration":3480,"src":"1692:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1692:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3596,"nodeType":"ExpressionStatement","src":"1692:30:17"},{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3597,"name":"thisFarmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"1732:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_memory_ptr","typeString":"struct Farmer.FarmerDetails memory"}},"id":3599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1743:6:17","memberName":"rating","nodeType":"MemberAccess","referencedDeclaration":3478,"src":"1732:17:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3602,"name":"thisFarmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"1759:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_memory_ptr","typeString":"struct Farmer.FarmerDetails memory"}},"id":3603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1770:6:17","memberName":"rating","nodeType":"MemberAccess","referencedDeclaration":3478,"src":"1759:17:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3604,"name":"rating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"1779:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1759:26:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1752:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3600,"name":"uint32","nodeType":"ElementaryTypeName","src":"1752:6:17","typeDescriptions":{}}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"expression":{"id":3609,"name":"thisFarmer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"1795:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_memory_ptr","typeString":"struct Farmer.FarmerDetails memory"}},"id":3610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1806:15:17","memberName":"numberOfRatings","nodeType":"MemberAccess","referencedDeclaration":3480,"src":"1795:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1788:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3607,"name":"uint32","nodeType":"ElementaryTypeName","src":"1788:6:17","typeDescriptions":{}}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1788:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1752:70:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1732:90:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3614,"nodeType":"ExpressionStatement","src":"1732:90:17"}]},"functionSelector":"ede1e416","id":3616,"implemented":true,"kind":"function","modifiers":[],"name":"rateFarmer","nameLocation":"1547:10:17","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"farmerAddress","nameLocation":"1566:13:17","nodeType":"VariableDeclaration","scope":3616,"src":"1558:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3578,"name":"address","nodeType":"ElementaryTypeName","src":"1558:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"rating","nameLocation":"1588:6:17","nodeType":"VariableDeclaration","scope":3616,"src":"1581:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3580,"name":"uint32","nodeType":"ElementaryTypeName","src":"1581:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1557:38:17"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[],"src":"1607:0:17"},"scope":3695,"src":"1538:291:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3628,"nodeType":"Block","src":"1910:62:17","statements":[{"expression":{"expression":{"baseExpression":{"id":3623,"name":"farmerDetailsMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"1927:16:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FarmerDetails_$3481_storage_$","typeString":"mapping(address => struct Farmer.FarmerDetails storage ref)"}},"id":3625,"indexExpression":{"id":3624,"name":"farmerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"1944:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1927:31:17","typeDescriptions":{"typeIdentifier":"t_struct$_FarmerDetails_$3481_storage","typeString":"struct Farmer.FarmerDetails storage ref"}},"id":3626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1959:6:17","memberName":"rating","nodeType":"MemberAccess","referencedDeclaration":3478,"src":"1927:38:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3622,"id":3627,"nodeType":"Return","src":"1920:45:17"}]},"functionSelector":"f9fa5732","id":3629,"implemented":true,"kind":"function","modifiers":[],"name":"getFarmerRating","nameLocation":"1844:15:17","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"farmerAddress","nameLocation":"1868:13:17","nodeType":"VariableDeclaration","scope":3629,"src":"1860:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3617,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1859:23:17"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3629,"src":"1903:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3620,"name":"uint32","nodeType":"ElementaryTypeName","src":"1903:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1902:8:17"},"scope":3695,"src":"1835:137:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3660,"nodeType":"Block","src":"2067:208:17","statements":[{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"vendorAddress","nameLocation":"2085:13:17","nodeType":"VariableDeclaration","scope":3660,"src":"2077:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"2077:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3640,"initialValue":{"expression":{"id":3638,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2101:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2105:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2101:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2077:34:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3644,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2152:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2156:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2152:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3642,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"2129:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":711,"src":"2129:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2129:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3647,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"2167:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2129:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2175:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":3641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3651,"nodeType":"ExpressionStatement","src":"2121:75:17"},{"expression":{"arguments":[{"id":3655,"name":"vendorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"2232:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3656,"name":"farmerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"2246:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3657,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"2261:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3652,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"2206:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2219:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":753,"src":"2206:25:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2206:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3659,"nodeType":"ExpressionStatement","src":"2206:62:17"}]},"functionSelector":"0cf5946b","id":3661,"implemented":true,"kind":"function","modifiers":[],"name":"payFarmer","nameLocation":"2010:9:17","nodeType":"FunctionDefinition","parameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"farmerAddress","nameLocation":"2028:13:17","nodeType":"VariableDeclaration","scope":3661,"src":"2020:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3630,"name":"address","nodeType":"ElementaryTypeName","src":"2020:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"amount","nameLocation":"2051:6:17","nodeType":"VariableDeclaration","scope":3661,"src":"2043:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2043:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2019:39:17"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[],"src":"2067:0:17"},"scope":3695,"src":"2001:274:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3693,"nodeType":"Block","src":"2355:241:17","statements":[{"assignments":[3667],"declarations":[{"constant":false,"id":3667,"mutability":"mutable","name":"subscriberAddress","nameLocation":"2373:17:17","nodeType":"VariableDeclaration","scope":3693,"src":"2365:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"2365:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3670,"initialValue":{"expression":{"id":3668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2393:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2397:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2393:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2365:38:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2444:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2448:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2444:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3672,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"2421:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2434:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":711,"src":"2421:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3677,"name":"subscribtionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"2459:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2421:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2479:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":3671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2413:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2413:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3681,"nodeType":"ExpressionStatement","src":"2413:87:17"},{"expression":{"arguments":[{"id":3685,"name":"subscriberAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"2536:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3688,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2563:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Farmer_$3695","typeString":"contract Farmer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Farmer_$3695","typeString":"contract Farmer"}],"id":3687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2555:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3686,"name":"address","nodeType":"ElementaryTypeName","src":"2555:7:17","typeDescriptions":{}}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2555:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3690,"name":"subscribtionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"2570:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3682,"name":"vegrowwToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"2510:12:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$754","typeString":"contract IERC20"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2523:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":753,"src":"2510:25:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:79:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3692,"nodeType":"ExpressionStatement","src":"2510:79:17"}]},"functionSelector":"0f574ba7","id":3694,"implemented":true,"kind":"function","modifiers":[],"name":"subscribe","nameLocation":"2310:9:17","nodeType":"FunctionDefinition","parameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"subscribtionAmount","nameLocation":"2328:18:17","nodeType":"VariableDeclaration","scope":3694,"src":"2320:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"2320:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2319:28:17"},"returnParameters":{"id":3665,"nodeType":"ParameterList","parameters":[],"src":"2355:0:17"},"scope":3695,"src":"2301:295:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3696,"src":"190:2412:17","usedErrors":[],"usedEvents":[]}],"src":"32:2570:17"},"id":17},"contracts/Storage.sol":{"ast":{"absolutePath":"contracts/Storage.sol","exportedSymbols":{"Storage":[3737]},"id":3738,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3697,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"37:31:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Storage","contractDependencies":[],"contractKind":"contract","documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"70:128:18","text":" @title Storage\n @dev Store & retrieve value in a variable\n @custom:dev-run-script ./scripts/deploy_with_ethers.ts"},"fullyImplemented":true,"id":3737,"linearizedBaseContracts":[3737],"name":"Storage","nameLocation":"208:7:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3700,"mutability":"mutable","name":"number","nameLocation":"231:6:18","nodeType":"VariableDeclaration","scope":3737,"src":"223:14:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"223:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"f968ef841feb103aafe6a7faf747366409c985dbe99998d2ab7ecd867096542c","id":3704,"name":"StoreEvent","nameLocation":"276:10:18","nodeType":"EventDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"295:5:18","nodeType":"VariableDeclaration","scope":3704,"src":"287:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3701,"name":"address","nodeType":"ElementaryTypeName","src":"287:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"286:15:18"},"src":"270:32:18"},{"body":{"id":3726,"nodeType":"Block","src":"429:176:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"495:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313030","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"501:3:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"495:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e756d626572206d757374206265203c20313030","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"506:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4","typeString":"literal_string \"Number must be < 100\""},"value":"Number must be < 100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4","typeString":"literal_string \"Number must be < 100\""}],"id":3710,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"487:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"487:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3716,"nodeType":"ExpressionStatement","src":"487:42:18"},{"eventCall":{"arguments":[{"expression":{"id":3718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"565:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"569:6:18","memberName":"sender","nodeType":"MemberAccess","src":"565:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3717,"name":"StoreEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"554:10:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"554:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3721,"nodeType":"EmitStatement","src":"549:27:18"},{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3722,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"586:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3723,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"595:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"586:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"586:12:18"}]},"documentation":{"id":3705,"nodeType":"StructuredDocumentation","src":"309:80:18","text":" @dev Store value in variable\n @param num value to store"},"functionSelector":"6057361d","id":3727,"implemented":true,"kind":"function","modifiers":[],"name":"store","nameLocation":"403:5:18","nodeType":"FunctionDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"num","nameLocation":"417:3:18","nodeType":"VariableDeclaration","scope":3727,"src":"409:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"409:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:13:18"},"returnParameters":{"id":3709,"nodeType":"ParameterList","parameters":[],"src":"429:0:18"},"scope":3737,"src":"394:211:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3735,"nodeType":"Block","src":"735:30:18","statements":[{"expression":{"id":3733,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"752:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3732,"id":3734,"nodeType":"Return","src":"745:13:18"}]},"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"611:70:18","text":" @dev Return value \n @return value of 'number'"},"functionSelector":"2e64cec1","id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"retrieve","nameLocation":"695:8:18","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[],"src":"703:2:18"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3736,"src":"727:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"727:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"726:9:18"},"scope":3737,"src":"686:79:18","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3738,"src":"199:568:18","usedErrors":[],"usedEvents":[3704]}],"src":"37:730:18"},"id":18},"contracts/VeGroww.sol":{"ast":{"absolutePath":"contracts/VeGroww.sol","exportedSymbols":{"Context":[992],"ECDSA":[1990],"EIP712":[2217],"ERC20":[676],"ERC20Permit":[908],"IERC20":[754],"IERC20Errors":[66],"IERC20Metadata":[934],"IERC20Permit":[970],"Nonces":[1060],"VeGroww":[3768]},"id":3769,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3739,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3769,"sourceUnit":677,"src":"58:55:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":3741,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3769,"sourceUnit":909,"src":"114:72:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3742,"name":"ERC20","nameLocations":["208:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"208:5:19"},"id":3743,"nodeType":"InheritanceSpecifier","src":"208:5:19"},{"baseName":{"id":3744,"name":"ERC20Permit","nameLocations":["215:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":908,"src":"215:11:19"},"id":3745,"nodeType":"InheritanceSpecifier","src":"215:11:19"}],"canonicalName":"VeGroww","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3768,"linearizedBaseContracts":[3768,908,1060,2217,24,970,676,66,934,754,992],"name":"VeGroww","nameLocation":"197:7:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3766,"nodeType":"Block","src":"293:59:19","statements":[{"expression":{"arguments":[{"expression":{"id":3756,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"309:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"313:6:19","memberName":"sender","nodeType":"MemberAccess","src":"309:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"321:4:19","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"328:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3760,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"334:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"334:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"328:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"321:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3755,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"303:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"303:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3765,"nodeType":"ExpressionStatement","src":"303:42:19"}]},"id":3767,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"566547726f7777","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"253:9:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4633a837cf9d5faafcfc6f53c5878f3d05e0a6e1d4bf42059c38961c52c4234","typeString":"literal_string \"VeGroww\""},"value":"VeGroww"},{"hexValue":"5647","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"264:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8fb8582e0cb5efd56a2ea4e8f00b448aa277b4a8dbf267fdf54166e445c751ae","typeString":"literal_string \"VG\""},"value":"VG"}],"id":3750,"kind":"baseConstructorSpecifier","modifierName":{"id":3747,"name":"ERC20","nameLocations":["247:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"247:5:19"},"nodeType":"ModifierInvocation","src":"247:22:19"},{"arguments":[{"hexValue":"566547726f7777","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"282:9:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4633a837cf9d5faafcfc6f53c5878f3d05e0a6e1d4bf42059c38961c52c4234","typeString":"literal_string \"VeGroww\""},"value":"VeGroww"}],"id":3753,"kind":"baseConstructorSpecifier","modifierName":{"id":3751,"name":"ERC20Permit","nameLocations":["270:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":908,"src":"270:11:19"},"nodeType":"ModifierInvocation","src":"270:22:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3746,"nodeType":"ParameterList","parameters":[],"src":"244:2:19"},"returnParameters":{"id":3754,"nodeType":"ParameterList","parameters":[],"src":"293:0:19"},"scope":3768,"src":"233:119:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3769,"src":"188:171:19","usedErrors":[36,41,46,55,60,65,785,792,1002,1074,1076,1653,1658,1663],"usedEvents":[4,688,697]}],"src":"32:327:19"},"id":19}},"contracts":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201b36b13f0b0e71cc107af824a461d0236699563c105aa8568878382d462584fb64736f6c63430008150033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL CALLDATASIZE 0xB1 EXTCODEHASH SIGNEXTEND 0xE PUSH18 0xCC107AF824A461D0236699563C105AA85688 PUSH25 0x382D462584FB64736F6C634300081500330000000000000000 ","sourceMap":"1255:3053:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201b36b13f0b0e71cc107af824a461d0236699563c105aa8568878382d462584fb64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL CALLDATASIZE 0xB1 EXTCODEHASH SIGNEXTEND 0xE PUSH18 0xCC107AF824A461D0236699563C105AA85688 PUSH25 0x382D462584FB64736F6C634300081500330000000000000000 ","sourceMap":"1255:3053:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 KECCAK256 CALLER PUSH19 0x92F0BB5FEB484DD266E51E0E52C5D8F56D6EB9 DUP14 SWAP7 SAR PUSH12 0x66C245C8D64736F6C634300 ADDMOD ISZERO STOP CALLER ","sourceMap":"1245:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 KECCAK256 CALLER PUSH19 0x92F0BB5FEB484DD266E51E0E52C5D8F56D6EB9 DUP14 SWAP7 SAR PUSH12 0x66C245C8D64736F6C634300 ADDMOD ISZERO STOP CALLER ","sourceMap":"1245:2685:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD MUL SDIV SWAP4 SWAP11 PUSH3 0xC62DC0 0xB6 0x28 0xC3 SMOD 0x28 PUSH10 0xFEBCDB2AA598C59CA1B6 SWAP3 SWAP12 0x5C CREATE LOG0 KECCAK256 0x2D PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"251:2847:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD MUL SDIV SWAP4 SWAP11 PUSH3 0xC62DC0 0xB6 0x28 0xC3 SMOD 0x28 PUSH10 0xFEBCDB2AA598C59CA1B6 SWAP3 SWAP12 0x5C CREATE LOG0 KECCAK256 0x2D PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"251:2847:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e68925b77a43a6f8c53a8099d91aed12717b738f94ce0ec51defaddf50dd2ff64736f6c63430008150033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH9 0x925B77A43A6F8C53A8 MULMOD SWAP14 SWAP2 0xAE 0xD1 0x27 OR 0xB7 CODESIZE 0xF9 0x4C 0xE0 0xEC MLOAD 0xDE STATICCALL 0xDD CREATE2 0xD 0xD2 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"344:7386:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e68925b77a43a6f8c53a8099d91aed12717b738f94ce0ec51defaddf50dd2ff64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH9 0x925B77A43A6F8C53A8 MULMOD SWAP14 SWAP2 0xAE 0xD1 0x27 OR 0xB7 CODESIZE 0xF9 0x4C 0xE0 0xEC MLOAD 0xDE STATICCALL 0xDD CREATE2 0xD 0xD2 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"344:7386:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f43072d9ea5f65e62db153d98f62ebebf3f7b663cdda1d19dfc68d0db59c765c64736f6c63430008150033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL ADDRESS PUSH19 0xD9EA5F65E62DB153D98F62EBEBF3F7B663CDDA SAR NOT 0xDF 0xC6 DUP14 0xD 0xB5 SWAP13 PUSH23 0x5C64736F6C634300081500330000000000000000000000 ","sourceMap":"521:3235:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f43072d9ea5f65e62db153d98f62ebebf3f7b663cdda1d19dfc68d0db59c765c64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL ADDRESS PUSH19 0xD9EA5F65E62DB153D98F62EBEBF3F7B663CDDA SAR NOT 0xDF 0xC6 DUP14 0xD 0xB5 SWAP13 PUSH23 0x5C64736F6C634300081500330000000000000000000000 ","sourceMap":"521:3235:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"203:14914:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"203:14914:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033","opcodes":"PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x1E 0xEB CALLDATASIZE 0xD0 0xAB LOG0 DUP16 0xDC SELFDESTRUCT 0x2B 0xDD PUSH6 0xC4A46C358E90 DUP11 0x22 EXTCODESIZE GT 0xB9 PUSH2 0xA14B DUP11 GAS 0x2E SWAP13 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"216:1047:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x1E 0xEB CALLDATASIZE 0xD0 0xAB LOG0 DUP16 0xDC SELFDESTRUCT 0x2B 0xDD PUSH6 0xC4A46C358E90 DUP11 0x22 EXTCODESIZE GT 0xB9 PUSH2 0xA14B DUP11 GAS 0x2E SWAP13 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"216:1047:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"contracts/Farmer.sol":{"Farmer":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"vendorAddress","type":"address"},{"internalType":"uint256","name":"itemsCost","type":"uint256"}],"name":"buyProducts","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"checkAllowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"farmerAddress","type":"address"}],"name":"getFarmerRating","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"farmerAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"payFarmer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"farmerAddress","type":"address"},{"internalType":"uint32","name":"rating","type":"uint32"}],"name":"rateFarmer","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"subscribtionAmount","type":"uint256"}],"name":"subscribe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"transferTokensToFarmer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vegrowwToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3474":{"entryPoint":null,"id":3474,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":225,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":159,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":128,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":178,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1199:20","nodeType":"YulBlock","src":"0:1199:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"379:81:20","nodeType":"YulBlock","src":"379:81:20","statements":[{"nativeSrc":"389:65:20","nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nativeSrc":"404:5:20","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nativeSrc":"411:42:20","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:20","nodeType":"YulIdentifier","src":"400:3:20"},"nativeSrc":"400:54:20","nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:20","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:20","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:20","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nativeSrc":"511:51:20","nodeType":"YulBlock","src":"511:51:20","statements":[{"nativeSrc":"521:35:20","nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nativeSrc":"550:5:20","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:20","nodeType":"YulIdentifier","src":"532:17:20"},"nativeSrc":"532:24:20","nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:20","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:20","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:20","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nativeSrc":"611:79:20","nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nativeSrc":"668:16:20","nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:20","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:20","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:20","nodeType":"YulIdentifier","src":"670:6:20"},"nativeSrc":"670:12:20","nodeType":"YulFunctionCall","src":"670:12:20"},"nativeSrc":"670:12:20","nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:20","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nativeSrc":"659:5:20","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:20","nodeType":"YulIdentifier","src":"641:17:20"},"nativeSrc":"641:24:20","nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nativeSrc":"631:2:20","nodeType":"YulIdentifier","src":"631:2:20"},"nativeSrc":"631:35:20","nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nativeSrc":"624:6:20","nodeType":"YulIdentifier","src":"624:6:20"},"nativeSrc":"624:43:20","nodeType":"YulFunctionCall","src":"624:43:20"},"nativeSrc":"621:63:20","nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:20","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nativeSrc":"759:80:20","nodeType":"YulBlock","src":"759:80:20","statements":[{"nativeSrc":"769:22:20","nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:20","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nativeSrc":"778:5:20","nodeType":"YulIdentifier","src":"778:5:20"},"nativeSrc":"778:13:20","nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nativeSrc":"769:5:20","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:20","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:20","nodeType":"YulIdentifier","src":"800:26:20"},"nativeSrc":"800:33:20","nodeType":"YulFunctionCall","src":"800:33:20"},"nativeSrc":"800:33:20","nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:20","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nativeSrc":"745:3:20","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:20","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nativeSrc":"922:274:20","nodeType":"YulBlock","src":"922:274:20","statements":[{"body":{"nativeSrc":"968:83:20","nodeType":"YulBlock","src":"968:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:20","nodeType":"YulIdentifier","src":"970:77:20"},"nativeSrc":"970:79:20","nodeType":"YulFunctionCall","src":"970:79:20"},"nativeSrc":"970:79:20","nodeType":"YulExpressionStatement","src":"970:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:20","nodeType":"YulIdentifier","src":"943:7:20"},{"name":"headStart","nativeSrc":"952:9:20","nodeType":"YulIdentifier","src":"952:9:20"}],"functionName":{"name":"sub","nativeSrc":"939:3:20","nodeType":"YulIdentifier","src":"939:3:20"},"nativeSrc":"939:23:20","nodeType":"YulFunctionCall","src":"939:23:20"},{"kind":"number","nativeSrc":"964:2:20","nodeType":"YulLiteral","src":"964:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:20","nodeType":"YulIdentifier","src":"935:3:20"},"nativeSrc":"935:32:20","nodeType":"YulFunctionCall","src":"935:32:20"},"nativeSrc":"932:119:20","nodeType":"YulIf","src":"932:119:20"},{"nativeSrc":"1061:128:20","nodeType":"YulBlock","src":"1061:128:20","statements":[{"nativeSrc":"1076:15:20","nodeType":"YulVariableDeclaration","src":"1076:15:20","value":{"kind":"number","nativeSrc":"1090:1:20","nodeType":"YulLiteral","src":"1090:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:20","nodeType":"YulTypedName","src":"1080:6:20","type":""}]},{"nativeSrc":"1105:74:20","nodeType":"YulAssignment","src":"1105:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:20","nodeType":"YulIdentifier","src":"1151:9:20"},{"name":"offset","nativeSrc":"1162:6:20","nodeType":"YulIdentifier","src":"1162:6:20"}],"functionName":{"name":"add","nativeSrc":"1147:3:20","nodeType":"YulIdentifier","src":"1147:3:20"},"nativeSrc":"1147:22:20","nodeType":"YulFunctionCall","src":"1147:22:20"},{"name":"dataEnd","nativeSrc":"1171:7:20","nodeType":"YulIdentifier","src":"1171:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:20","nodeType":"YulIdentifier","src":"1115:31:20"},"nativeSrc":"1115:64:20","nodeType":"YulFunctionCall","src":"1115:64:20"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:20","nodeType":"YulIdentifier","src":"1105:6:20"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:20","nodeType":"YulTypedName","src":"892:9:20","type":""},{"name":"dataEnd","nativeSrc":"903:7:20","nodeType":"YulTypedName","src":"903:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:20","nodeType":"YulTypedName","src":"915:6:20","type":""}],"src":"845:351:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801562000010575f80fd5b5060405162001160380380620011608339818101604052810190620000369190620000e1565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000111565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000ab8262000080565b9050919050565b620000bd816200009f565b8114620000c8575f80fd5b50565b5f81519050620000db81620000b2565b92915050565b5f60208284031215620000f957620000f86200007c565b5b5f6200010884828501620000cb565b91505092915050565b611041806200011f5f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c80638b099b23116100595780638b099b23146100fc578063da30923f1461012c578063ede1e41614610148578063f9fa57321461016457610086565b80630cf5946b1461008a5780630f574ba7146100a65780631718b22e146100c25780634f367b32146100de575b5f80fd5b6100a4600480360381019061009f9190610ad7565b610194565b005b6100c060048036038101906100bb9190610b15565b610313565b005b6100dc60048036038101906100d79190610ad7565b610491565b005b6100e661068e565b6040516100f39190610b9b565b60405180910390f35b61011660048036038101906101119190610bb4565b6106b1565b6040516101239190610c01565b60405180910390f35b61014660048036038101906101419190610b15565b610754565b005b610162600480360381019061015d9190610c53565b6108cb565b005b61017e60048036038101906101799190610c91565b6109ee565b60405161018b9190610ccb565b60405180910390f35b5f339050815f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101f19190610cf3565b602060405180830381865afa15801561020c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102309190610d20565b1015610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610da5565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8285856040518463ffffffff1660e01b81526004016102cd93929190610dc3565b6020604051808303815f875af11580156102e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030d9190610e2d565b50505050565b5f339050815f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103709190610cf3565b602060405180830381865afa15801561038b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103af9190610d20565b10156103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e790610da5565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff1660e01b815260040161044c93929190610dc3565b6020604051808303815f875af1158015610468573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061048c9190610e2d565b505050565b5f3390505f829050600560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160149054906101000a900463ffffffff1663ffffffff1603610512576064600a846105059190610e85565b61050f9190610ef3565b90505b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161056b9190610cf3565b602060405180830381865afa158015610586573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105aa9190610d20565b10156105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e290610da5565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8386846040518463ffffffff1660e01b815260040161064793929190610dc3565b6020604051808303815f875af1158015610663573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106879190610e2d565b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846040518363ffffffff1660e01b815260040161070d929190610f23565b602060405180830381865afa158015610728573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074c9190610d20565b905092915050565b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107ad9190610cf3565b602060405180830381865afa1580156107c8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ec9190610d20565b101561082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490610da5565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610887929190610f4a565b6020604051808303815f875af11580156108a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c79190610e2d565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201548152505090506001816040018181516109ac9190610f71565b9150818152505080604001518282602001516109c89190610fa4565b6109d29190610fdb565b816020019063ffffffff16908163ffffffff1681525050505050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160149054906101000a900463ffffffff169050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a7382610a4a565b9050919050565b610a8381610a69565b8114610a8d575f80fd5b50565b5f81359050610a9e81610a7a565b92915050565b5f819050919050565b610ab681610aa4565b8114610ac0575f80fd5b50565b5f81359050610ad181610aad565b92915050565b5f8060408385031215610aed57610aec610a46565b5b5f610afa85828601610a90565b9250506020610b0b85828601610ac3565b9150509250929050565b5f60208284031215610b2a57610b29610a46565b5b5f610b3784828501610ac3565b91505092915050565b5f819050919050565b5f610b63610b5e610b5984610a4a565b610b40565b610a4a565b9050919050565b5f610b7482610b49565b9050919050565b5f610b8582610b6a565b9050919050565b610b9581610b7b565b82525050565b5f602082019050610bae5f830184610b8c565b92915050565b5f8060408385031215610bca57610bc9610a46565b5b5f610bd785828601610a90565b9250506020610be885828601610a90565b9150509250929050565b610bfb81610aa4565b82525050565b5f602082019050610c145f830184610bf2565b92915050565b5f63ffffffff82169050919050565b610c3281610c1a565b8114610c3c575f80fd5b50565b5f81359050610c4d81610c29565b92915050565b5f8060408385031215610c6957610c68610a46565b5b5f610c7685828601610a90565b9250506020610c8785828601610c3f565b9150509250929050565b5f60208284031215610ca657610ca5610a46565b5b5f610cb384828501610a90565b91505092915050565b610cc581610c1a565b82525050565b5f602082019050610cde5f830184610cbc565b92915050565b610ced81610a69565b82525050565b5f602082019050610d065f830184610ce4565b92915050565b5f81519050610d1a81610aad565b92915050565b5f60208284031215610d3557610d34610a46565b5b5f610d4284828501610d0c565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610d8f601283610d4b565b9150610d9a82610d5b565b602082019050919050565b5f6020820190508181035f830152610dbc81610d83565b9050919050565b5f606082019050610dd65f830186610ce4565b610de36020830185610ce4565b610df06040830184610bf2565b949350505050565b5f8115159050919050565b610e0c81610df8565b8114610e16575f80fd5b50565b5f81519050610e2781610e03565b92915050565b5f60208284031215610e4257610e41610a46565b5b5f610e4f84828501610e19565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e8f82610aa4565b9150610e9a83610aa4565b9250828202610ea881610aa4565b91508282048414831517610ebf57610ebe610e58565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610efd82610aa4565b9150610f0883610aa4565b925082610f1857610f17610ec6565b5b828204905092915050565b5f604082019050610f365f830185610ce4565b610f436020830184610ce4565b9392505050565b5f604082019050610f5d5f830185610ce4565b610f6a6020830184610bf2565b9392505050565b5f610f7b82610aa4565b9150610f8683610aa4565b9250828201905080821115610f9e57610f9d610e58565b5b92915050565b5f610fae82610c1a565b9150610fb983610c1a565b9250828201905063ffffffff811115610fd557610fd4610e58565b5b92915050565b5f610fe582610c1a565b9150610ff083610c1a565b92508261100057610fff610ec6565b5b82820490509291505056fea264697066735822122013a8386e9dd49a3c018ed62b079cbbb17c1f0ba0ecc967fb916ca63d1fdc028464736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1160 CODESIZE SUB DUP1 PUSH3 0x1160 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0xE1 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x111 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xAB DUP3 PUSH3 0x80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBD DUP2 PUSH3 0x9F JUMP JUMPDEST DUP2 EQ PUSH3 0xC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xDB DUP2 PUSH3 0xB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xF9 JUMPI PUSH3 0xF8 PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x108 DUP5 DUP3 DUP6 ADD PUSH3 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1041 DUP1 PUSH3 0x11F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B099B23 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8B099B23 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xDA30923F EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xEDE1E416 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xF9FA5732 EQ PUSH2 0x164 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0xCF5946B EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xF574BA7 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x1718B22E EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x4F367B32 EQ PUSH2 0xDE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x194 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP DUP2 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP DUP2 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x468 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 DUP3 SWAP1 POP PUSH1 0x5 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH2 0x512 JUMPI PUSH1 0x64 PUSH1 0xA DUP5 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0xEF3 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST LT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 DUP7 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x647 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x663 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x687 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP3 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST LT ISZERO PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x887 SWAP3 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0xF71 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x40 ADD MLOAD DUP3 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0xFDB JUMP JUMPDEST DUP2 PUSH1 0x20 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA73 DUP3 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA83 DUP2 PUSH2 0xA69 JUMP JUMPDEST DUP2 EQ PUSH2 0xA8D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9E DUP2 PUSH2 0xA7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB6 DUP2 PUSH2 0xAA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xAC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD1 DUP2 PUSH2 0xAAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAED JUMPI PUSH2 0xAEC PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAFA DUP6 DUP3 DUP7 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0B DUP6 DUP3 DUP7 ADD PUSH2 0xAC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2A JUMPI PUSH2 0xB29 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB37 DUP5 DUP3 DUP6 ADD PUSH2 0xAC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB63 PUSH2 0xB5E PUSH2 0xB59 DUP5 PUSH2 0xA4A JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB74 DUP3 PUSH2 0xB49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB85 DUP3 PUSH2 0xB6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB95 DUP2 PUSH2 0xB7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAE PUSH0 DUP4 ADD DUP5 PUSH2 0xB8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBC9 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD7 DUP6 DUP3 DUP7 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBE8 DUP6 DUP3 DUP7 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFB DUP2 PUSH2 0xAA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC14 PUSH0 DUP4 ADD DUP5 PUSH2 0xBF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC32 DUP2 PUSH2 0xC1A JUMP JUMPDEST DUP2 EQ PUSH2 0xC3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC4D DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC76 DUP6 DUP3 DUP7 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC87 DUP6 DUP3 DUP7 ADD PUSH2 0xC3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA6 JUMPI PUSH2 0xCA5 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC5 DUP2 PUSH2 0xC1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDE PUSH0 DUP4 ADD DUP5 PUSH2 0xCBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCED DUP2 PUSH2 0xA69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD1A DUP2 PUSH2 0xAAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD42 DUP5 DUP3 DUP6 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD8F PUSH1 0x12 DUP4 PUSH2 0xD4B JUMP JUMPDEST SWAP2 POP PUSH2 0xD9A DUP3 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDBC DUP2 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDD6 PUSH0 DUP4 ADD DUP7 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xDE3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xDF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBF2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0C DUP2 PUSH2 0xDF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xE16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE27 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE4F DUP5 DUP3 DUP6 ADD PUSH2 0xE19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE8F DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9A DUP4 PUSH2 0xAA4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEA8 DUP2 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xE58 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEFD DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF08 DUP4 PUSH2 0xAA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF18 JUMPI PUSH2 0xF17 PUSH2 0xEC6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF36 PUSH0 DUP4 ADD DUP6 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xF43 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCE4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF5D PUSH0 DUP4 ADD DUP6 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xF6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7B DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF86 DUP4 PUSH2 0xAA4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0xE58 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFAE DUP3 PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP PUSH2 0xFB9 DUP4 PUSH2 0xC1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0xFD5 JUMPI PUSH2 0xFD4 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFE5 DUP3 PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP PUSH2 0xFF0 DUP4 PUSH2 0xC1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1000 JUMPI PUSH2 0xFFF PUSH2 0xEC6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA8 CODESIZE PUSH15 0x9DD49A3C018ED62B079CBBB17C1F0B LOG0 0xEC 0xC9 PUSH8 0xFB916CA63D1FDC02 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"190:2412:17:-:0;;;339:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;454:13;432:12;;:36;;;;;;;;;;;;;;;;;;339:136;190:2412;;88:117:20;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;190:2412:17:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@buyProducts_3577":{"entryPoint":1169,"id":3577,"parameterSlots":2,"returnSlots":0},"@checkAllowance_3497":{"entryPoint":1713,"id":3497,"parameterSlots":2,"returnSlots":1},"@getFarmerRating_3629":{"entryPoint":2542,"id":3629,"parameterSlots":1,"returnSlots":1},"@payFarmer_3661":{"entryPoint":404,"id":3661,"parameterSlots":2,"returnSlots":0},"@rateFarmer_3616":{"entryPoint":2251,"id":3616,"parameterSlots":2,"returnSlots":0},"@subscribe_3694":{"entryPoint":787,"id":3694,"parameterSlots":1,"returnSlots":0},"@transferTokensToFarmer_3524":{"entryPoint":1876,"id":3524,"parameterSlots":1,"returnSlots":0},"@vegrowwToken_3457":{"entryPoint":1678,"id":3457,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":3609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3340,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":3135,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3217,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2996,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2775,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":3155,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3629,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3300,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$754_to_t_address_fromStack":{"entryPoint":2956,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack":{"entryPoint":3459,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3058,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":3260,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":3875,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":3523,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3914,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$754__to_t_address__fromStack_reversed":{"entryPoint":2971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":3275,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3403,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3953,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint32":{"entryPoint":4004,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3827,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint32":{"entryPoint":4059,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3717,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2665,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3576,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2634,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2724,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":3098,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$754_to_t_address":{"entryPoint":2939,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2922,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2889,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3672,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3782,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2630,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d":{"entryPoint":3419,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2682,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3587,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2733,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":3113,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:10687:20","nodeType":"YulBlock","src":"0:10687:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"379:81:20","nodeType":"YulBlock","src":"379:81:20","statements":[{"nativeSrc":"389:65:20","nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nativeSrc":"404:5:20","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nativeSrc":"411:42:20","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:20","nodeType":"YulIdentifier","src":"400:3:20"},"nativeSrc":"400:54:20","nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:20","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:20","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:20","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nativeSrc":"511:51:20","nodeType":"YulBlock","src":"511:51:20","statements":[{"nativeSrc":"521:35:20","nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nativeSrc":"550:5:20","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:20","nodeType":"YulIdentifier","src":"532:17:20"},"nativeSrc":"532:24:20","nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:20","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:20","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:20","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nativeSrc":"611:79:20","nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nativeSrc":"668:16:20","nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:20","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:20","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:20","nodeType":"YulIdentifier","src":"670:6:20"},"nativeSrc":"670:12:20","nodeType":"YulFunctionCall","src":"670:12:20"},"nativeSrc":"670:12:20","nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:20","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nativeSrc":"659:5:20","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:20","nodeType":"YulIdentifier","src":"641:17:20"},"nativeSrc":"641:24:20","nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nativeSrc":"631:2:20","nodeType":"YulIdentifier","src":"631:2:20"},"nativeSrc":"631:35:20","nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nativeSrc":"624:6:20","nodeType":"YulIdentifier","src":"624:6:20"},"nativeSrc":"624:43:20","nodeType":"YulFunctionCall","src":"624:43:20"},"nativeSrc":"621:63:20","nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:20","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nativeSrc":"748:87:20","nodeType":"YulBlock","src":"748:87:20","statements":[{"nativeSrc":"758:29:20","nodeType":"YulAssignment","src":"758:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:20","nodeType":"YulIdentifier","src":"780:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:20","nodeType":"YulIdentifier","src":"767:12:20"},"nativeSrc":"767:20:20","nodeType":"YulFunctionCall","src":"767:20:20"},"variableNames":[{"name":"value","nativeSrc":"758:5:20","nodeType":"YulIdentifier","src":"758:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:20","nodeType":"YulIdentifier","src":"823:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:20","nodeType":"YulIdentifier","src":"796:26:20"},"nativeSrc":"796:33:20","nodeType":"YulFunctionCall","src":"796:33:20"},"nativeSrc":"796:33:20","nodeType":"YulExpressionStatement","src":"796:33:20"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:20","nodeType":"YulTypedName","src":"726:6:20","type":""},{"name":"end","nativeSrc":"734:3:20","nodeType":"YulTypedName","src":"734:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:20","nodeType":"YulTypedName","src":"742:5:20","type":""}],"src":"696:139:20"},{"body":{"nativeSrc":"886:32:20","nodeType":"YulBlock","src":"886:32:20","statements":[{"nativeSrc":"896:16:20","nodeType":"YulAssignment","src":"896:16:20","value":{"name":"value","nativeSrc":"907:5:20","nodeType":"YulIdentifier","src":"907:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"896:7:20","nodeType":"YulIdentifier","src":"896:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"841:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"868:5:20","nodeType":"YulTypedName","src":"868:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"878:7:20","nodeType":"YulTypedName","src":"878:7:20","type":""}],"src":"841:77:20"},{"body":{"nativeSrc":"967:79:20","nodeType":"YulBlock","src":"967:79:20","statements":[{"body":{"nativeSrc":"1024:16:20","nodeType":"YulBlock","src":"1024:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:20","nodeType":"YulLiteral","src":"1033:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:20","nodeType":"YulLiteral","src":"1036:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:20","nodeType":"YulIdentifier","src":"1026:6:20"},"nativeSrc":"1026:12:20","nodeType":"YulFunctionCall","src":"1026:12:20"},"nativeSrc":"1026:12:20","nodeType":"YulExpressionStatement","src":"1026:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:20","nodeType":"YulIdentifier","src":"990:5:20"},{"arguments":[{"name":"value","nativeSrc":"1015:5:20","nodeType":"YulIdentifier","src":"1015:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"997:17:20","nodeType":"YulIdentifier","src":"997:17:20"},"nativeSrc":"997:24:20","nodeType":"YulFunctionCall","src":"997:24:20"}],"functionName":{"name":"eq","nativeSrc":"987:2:20","nodeType":"YulIdentifier","src":"987:2:20"},"nativeSrc":"987:35:20","nodeType":"YulFunctionCall","src":"987:35:20"}],"functionName":{"name":"iszero","nativeSrc":"980:6:20","nodeType":"YulIdentifier","src":"980:6:20"},"nativeSrc":"980:43:20","nodeType":"YulFunctionCall","src":"980:43:20"},"nativeSrc":"977:63:20","nodeType":"YulIf","src":"977:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"924:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:20","nodeType":"YulTypedName","src":"960:5:20","type":""}],"src":"924:122:20"},{"body":{"nativeSrc":"1104:87:20","nodeType":"YulBlock","src":"1104:87:20","statements":[{"nativeSrc":"1114:29:20","nodeType":"YulAssignment","src":"1114:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:20","nodeType":"YulIdentifier","src":"1136:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:20","nodeType":"YulIdentifier","src":"1123:12:20"},"nativeSrc":"1123:20:20","nodeType":"YulFunctionCall","src":"1123:20:20"},"variableNames":[{"name":"value","nativeSrc":"1114:5:20","nodeType":"YulIdentifier","src":"1114:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:20","nodeType":"YulIdentifier","src":"1179:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1152:26:20","nodeType":"YulIdentifier","src":"1152:26:20"},"nativeSrc":"1152:33:20","nodeType":"YulFunctionCall","src":"1152:33:20"},"nativeSrc":"1152:33:20","nodeType":"YulExpressionStatement","src":"1152:33:20"}]},"name":"abi_decode_t_uint256","nativeSrc":"1052:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:20","nodeType":"YulTypedName","src":"1082:6:20","type":""},{"name":"end","nativeSrc":"1090:3:20","nodeType":"YulTypedName","src":"1090:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:20","nodeType":"YulTypedName","src":"1098:5:20","type":""}],"src":"1052:139:20"},{"body":{"nativeSrc":"1280:391:20","nodeType":"YulBlock","src":"1280:391:20","statements":[{"body":{"nativeSrc":"1326:83:20","nodeType":"YulBlock","src":"1326:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1328:77:20","nodeType":"YulIdentifier","src":"1328:77:20"},"nativeSrc":"1328:79:20","nodeType":"YulFunctionCall","src":"1328:79:20"},"nativeSrc":"1328:79:20","nodeType":"YulExpressionStatement","src":"1328:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1301:7:20","nodeType":"YulIdentifier","src":"1301:7:20"},{"name":"headStart","nativeSrc":"1310:9:20","nodeType":"YulIdentifier","src":"1310:9:20"}],"functionName":{"name":"sub","nativeSrc":"1297:3:20","nodeType":"YulIdentifier","src":"1297:3:20"},"nativeSrc":"1297:23:20","nodeType":"YulFunctionCall","src":"1297:23:20"},{"kind":"number","nativeSrc":"1322:2:20","nodeType":"YulLiteral","src":"1322:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1293:3:20","nodeType":"YulIdentifier","src":"1293:3:20"},"nativeSrc":"1293:32:20","nodeType":"YulFunctionCall","src":"1293:32:20"},"nativeSrc":"1290:119:20","nodeType":"YulIf","src":"1290:119:20"},{"nativeSrc":"1419:117:20","nodeType":"YulBlock","src":"1419:117:20","statements":[{"nativeSrc":"1434:15:20","nodeType":"YulVariableDeclaration","src":"1434:15:20","value":{"kind":"number","nativeSrc":"1448:1:20","nodeType":"YulLiteral","src":"1448:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1438:6:20","nodeType":"YulTypedName","src":"1438:6:20","type":""}]},{"nativeSrc":"1463:63:20","nodeType":"YulAssignment","src":"1463:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1498:9:20","nodeType":"YulIdentifier","src":"1498:9:20"},{"name":"offset","nativeSrc":"1509:6:20","nodeType":"YulIdentifier","src":"1509:6:20"}],"functionName":{"name":"add","nativeSrc":"1494:3:20","nodeType":"YulIdentifier","src":"1494:3:20"},"nativeSrc":"1494:22:20","nodeType":"YulFunctionCall","src":"1494:22:20"},{"name":"dataEnd","nativeSrc":"1518:7:20","nodeType":"YulIdentifier","src":"1518:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1473:20:20","nodeType":"YulIdentifier","src":"1473:20:20"},"nativeSrc":"1473:53:20","nodeType":"YulFunctionCall","src":"1473:53:20"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:20","nodeType":"YulIdentifier","src":"1463:6:20"}]}]},{"nativeSrc":"1546:118:20","nodeType":"YulBlock","src":"1546:118:20","statements":[{"nativeSrc":"1561:16:20","nodeType":"YulVariableDeclaration","src":"1561:16:20","value":{"kind":"number","nativeSrc":"1575:2:20","nodeType":"YulLiteral","src":"1575:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1565:6:20","nodeType":"YulTypedName","src":"1565:6:20","type":""}]},{"nativeSrc":"1591:63:20","nodeType":"YulAssignment","src":"1591:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1626:9:20","nodeType":"YulIdentifier","src":"1626:9:20"},{"name":"offset","nativeSrc":"1637:6:20","nodeType":"YulIdentifier","src":"1637:6:20"}],"functionName":{"name":"add","nativeSrc":"1622:3:20","nodeType":"YulIdentifier","src":"1622:3:20"},"nativeSrc":"1622:22:20","nodeType":"YulFunctionCall","src":"1622:22:20"},{"name":"dataEnd","nativeSrc":"1646:7:20","nodeType":"YulIdentifier","src":"1646:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1601:20:20","nodeType":"YulIdentifier","src":"1601:20:20"},"nativeSrc":"1601:53:20","nodeType":"YulFunctionCall","src":"1601:53:20"},"variableNames":[{"name":"value1","nativeSrc":"1591:6:20","nodeType":"YulIdentifier","src":"1591:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1197:474:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1242:9:20","nodeType":"YulTypedName","src":"1242:9:20","type":""},{"name":"dataEnd","nativeSrc":"1253:7:20","nodeType":"YulTypedName","src":"1253:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1265:6:20","nodeType":"YulTypedName","src":"1265:6:20","type":""},{"name":"value1","nativeSrc":"1273:6:20","nodeType":"YulTypedName","src":"1273:6:20","type":""}],"src":"1197:474:20"},{"body":{"nativeSrc":"1743:263:20","nodeType":"YulBlock","src":"1743:263:20","statements":[{"body":{"nativeSrc":"1789:83:20","nodeType":"YulBlock","src":"1789:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1791:77:20","nodeType":"YulIdentifier","src":"1791:77:20"},"nativeSrc":"1791:79:20","nodeType":"YulFunctionCall","src":"1791:79:20"},"nativeSrc":"1791:79:20","nodeType":"YulExpressionStatement","src":"1791:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1764:7:20","nodeType":"YulIdentifier","src":"1764:7:20"},{"name":"headStart","nativeSrc":"1773:9:20","nodeType":"YulIdentifier","src":"1773:9:20"}],"functionName":{"name":"sub","nativeSrc":"1760:3:20","nodeType":"YulIdentifier","src":"1760:3:20"},"nativeSrc":"1760:23:20","nodeType":"YulFunctionCall","src":"1760:23:20"},{"kind":"number","nativeSrc":"1785:2:20","nodeType":"YulLiteral","src":"1785:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1756:3:20","nodeType":"YulIdentifier","src":"1756:3:20"},"nativeSrc":"1756:32:20","nodeType":"YulFunctionCall","src":"1756:32:20"},"nativeSrc":"1753:119:20","nodeType":"YulIf","src":"1753:119:20"},{"nativeSrc":"1882:117:20","nodeType":"YulBlock","src":"1882:117:20","statements":[{"nativeSrc":"1897:15:20","nodeType":"YulVariableDeclaration","src":"1897:15:20","value":{"kind":"number","nativeSrc":"1911:1:20","nodeType":"YulLiteral","src":"1911:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1901:6:20","nodeType":"YulTypedName","src":"1901:6:20","type":""}]},{"nativeSrc":"1926:63:20","nodeType":"YulAssignment","src":"1926:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1961:9:20","nodeType":"YulIdentifier","src":"1961:9:20"},{"name":"offset","nativeSrc":"1972:6:20","nodeType":"YulIdentifier","src":"1972:6:20"}],"functionName":{"name":"add","nativeSrc":"1957:3:20","nodeType":"YulIdentifier","src":"1957:3:20"},"nativeSrc":"1957:22:20","nodeType":"YulFunctionCall","src":"1957:22:20"},{"name":"dataEnd","nativeSrc":"1981:7:20","nodeType":"YulIdentifier","src":"1981:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1936:20:20","nodeType":"YulIdentifier","src":"1936:20:20"},"nativeSrc":"1936:53:20","nodeType":"YulFunctionCall","src":"1936:53:20"},"variableNames":[{"name":"value0","nativeSrc":"1926:6:20","nodeType":"YulIdentifier","src":"1926:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1677:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1713:9:20","nodeType":"YulTypedName","src":"1713:9:20","type":""},{"name":"dataEnd","nativeSrc":"1724:7:20","nodeType":"YulTypedName","src":"1724:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1736:6:20","nodeType":"YulTypedName","src":"1736:6:20","type":""}],"src":"1677:329:20"},{"body":{"nativeSrc":"2044:28:20","nodeType":"YulBlock","src":"2044:28:20","statements":[{"nativeSrc":"2054:12:20","nodeType":"YulAssignment","src":"2054:12:20","value":{"name":"value","nativeSrc":"2061:5:20","nodeType":"YulIdentifier","src":"2061:5:20"},"variableNames":[{"name":"ret","nativeSrc":"2054:3:20","nodeType":"YulIdentifier","src":"2054:3:20"}]}]},"name":"identity","nativeSrc":"2012:60:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2030:5:20","nodeType":"YulTypedName","src":"2030:5:20","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2040:3:20","nodeType":"YulTypedName","src":"2040:3:20","type":""}],"src":"2012:60:20"},{"body":{"nativeSrc":"2138:82:20","nodeType":"YulBlock","src":"2138:82:20","statements":[{"nativeSrc":"2148:66:20","nodeType":"YulAssignment","src":"2148:66:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2206:5:20","nodeType":"YulIdentifier","src":"2206:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2188:17:20","nodeType":"YulIdentifier","src":"2188:17:20"},"nativeSrc":"2188:24:20","nodeType":"YulFunctionCall","src":"2188:24:20"}],"functionName":{"name":"identity","nativeSrc":"2179:8:20","nodeType":"YulIdentifier","src":"2179:8:20"},"nativeSrc":"2179:34:20","nodeType":"YulFunctionCall","src":"2179:34:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2161:17:20","nodeType":"YulIdentifier","src":"2161:17:20"},"nativeSrc":"2161:53:20","nodeType":"YulFunctionCall","src":"2161:53:20"},"variableNames":[{"name":"converted","nativeSrc":"2148:9:20","nodeType":"YulIdentifier","src":"2148:9:20"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2078:142:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2118:5:20","nodeType":"YulTypedName","src":"2118:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2128:9:20","nodeType":"YulTypedName","src":"2128:9:20","type":""}],"src":"2078:142:20"},{"body":{"nativeSrc":"2286:66:20","nodeType":"YulBlock","src":"2286:66:20","statements":[{"nativeSrc":"2296:50:20","nodeType":"YulAssignment","src":"2296:50:20","value":{"arguments":[{"name":"value","nativeSrc":"2340:5:20","nodeType":"YulIdentifier","src":"2340:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2309:30:20","nodeType":"YulIdentifier","src":"2309:30:20"},"nativeSrc":"2309:37:20","nodeType":"YulFunctionCall","src":"2309:37:20"},"variableNames":[{"name":"converted","nativeSrc":"2296:9:20","nodeType":"YulIdentifier","src":"2296:9:20"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"2226:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2266:5:20","nodeType":"YulTypedName","src":"2266:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2276:9:20","nodeType":"YulTypedName","src":"2276:9:20","type":""}],"src":"2226:126:20"},{"body":{"nativeSrc":"2432:66:20","nodeType":"YulBlock","src":"2432:66:20","statements":[{"nativeSrc":"2442:50:20","nodeType":"YulAssignment","src":"2442:50:20","value":{"arguments":[{"name":"value","nativeSrc":"2486:5:20","nodeType":"YulIdentifier","src":"2486:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"2455:30:20","nodeType":"YulIdentifier","src":"2455:30:20"},"nativeSrc":"2455:37:20","nodeType":"YulFunctionCall","src":"2455:37:20"},"variableNames":[{"name":"converted","nativeSrc":"2442:9:20","nodeType":"YulIdentifier","src":"2442:9:20"}]}]},"name":"convert_t_contract$_IERC20_$754_to_t_address","nativeSrc":"2358:140:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2412:5:20","nodeType":"YulTypedName","src":"2412:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2422:9:20","nodeType":"YulTypedName","src":"2422:9:20","type":""}],"src":"2358:140:20"},{"body":{"nativeSrc":"2583:80:20","nodeType":"YulBlock","src":"2583:80:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2600:3:20","nodeType":"YulIdentifier","src":"2600:3:20"},{"arguments":[{"name":"value","nativeSrc":"2650:5:20","nodeType":"YulIdentifier","src":"2650:5:20"}],"functionName":{"name":"convert_t_contract$_IERC20_$754_to_t_address","nativeSrc":"2605:44:20","nodeType":"YulIdentifier","src":"2605:44:20"},"nativeSrc":"2605:51:20","nodeType":"YulFunctionCall","src":"2605:51:20"}],"functionName":{"name":"mstore","nativeSrc":"2593:6:20","nodeType":"YulIdentifier","src":"2593:6:20"},"nativeSrc":"2593:64:20","nodeType":"YulFunctionCall","src":"2593:64:20"},"nativeSrc":"2593:64:20","nodeType":"YulExpressionStatement","src":"2593:64:20"}]},"name":"abi_encode_t_contract$_IERC20_$754_to_t_address_fromStack","nativeSrc":"2504:159:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2571:5:20","nodeType":"YulTypedName","src":"2571:5:20","type":""},{"name":"pos","nativeSrc":"2578:3:20","nodeType":"YulTypedName","src":"2578:3:20","type":""}],"src":"2504:159:20"},{"body":{"nativeSrc":"2781:138:20","nodeType":"YulBlock","src":"2781:138:20","statements":[{"nativeSrc":"2791:26:20","nodeType":"YulAssignment","src":"2791:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2803:9:20","nodeType":"YulIdentifier","src":"2803:9:20"},{"kind":"number","nativeSrc":"2814:2:20","nodeType":"YulLiteral","src":"2814:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2799:3:20","nodeType":"YulIdentifier","src":"2799:3:20"},"nativeSrc":"2799:18:20","nodeType":"YulFunctionCall","src":"2799:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2791:4:20","nodeType":"YulIdentifier","src":"2791:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2885:6:20","nodeType":"YulIdentifier","src":"2885:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"2898:9:20","nodeType":"YulIdentifier","src":"2898:9:20"},{"kind":"number","nativeSrc":"2909:1:20","nodeType":"YulLiteral","src":"2909:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2894:3:20","nodeType":"YulIdentifier","src":"2894:3:20"},"nativeSrc":"2894:17:20","nodeType":"YulFunctionCall","src":"2894:17:20"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$754_to_t_address_fromStack","nativeSrc":"2827:57:20","nodeType":"YulIdentifier","src":"2827:57:20"},"nativeSrc":"2827:85:20","nodeType":"YulFunctionCall","src":"2827:85:20"},"nativeSrc":"2827:85:20","nodeType":"YulExpressionStatement","src":"2827:85:20"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$754__to_t_address__fromStack_reversed","nativeSrc":"2669:250:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2753:9:20","nodeType":"YulTypedName","src":"2753:9:20","type":""},{"name":"value0","nativeSrc":"2765:6:20","nodeType":"YulTypedName","src":"2765:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2776:4:20","nodeType":"YulTypedName","src":"2776:4:20","type":""}],"src":"2669:250:20"},{"body":{"nativeSrc":"3008:391:20","nodeType":"YulBlock","src":"3008:391:20","statements":[{"body":{"nativeSrc":"3054:83:20","nodeType":"YulBlock","src":"3054:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3056:77:20","nodeType":"YulIdentifier","src":"3056:77:20"},"nativeSrc":"3056:79:20","nodeType":"YulFunctionCall","src":"3056:79:20"},"nativeSrc":"3056:79:20","nodeType":"YulExpressionStatement","src":"3056:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3029:7:20","nodeType":"YulIdentifier","src":"3029:7:20"},{"name":"headStart","nativeSrc":"3038:9:20","nodeType":"YulIdentifier","src":"3038:9:20"}],"functionName":{"name":"sub","nativeSrc":"3025:3:20","nodeType":"YulIdentifier","src":"3025:3:20"},"nativeSrc":"3025:23:20","nodeType":"YulFunctionCall","src":"3025:23:20"},{"kind":"number","nativeSrc":"3050:2:20","nodeType":"YulLiteral","src":"3050:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3021:3:20","nodeType":"YulIdentifier","src":"3021:3:20"},"nativeSrc":"3021:32:20","nodeType":"YulFunctionCall","src":"3021:32:20"},"nativeSrc":"3018:119:20","nodeType":"YulIf","src":"3018:119:20"},{"nativeSrc":"3147:117:20","nodeType":"YulBlock","src":"3147:117:20","statements":[{"nativeSrc":"3162:15:20","nodeType":"YulVariableDeclaration","src":"3162:15:20","value":{"kind":"number","nativeSrc":"3176:1:20","nodeType":"YulLiteral","src":"3176:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3166:6:20","nodeType":"YulTypedName","src":"3166:6:20","type":""}]},{"nativeSrc":"3191:63:20","nodeType":"YulAssignment","src":"3191:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3226:9:20","nodeType":"YulIdentifier","src":"3226:9:20"},{"name":"offset","nativeSrc":"3237:6:20","nodeType":"YulIdentifier","src":"3237:6:20"}],"functionName":{"name":"add","nativeSrc":"3222:3:20","nodeType":"YulIdentifier","src":"3222:3:20"},"nativeSrc":"3222:22:20","nodeType":"YulFunctionCall","src":"3222:22:20"},{"name":"dataEnd","nativeSrc":"3246:7:20","nodeType":"YulIdentifier","src":"3246:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3201:20:20","nodeType":"YulIdentifier","src":"3201:20:20"},"nativeSrc":"3201:53:20","nodeType":"YulFunctionCall","src":"3201:53:20"},"variableNames":[{"name":"value0","nativeSrc":"3191:6:20","nodeType":"YulIdentifier","src":"3191:6:20"}]}]},{"nativeSrc":"3274:118:20","nodeType":"YulBlock","src":"3274:118:20","statements":[{"nativeSrc":"3289:16:20","nodeType":"YulVariableDeclaration","src":"3289:16:20","value":{"kind":"number","nativeSrc":"3303:2:20","nodeType":"YulLiteral","src":"3303:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3293:6:20","nodeType":"YulTypedName","src":"3293:6:20","type":""}]},{"nativeSrc":"3319:63:20","nodeType":"YulAssignment","src":"3319:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3354:9:20","nodeType":"YulIdentifier","src":"3354:9:20"},{"name":"offset","nativeSrc":"3365:6:20","nodeType":"YulIdentifier","src":"3365:6:20"}],"functionName":{"name":"add","nativeSrc":"3350:3:20","nodeType":"YulIdentifier","src":"3350:3:20"},"nativeSrc":"3350:22:20","nodeType":"YulFunctionCall","src":"3350:22:20"},{"name":"dataEnd","nativeSrc":"3374:7:20","nodeType":"YulIdentifier","src":"3374:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3329:20:20","nodeType":"YulIdentifier","src":"3329:20:20"},"nativeSrc":"3329:53:20","nodeType":"YulFunctionCall","src":"3329:53:20"},"variableNames":[{"name":"value1","nativeSrc":"3319:6:20","nodeType":"YulIdentifier","src":"3319:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"2925:474:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2970:9:20","nodeType":"YulTypedName","src":"2970:9:20","type":""},{"name":"dataEnd","nativeSrc":"2981:7:20","nodeType":"YulTypedName","src":"2981:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2993:6:20","nodeType":"YulTypedName","src":"2993:6:20","type":""},{"name":"value1","nativeSrc":"3001:6:20","nodeType":"YulTypedName","src":"3001:6:20","type":""}],"src":"2925:474:20"},{"body":{"nativeSrc":"3470:53:20","nodeType":"YulBlock","src":"3470:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3487:3:20","nodeType":"YulIdentifier","src":"3487:3:20"},{"arguments":[{"name":"value","nativeSrc":"3510:5:20","nodeType":"YulIdentifier","src":"3510:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3492:17:20","nodeType":"YulIdentifier","src":"3492:17:20"},"nativeSrc":"3492:24:20","nodeType":"YulFunctionCall","src":"3492:24:20"}],"functionName":{"name":"mstore","nativeSrc":"3480:6:20","nodeType":"YulIdentifier","src":"3480:6:20"},"nativeSrc":"3480:37:20","nodeType":"YulFunctionCall","src":"3480:37:20"},"nativeSrc":"3480:37:20","nodeType":"YulExpressionStatement","src":"3480:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3405:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3458:5:20","nodeType":"YulTypedName","src":"3458:5:20","type":""},{"name":"pos","nativeSrc":"3465:3:20","nodeType":"YulTypedName","src":"3465:3:20","type":""}],"src":"3405:118:20"},{"body":{"nativeSrc":"3627:124:20","nodeType":"YulBlock","src":"3627:124:20","statements":[{"nativeSrc":"3637:26:20","nodeType":"YulAssignment","src":"3637:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3649:9:20","nodeType":"YulIdentifier","src":"3649:9:20"},{"kind":"number","nativeSrc":"3660:2:20","nodeType":"YulLiteral","src":"3660:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3645:3:20","nodeType":"YulIdentifier","src":"3645:3:20"},"nativeSrc":"3645:18:20","nodeType":"YulFunctionCall","src":"3645:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3637:4:20","nodeType":"YulIdentifier","src":"3637:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3717:6:20","nodeType":"YulIdentifier","src":"3717:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"3730:9:20","nodeType":"YulIdentifier","src":"3730:9:20"},{"kind":"number","nativeSrc":"3741:1:20","nodeType":"YulLiteral","src":"3741:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3726:3:20","nodeType":"YulIdentifier","src":"3726:3:20"},"nativeSrc":"3726:17:20","nodeType":"YulFunctionCall","src":"3726:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3673:43:20","nodeType":"YulIdentifier","src":"3673:43:20"},"nativeSrc":"3673:71:20","nodeType":"YulFunctionCall","src":"3673:71:20"},"nativeSrc":"3673:71:20","nodeType":"YulExpressionStatement","src":"3673:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3529:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3599:9:20","nodeType":"YulTypedName","src":"3599:9:20","type":""},{"name":"value0","nativeSrc":"3611:6:20","nodeType":"YulTypedName","src":"3611:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3622:4:20","nodeType":"YulTypedName","src":"3622:4:20","type":""}],"src":"3529:222:20"},{"body":{"nativeSrc":"3801:49:20","nodeType":"YulBlock","src":"3801:49:20","statements":[{"nativeSrc":"3811:33:20","nodeType":"YulAssignment","src":"3811:33:20","value":{"arguments":[{"name":"value","nativeSrc":"3826:5:20","nodeType":"YulIdentifier","src":"3826:5:20"},{"kind":"number","nativeSrc":"3833:10:20","nodeType":"YulLiteral","src":"3833:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"3822:3:20","nodeType":"YulIdentifier","src":"3822:3:20"},"nativeSrc":"3822:22:20","nodeType":"YulFunctionCall","src":"3822:22:20"},"variableNames":[{"name":"cleaned","nativeSrc":"3811:7:20","nodeType":"YulIdentifier","src":"3811:7:20"}]}]},"name":"cleanup_t_uint32","nativeSrc":"3757:93:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3783:5:20","nodeType":"YulTypedName","src":"3783:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3793:7:20","nodeType":"YulTypedName","src":"3793:7:20","type":""}],"src":"3757:93:20"},{"body":{"nativeSrc":"3898:78:20","nodeType":"YulBlock","src":"3898:78:20","statements":[{"body":{"nativeSrc":"3954:16:20","nodeType":"YulBlock","src":"3954:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3963:1:20","nodeType":"YulLiteral","src":"3963:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3966:1:20","nodeType":"YulLiteral","src":"3966:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3956:6:20","nodeType":"YulIdentifier","src":"3956:6:20"},"nativeSrc":"3956:12:20","nodeType":"YulFunctionCall","src":"3956:12:20"},"nativeSrc":"3956:12:20","nodeType":"YulExpressionStatement","src":"3956:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3921:5:20","nodeType":"YulIdentifier","src":"3921:5:20"},{"arguments":[{"name":"value","nativeSrc":"3945:5:20","nodeType":"YulIdentifier","src":"3945:5:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"3928:16:20","nodeType":"YulIdentifier","src":"3928:16:20"},"nativeSrc":"3928:23:20","nodeType":"YulFunctionCall","src":"3928:23:20"}],"functionName":{"name":"eq","nativeSrc":"3918:2:20","nodeType":"YulIdentifier","src":"3918:2:20"},"nativeSrc":"3918:34:20","nodeType":"YulFunctionCall","src":"3918:34:20"}],"functionName":{"name":"iszero","nativeSrc":"3911:6:20","nodeType":"YulIdentifier","src":"3911:6:20"},"nativeSrc":"3911:42:20","nodeType":"YulFunctionCall","src":"3911:42:20"},"nativeSrc":"3908:62:20","nodeType":"YulIf","src":"3908:62:20"}]},"name":"validator_revert_t_uint32","nativeSrc":"3856:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3891:5:20","nodeType":"YulTypedName","src":"3891:5:20","type":""}],"src":"3856:120:20"},{"body":{"nativeSrc":"4033:86:20","nodeType":"YulBlock","src":"4033:86:20","statements":[{"nativeSrc":"4043:29:20","nodeType":"YulAssignment","src":"4043:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"4065:6:20","nodeType":"YulIdentifier","src":"4065:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"4052:12:20","nodeType":"YulIdentifier","src":"4052:12:20"},"nativeSrc":"4052:20:20","nodeType":"YulFunctionCall","src":"4052:20:20"},"variableNames":[{"name":"value","nativeSrc":"4043:5:20","nodeType":"YulIdentifier","src":"4043:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4107:5:20","nodeType":"YulIdentifier","src":"4107:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"4081:25:20","nodeType":"YulIdentifier","src":"4081:25:20"},"nativeSrc":"4081:32:20","nodeType":"YulFunctionCall","src":"4081:32:20"},"nativeSrc":"4081:32:20","nodeType":"YulExpressionStatement","src":"4081:32:20"}]},"name":"abi_decode_t_uint32","nativeSrc":"3982:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4011:6:20","nodeType":"YulTypedName","src":"4011:6:20","type":""},{"name":"end","nativeSrc":"4019:3:20","nodeType":"YulTypedName","src":"4019:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4027:5:20","nodeType":"YulTypedName","src":"4027:5:20","type":""}],"src":"3982:137:20"},{"body":{"nativeSrc":"4207:390:20","nodeType":"YulBlock","src":"4207:390:20","statements":[{"body":{"nativeSrc":"4253:83:20","nodeType":"YulBlock","src":"4253:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4255:77:20","nodeType":"YulIdentifier","src":"4255:77:20"},"nativeSrc":"4255:79:20","nodeType":"YulFunctionCall","src":"4255:79:20"},"nativeSrc":"4255:79:20","nodeType":"YulExpressionStatement","src":"4255:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4228:7:20","nodeType":"YulIdentifier","src":"4228:7:20"},{"name":"headStart","nativeSrc":"4237:9:20","nodeType":"YulIdentifier","src":"4237:9:20"}],"functionName":{"name":"sub","nativeSrc":"4224:3:20","nodeType":"YulIdentifier","src":"4224:3:20"},"nativeSrc":"4224:23:20","nodeType":"YulFunctionCall","src":"4224:23:20"},{"kind":"number","nativeSrc":"4249:2:20","nodeType":"YulLiteral","src":"4249:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4220:3:20","nodeType":"YulIdentifier","src":"4220:3:20"},"nativeSrc":"4220:32:20","nodeType":"YulFunctionCall","src":"4220:32:20"},"nativeSrc":"4217:119:20","nodeType":"YulIf","src":"4217:119:20"},{"nativeSrc":"4346:117:20","nodeType":"YulBlock","src":"4346:117:20","statements":[{"nativeSrc":"4361:15:20","nodeType":"YulVariableDeclaration","src":"4361:15:20","value":{"kind":"number","nativeSrc":"4375:1:20","nodeType":"YulLiteral","src":"4375:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4365:6:20","nodeType":"YulTypedName","src":"4365:6:20","type":""}]},{"nativeSrc":"4390:63:20","nodeType":"YulAssignment","src":"4390:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4425:9:20","nodeType":"YulIdentifier","src":"4425:9:20"},{"name":"offset","nativeSrc":"4436:6:20","nodeType":"YulIdentifier","src":"4436:6:20"}],"functionName":{"name":"add","nativeSrc":"4421:3:20","nodeType":"YulIdentifier","src":"4421:3:20"},"nativeSrc":"4421:22:20","nodeType":"YulFunctionCall","src":"4421:22:20"},{"name":"dataEnd","nativeSrc":"4445:7:20","nodeType":"YulIdentifier","src":"4445:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4400:20:20","nodeType":"YulIdentifier","src":"4400:20:20"},"nativeSrc":"4400:53:20","nodeType":"YulFunctionCall","src":"4400:53:20"},"variableNames":[{"name":"value0","nativeSrc":"4390:6:20","nodeType":"YulIdentifier","src":"4390:6:20"}]}]},{"nativeSrc":"4473:117:20","nodeType":"YulBlock","src":"4473:117:20","statements":[{"nativeSrc":"4488:16:20","nodeType":"YulVariableDeclaration","src":"4488:16:20","value":{"kind":"number","nativeSrc":"4502:2:20","nodeType":"YulLiteral","src":"4502:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4492:6:20","nodeType":"YulTypedName","src":"4492:6:20","type":""}]},{"nativeSrc":"4518:62:20","nodeType":"YulAssignment","src":"4518:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4552:9:20","nodeType":"YulIdentifier","src":"4552:9:20"},{"name":"offset","nativeSrc":"4563:6:20","nodeType":"YulIdentifier","src":"4563:6:20"}],"functionName":{"name":"add","nativeSrc":"4548:3:20","nodeType":"YulIdentifier","src":"4548:3:20"},"nativeSrc":"4548:22:20","nodeType":"YulFunctionCall","src":"4548:22:20"},{"name":"dataEnd","nativeSrc":"4572:7:20","nodeType":"YulIdentifier","src":"4572:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"4528:19:20","nodeType":"YulIdentifier","src":"4528:19:20"},"nativeSrc":"4528:52:20","nodeType":"YulFunctionCall","src":"4528:52:20"},"variableNames":[{"name":"value1","nativeSrc":"4518:6:20","nodeType":"YulIdentifier","src":"4518:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nativeSrc":"4125:472:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4169:9:20","nodeType":"YulTypedName","src":"4169:9:20","type":""},{"name":"dataEnd","nativeSrc":"4180:7:20","nodeType":"YulTypedName","src":"4180:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4192:6:20","nodeType":"YulTypedName","src":"4192:6:20","type":""},{"name":"value1","nativeSrc":"4200:6:20","nodeType":"YulTypedName","src":"4200:6:20","type":""}],"src":"4125:472:20"},{"body":{"nativeSrc":"4669:263:20","nodeType":"YulBlock","src":"4669:263:20","statements":[{"body":{"nativeSrc":"4715:83:20","nodeType":"YulBlock","src":"4715:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4717:77:20","nodeType":"YulIdentifier","src":"4717:77:20"},"nativeSrc":"4717:79:20","nodeType":"YulFunctionCall","src":"4717:79:20"},"nativeSrc":"4717:79:20","nodeType":"YulExpressionStatement","src":"4717:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4690:7:20","nodeType":"YulIdentifier","src":"4690:7:20"},{"name":"headStart","nativeSrc":"4699:9:20","nodeType":"YulIdentifier","src":"4699:9:20"}],"functionName":{"name":"sub","nativeSrc":"4686:3:20","nodeType":"YulIdentifier","src":"4686:3:20"},"nativeSrc":"4686:23:20","nodeType":"YulFunctionCall","src":"4686:23:20"},{"kind":"number","nativeSrc":"4711:2:20","nodeType":"YulLiteral","src":"4711:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4682:3:20","nodeType":"YulIdentifier","src":"4682:3:20"},"nativeSrc":"4682:32:20","nodeType":"YulFunctionCall","src":"4682:32:20"},"nativeSrc":"4679:119:20","nodeType":"YulIf","src":"4679:119:20"},{"nativeSrc":"4808:117:20","nodeType":"YulBlock","src":"4808:117:20","statements":[{"nativeSrc":"4823:15:20","nodeType":"YulVariableDeclaration","src":"4823:15:20","value":{"kind":"number","nativeSrc":"4837:1:20","nodeType":"YulLiteral","src":"4837:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4827:6:20","nodeType":"YulTypedName","src":"4827:6:20","type":""}]},{"nativeSrc":"4852:63:20","nodeType":"YulAssignment","src":"4852:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4887:9:20","nodeType":"YulIdentifier","src":"4887:9:20"},{"name":"offset","nativeSrc":"4898:6:20","nodeType":"YulIdentifier","src":"4898:6:20"}],"functionName":{"name":"add","nativeSrc":"4883:3:20","nodeType":"YulIdentifier","src":"4883:3:20"},"nativeSrc":"4883:22:20","nodeType":"YulFunctionCall","src":"4883:22:20"},{"name":"dataEnd","nativeSrc":"4907:7:20","nodeType":"YulIdentifier","src":"4907:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4862:20:20","nodeType":"YulIdentifier","src":"4862:20:20"},"nativeSrc":"4862:53:20","nodeType":"YulFunctionCall","src":"4862:53:20"},"variableNames":[{"name":"value0","nativeSrc":"4852:6:20","nodeType":"YulIdentifier","src":"4852:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4603:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4639:9:20","nodeType":"YulTypedName","src":"4639:9:20","type":""},{"name":"dataEnd","nativeSrc":"4650:7:20","nodeType":"YulTypedName","src":"4650:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4662:6:20","nodeType":"YulTypedName","src":"4662:6:20","type":""}],"src":"4603:329:20"},{"body":{"nativeSrc":"5001:52:20","nodeType":"YulBlock","src":"5001:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5018:3:20","nodeType":"YulIdentifier","src":"5018:3:20"},{"arguments":[{"name":"value","nativeSrc":"5040:5:20","nodeType":"YulIdentifier","src":"5040:5:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"5023:16:20","nodeType":"YulIdentifier","src":"5023:16:20"},"nativeSrc":"5023:23:20","nodeType":"YulFunctionCall","src":"5023:23:20"}],"functionName":{"name":"mstore","nativeSrc":"5011:6:20","nodeType":"YulIdentifier","src":"5011:6:20"},"nativeSrc":"5011:36:20","nodeType":"YulFunctionCall","src":"5011:36:20"},"nativeSrc":"5011:36:20","nodeType":"YulExpressionStatement","src":"5011:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"4938:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4989:5:20","nodeType":"YulTypedName","src":"4989:5:20","type":""},{"name":"pos","nativeSrc":"4996:3:20","nodeType":"YulTypedName","src":"4996:3:20","type":""}],"src":"4938:115:20"},{"body":{"nativeSrc":"5155:122:20","nodeType":"YulBlock","src":"5155:122:20","statements":[{"nativeSrc":"5165:26:20","nodeType":"YulAssignment","src":"5165:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5177:9:20","nodeType":"YulIdentifier","src":"5177:9:20"},{"kind":"number","nativeSrc":"5188:2:20","nodeType":"YulLiteral","src":"5188:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5173:3:20","nodeType":"YulIdentifier","src":"5173:3:20"},"nativeSrc":"5173:18:20","nodeType":"YulFunctionCall","src":"5173:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5165:4:20","nodeType":"YulIdentifier","src":"5165:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5243:6:20","nodeType":"YulIdentifier","src":"5243:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"5256:9:20","nodeType":"YulIdentifier","src":"5256:9:20"},{"kind":"number","nativeSrc":"5267:1:20","nodeType":"YulLiteral","src":"5267:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5252:3:20","nodeType":"YulIdentifier","src":"5252:3:20"},"nativeSrc":"5252:17:20","nodeType":"YulFunctionCall","src":"5252:17:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"5201:41:20","nodeType":"YulIdentifier","src":"5201:41:20"},"nativeSrc":"5201:69:20","nodeType":"YulFunctionCall","src":"5201:69:20"},"nativeSrc":"5201:69:20","nodeType":"YulExpressionStatement","src":"5201:69:20"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"5059:218:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5127:9:20","nodeType":"YulTypedName","src":"5127:9:20","type":""},{"name":"value0","nativeSrc":"5139:6:20","nodeType":"YulTypedName","src":"5139:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5150:4:20","nodeType":"YulTypedName","src":"5150:4:20","type":""}],"src":"5059:218:20"},{"body":{"nativeSrc":"5348:53:20","nodeType":"YulBlock","src":"5348:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5365:3:20","nodeType":"YulIdentifier","src":"5365:3:20"},{"arguments":[{"name":"value","nativeSrc":"5388:5:20","nodeType":"YulIdentifier","src":"5388:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5370:17:20","nodeType":"YulIdentifier","src":"5370:17:20"},"nativeSrc":"5370:24:20","nodeType":"YulFunctionCall","src":"5370:24:20"}],"functionName":{"name":"mstore","nativeSrc":"5358:6:20","nodeType":"YulIdentifier","src":"5358:6:20"},"nativeSrc":"5358:37:20","nodeType":"YulFunctionCall","src":"5358:37:20"},"nativeSrc":"5358:37:20","nodeType":"YulExpressionStatement","src":"5358:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5283:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5336:5:20","nodeType":"YulTypedName","src":"5336:5:20","type":""},{"name":"pos","nativeSrc":"5343:3:20","nodeType":"YulTypedName","src":"5343:3:20","type":""}],"src":"5283:118:20"},{"body":{"nativeSrc":"5505:124:20","nodeType":"YulBlock","src":"5505:124:20","statements":[{"nativeSrc":"5515:26:20","nodeType":"YulAssignment","src":"5515:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5527:9:20","nodeType":"YulIdentifier","src":"5527:9:20"},{"kind":"number","nativeSrc":"5538:2:20","nodeType":"YulLiteral","src":"5538:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5523:3:20","nodeType":"YulIdentifier","src":"5523:3:20"},"nativeSrc":"5523:18:20","nodeType":"YulFunctionCall","src":"5523:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5515:4:20","nodeType":"YulIdentifier","src":"5515:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5595:6:20","nodeType":"YulIdentifier","src":"5595:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"5608:9:20","nodeType":"YulIdentifier","src":"5608:9:20"},{"kind":"number","nativeSrc":"5619:1:20","nodeType":"YulLiteral","src":"5619:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5604:3:20","nodeType":"YulIdentifier","src":"5604:3:20"},"nativeSrc":"5604:17:20","nodeType":"YulFunctionCall","src":"5604:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5551:43:20","nodeType":"YulIdentifier","src":"5551:43:20"},"nativeSrc":"5551:71:20","nodeType":"YulFunctionCall","src":"5551:71:20"},"nativeSrc":"5551:71:20","nodeType":"YulExpressionStatement","src":"5551:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5407:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5477:9:20","nodeType":"YulTypedName","src":"5477:9:20","type":""},{"name":"value0","nativeSrc":"5489:6:20","nodeType":"YulTypedName","src":"5489:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5500:4:20","nodeType":"YulTypedName","src":"5500:4:20","type":""}],"src":"5407:222:20"},{"body":{"nativeSrc":"5698:80:20","nodeType":"YulBlock","src":"5698:80:20","statements":[{"nativeSrc":"5708:22:20","nodeType":"YulAssignment","src":"5708:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"5723:6:20","nodeType":"YulIdentifier","src":"5723:6:20"}],"functionName":{"name":"mload","nativeSrc":"5717:5:20","nodeType":"YulIdentifier","src":"5717:5:20"},"nativeSrc":"5717:13:20","nodeType":"YulFunctionCall","src":"5717:13:20"},"variableNames":[{"name":"value","nativeSrc":"5708:5:20","nodeType":"YulIdentifier","src":"5708:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5766:5:20","nodeType":"YulIdentifier","src":"5766:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5739:26:20","nodeType":"YulIdentifier","src":"5739:26:20"},"nativeSrc":"5739:33:20","nodeType":"YulFunctionCall","src":"5739:33:20"},"nativeSrc":"5739:33:20","nodeType":"YulExpressionStatement","src":"5739:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"5635:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5676:6:20","nodeType":"YulTypedName","src":"5676:6:20","type":""},{"name":"end","nativeSrc":"5684:3:20","nodeType":"YulTypedName","src":"5684:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5692:5:20","nodeType":"YulTypedName","src":"5692:5:20","type":""}],"src":"5635:143:20"},{"body":{"nativeSrc":"5861:274:20","nodeType":"YulBlock","src":"5861:274:20","statements":[{"body":{"nativeSrc":"5907:83:20","nodeType":"YulBlock","src":"5907:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5909:77:20","nodeType":"YulIdentifier","src":"5909:77:20"},"nativeSrc":"5909:79:20","nodeType":"YulFunctionCall","src":"5909:79:20"},"nativeSrc":"5909:79:20","nodeType":"YulExpressionStatement","src":"5909:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5882:7:20","nodeType":"YulIdentifier","src":"5882:7:20"},{"name":"headStart","nativeSrc":"5891:9:20","nodeType":"YulIdentifier","src":"5891:9:20"}],"functionName":{"name":"sub","nativeSrc":"5878:3:20","nodeType":"YulIdentifier","src":"5878:3:20"},"nativeSrc":"5878:23:20","nodeType":"YulFunctionCall","src":"5878:23:20"},{"kind":"number","nativeSrc":"5903:2:20","nodeType":"YulLiteral","src":"5903:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5874:3:20","nodeType":"YulIdentifier","src":"5874:3:20"},"nativeSrc":"5874:32:20","nodeType":"YulFunctionCall","src":"5874:32:20"},"nativeSrc":"5871:119:20","nodeType":"YulIf","src":"5871:119:20"},{"nativeSrc":"6000:128:20","nodeType":"YulBlock","src":"6000:128:20","statements":[{"nativeSrc":"6015:15:20","nodeType":"YulVariableDeclaration","src":"6015:15:20","value":{"kind":"number","nativeSrc":"6029:1:20","nodeType":"YulLiteral","src":"6029:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6019:6:20","nodeType":"YulTypedName","src":"6019:6:20","type":""}]},{"nativeSrc":"6044:74:20","nodeType":"YulAssignment","src":"6044:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6090:9:20","nodeType":"YulIdentifier","src":"6090:9:20"},{"name":"offset","nativeSrc":"6101:6:20","nodeType":"YulIdentifier","src":"6101:6:20"}],"functionName":{"name":"add","nativeSrc":"6086:3:20","nodeType":"YulIdentifier","src":"6086:3:20"},"nativeSrc":"6086:22:20","nodeType":"YulFunctionCall","src":"6086:22:20"},{"name":"dataEnd","nativeSrc":"6110:7:20","nodeType":"YulIdentifier","src":"6110:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"6054:31:20","nodeType":"YulIdentifier","src":"6054:31:20"},"nativeSrc":"6054:64:20","nodeType":"YulFunctionCall","src":"6054:64:20"},"variableNames":[{"name":"value0","nativeSrc":"6044:6:20","nodeType":"YulIdentifier","src":"6044:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"5784:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5831:9:20","nodeType":"YulTypedName","src":"5831:9:20","type":""},{"name":"dataEnd","nativeSrc":"5842:7:20","nodeType":"YulTypedName","src":"5842:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5854:6:20","nodeType":"YulTypedName","src":"5854:6:20","type":""}],"src":"5784:351:20"},{"body":{"nativeSrc":"6237:73:20","nodeType":"YulBlock","src":"6237:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6254:3:20","nodeType":"YulIdentifier","src":"6254:3:20"},{"name":"length","nativeSrc":"6259:6:20","nodeType":"YulIdentifier","src":"6259:6:20"}],"functionName":{"name":"mstore","nativeSrc":"6247:6:20","nodeType":"YulIdentifier","src":"6247:6:20"},"nativeSrc":"6247:19:20","nodeType":"YulFunctionCall","src":"6247:19:20"},"nativeSrc":"6247:19:20","nodeType":"YulExpressionStatement","src":"6247:19:20"},{"nativeSrc":"6275:29:20","nodeType":"YulAssignment","src":"6275:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"6294:3:20","nodeType":"YulIdentifier","src":"6294:3:20"},{"kind":"number","nativeSrc":"6299:4:20","nodeType":"YulLiteral","src":"6299:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6290:3:20","nodeType":"YulIdentifier","src":"6290:3:20"},"nativeSrc":"6290:14:20","nodeType":"YulFunctionCall","src":"6290:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"6275:11:20","nodeType":"YulIdentifier","src":"6275:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6141:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6209:3:20","nodeType":"YulTypedName","src":"6209:3:20","type":""},{"name":"length","nativeSrc":"6214:6:20","nodeType":"YulTypedName","src":"6214:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6225:11:20","nodeType":"YulTypedName","src":"6225:11:20","type":""}],"src":"6141:169:20"},{"body":{"nativeSrc":"6422:62:20","nodeType":"YulBlock","src":"6422:62:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6444:6:20","nodeType":"YulIdentifier","src":"6444:6:20"},{"kind":"number","nativeSrc":"6452:1:20","nodeType":"YulLiteral","src":"6452:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6440:3:20","nodeType":"YulIdentifier","src":"6440:3:20"},"nativeSrc":"6440:14:20","nodeType":"YulFunctionCall","src":"6440:14:20"},{"hexValue":"496e73756666696369656e742066756e6473","kind":"string","nativeSrc":"6456:20:20","nodeType":"YulLiteral","src":"6456:20:20","type":"","value":"Insufficient funds"}],"functionName":{"name":"mstore","nativeSrc":"6433:6:20","nodeType":"YulIdentifier","src":"6433:6:20"},"nativeSrc":"6433:44:20","nodeType":"YulFunctionCall","src":"6433:44:20"},"nativeSrc":"6433:44:20","nodeType":"YulExpressionStatement","src":"6433:44:20"}]},"name":"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","nativeSrc":"6316:168:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6414:6:20","nodeType":"YulTypedName","src":"6414:6:20","type":""}],"src":"6316:168:20"},{"body":{"nativeSrc":"6636:220:20","nodeType":"YulBlock","src":"6636:220:20","statements":[{"nativeSrc":"6646:74:20","nodeType":"YulAssignment","src":"6646:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"6712:3:20","nodeType":"YulIdentifier","src":"6712:3:20"},{"kind":"number","nativeSrc":"6717:2:20","nodeType":"YulLiteral","src":"6717:2:20","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6653:58:20","nodeType":"YulIdentifier","src":"6653:58:20"},"nativeSrc":"6653:67:20","nodeType":"YulFunctionCall","src":"6653:67:20"},"variableNames":[{"name":"pos","nativeSrc":"6646:3:20","nodeType":"YulIdentifier","src":"6646:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6818:3:20","nodeType":"YulIdentifier","src":"6818:3:20"}],"functionName":{"name":"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","nativeSrc":"6729:88:20","nodeType":"YulIdentifier","src":"6729:88:20"},"nativeSrc":"6729:93:20","nodeType":"YulFunctionCall","src":"6729:93:20"},"nativeSrc":"6729:93:20","nodeType":"YulExpressionStatement","src":"6729:93:20"},{"nativeSrc":"6831:19:20","nodeType":"YulAssignment","src":"6831:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"6842:3:20","nodeType":"YulIdentifier","src":"6842:3:20"},{"kind":"number","nativeSrc":"6847:2:20","nodeType":"YulLiteral","src":"6847:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6838:3:20","nodeType":"YulIdentifier","src":"6838:3:20"},"nativeSrc":"6838:12:20","nodeType":"YulFunctionCall","src":"6838:12:20"},"variableNames":[{"name":"end","nativeSrc":"6831:3:20","nodeType":"YulIdentifier","src":"6831:3:20"}]}]},"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nativeSrc":"6490:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6624:3:20","nodeType":"YulTypedName","src":"6624:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6632:3:20","nodeType":"YulTypedName","src":"6632:3:20","type":""}],"src":"6490:366:20"},{"body":{"nativeSrc":"7033:248:20","nodeType":"YulBlock","src":"7033:248:20","statements":[{"nativeSrc":"7043:26:20","nodeType":"YulAssignment","src":"7043:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"7055:9:20","nodeType":"YulIdentifier","src":"7055:9:20"},{"kind":"number","nativeSrc":"7066:2:20","nodeType":"YulLiteral","src":"7066:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7051:3:20","nodeType":"YulIdentifier","src":"7051:3:20"},"nativeSrc":"7051:18:20","nodeType":"YulFunctionCall","src":"7051:18:20"},"variableNames":[{"name":"tail","nativeSrc":"7043:4:20","nodeType":"YulIdentifier","src":"7043:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7090:9:20","nodeType":"YulIdentifier","src":"7090:9:20"},{"kind":"number","nativeSrc":"7101:1:20","nodeType":"YulLiteral","src":"7101:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7086:3:20","nodeType":"YulIdentifier","src":"7086:3:20"},"nativeSrc":"7086:17:20","nodeType":"YulFunctionCall","src":"7086:17:20"},{"arguments":[{"name":"tail","nativeSrc":"7109:4:20","nodeType":"YulIdentifier","src":"7109:4:20"},{"name":"headStart","nativeSrc":"7115:9:20","nodeType":"YulIdentifier","src":"7115:9:20"}],"functionName":{"name":"sub","nativeSrc":"7105:3:20","nodeType":"YulIdentifier","src":"7105:3:20"},"nativeSrc":"7105:20:20","nodeType":"YulFunctionCall","src":"7105:20:20"}],"functionName":{"name":"mstore","nativeSrc":"7079:6:20","nodeType":"YulIdentifier","src":"7079:6:20"},"nativeSrc":"7079:47:20","nodeType":"YulFunctionCall","src":"7079:47:20"},"nativeSrc":"7079:47:20","nodeType":"YulExpressionStatement","src":"7079:47:20"},{"nativeSrc":"7135:139:20","nodeType":"YulAssignment","src":"7135:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"7269:4:20","nodeType":"YulIdentifier","src":"7269:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack","nativeSrc":"7143:124:20","nodeType":"YulIdentifier","src":"7143:124:20"},"nativeSrc":"7143:131:20","nodeType":"YulFunctionCall","src":"7143:131:20"},"variableNames":[{"name":"tail","nativeSrc":"7135:4:20","nodeType":"YulIdentifier","src":"7135:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6862:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7013:9:20","nodeType":"YulTypedName","src":"7013:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7028:4:20","nodeType":"YulTypedName","src":"7028:4:20","type":""}],"src":"6862:419:20"},{"body":{"nativeSrc":"7441:288:20","nodeType":"YulBlock","src":"7441:288:20","statements":[{"nativeSrc":"7451:26:20","nodeType":"YulAssignment","src":"7451:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"7463:9:20","nodeType":"YulIdentifier","src":"7463:9:20"},{"kind":"number","nativeSrc":"7474:2:20","nodeType":"YulLiteral","src":"7474:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7459:3:20","nodeType":"YulIdentifier","src":"7459:3:20"},"nativeSrc":"7459:18:20","nodeType":"YulFunctionCall","src":"7459:18:20"},"variableNames":[{"name":"tail","nativeSrc":"7451:4:20","nodeType":"YulIdentifier","src":"7451:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7531:6:20","nodeType":"YulIdentifier","src":"7531:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"7544:9:20","nodeType":"YulIdentifier","src":"7544:9:20"},{"kind":"number","nativeSrc":"7555:1:20","nodeType":"YulLiteral","src":"7555:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7540:3:20","nodeType":"YulIdentifier","src":"7540:3:20"},"nativeSrc":"7540:17:20","nodeType":"YulFunctionCall","src":"7540:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7487:43:20","nodeType":"YulIdentifier","src":"7487:43:20"},"nativeSrc":"7487:71:20","nodeType":"YulFunctionCall","src":"7487:71:20"},"nativeSrc":"7487:71:20","nodeType":"YulExpressionStatement","src":"7487:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7612:6:20","nodeType":"YulIdentifier","src":"7612:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"7625:9:20","nodeType":"YulIdentifier","src":"7625:9:20"},{"kind":"number","nativeSrc":"7636:2:20","nodeType":"YulLiteral","src":"7636:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7621:3:20","nodeType":"YulIdentifier","src":"7621:3:20"},"nativeSrc":"7621:18:20","nodeType":"YulFunctionCall","src":"7621:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7568:43:20","nodeType":"YulIdentifier","src":"7568:43:20"},"nativeSrc":"7568:72:20","nodeType":"YulFunctionCall","src":"7568:72:20"},"nativeSrc":"7568:72:20","nodeType":"YulExpressionStatement","src":"7568:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7694:6:20","nodeType":"YulIdentifier","src":"7694:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"7707:9:20","nodeType":"YulIdentifier","src":"7707:9:20"},{"kind":"number","nativeSrc":"7718:2:20","nodeType":"YulLiteral","src":"7718:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7703:3:20","nodeType":"YulIdentifier","src":"7703:3:20"},"nativeSrc":"7703:18:20","nodeType":"YulFunctionCall","src":"7703:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7650:43:20","nodeType":"YulIdentifier","src":"7650:43:20"},"nativeSrc":"7650:72:20","nodeType":"YulFunctionCall","src":"7650:72:20"},"nativeSrc":"7650:72:20","nodeType":"YulExpressionStatement","src":"7650:72:20"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"7287:442:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7397:9:20","nodeType":"YulTypedName","src":"7397:9:20","type":""},{"name":"value2","nativeSrc":"7409:6:20","nodeType":"YulTypedName","src":"7409:6:20","type":""},{"name":"value1","nativeSrc":"7417:6:20","nodeType":"YulTypedName","src":"7417:6:20","type":""},{"name":"value0","nativeSrc":"7425:6:20","nodeType":"YulTypedName","src":"7425:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7436:4:20","nodeType":"YulTypedName","src":"7436:4:20","type":""}],"src":"7287:442:20"},{"body":{"nativeSrc":"7777:48:20","nodeType":"YulBlock","src":"7777:48:20","statements":[{"nativeSrc":"7787:32:20","nodeType":"YulAssignment","src":"7787:32:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7812:5:20","nodeType":"YulIdentifier","src":"7812:5:20"}],"functionName":{"name":"iszero","nativeSrc":"7805:6:20","nodeType":"YulIdentifier","src":"7805:6:20"},"nativeSrc":"7805:13:20","nodeType":"YulFunctionCall","src":"7805:13:20"}],"functionName":{"name":"iszero","nativeSrc":"7798:6:20","nodeType":"YulIdentifier","src":"7798:6:20"},"nativeSrc":"7798:21:20","nodeType":"YulFunctionCall","src":"7798:21:20"},"variableNames":[{"name":"cleaned","nativeSrc":"7787:7:20","nodeType":"YulIdentifier","src":"7787:7:20"}]}]},"name":"cleanup_t_bool","nativeSrc":"7735:90:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7759:5:20","nodeType":"YulTypedName","src":"7759:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7769:7:20","nodeType":"YulTypedName","src":"7769:7:20","type":""}],"src":"7735:90:20"},{"body":{"nativeSrc":"7871:76:20","nodeType":"YulBlock","src":"7871:76:20","statements":[{"body":{"nativeSrc":"7925:16:20","nodeType":"YulBlock","src":"7925:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7934:1:20","nodeType":"YulLiteral","src":"7934:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"7937:1:20","nodeType":"YulLiteral","src":"7937:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7927:6:20","nodeType":"YulIdentifier","src":"7927:6:20"},"nativeSrc":"7927:12:20","nodeType":"YulFunctionCall","src":"7927:12:20"},"nativeSrc":"7927:12:20","nodeType":"YulExpressionStatement","src":"7927:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7894:5:20","nodeType":"YulIdentifier","src":"7894:5:20"},{"arguments":[{"name":"value","nativeSrc":"7916:5:20","nodeType":"YulIdentifier","src":"7916:5:20"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"7901:14:20","nodeType":"YulIdentifier","src":"7901:14:20"},"nativeSrc":"7901:21:20","nodeType":"YulFunctionCall","src":"7901:21:20"}],"functionName":{"name":"eq","nativeSrc":"7891:2:20","nodeType":"YulIdentifier","src":"7891:2:20"},"nativeSrc":"7891:32:20","nodeType":"YulFunctionCall","src":"7891:32:20"}],"functionName":{"name":"iszero","nativeSrc":"7884:6:20","nodeType":"YulIdentifier","src":"7884:6:20"},"nativeSrc":"7884:40:20","nodeType":"YulFunctionCall","src":"7884:40:20"},"nativeSrc":"7881:60:20","nodeType":"YulIf","src":"7881:60:20"}]},"name":"validator_revert_t_bool","nativeSrc":"7831:116:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7864:5:20","nodeType":"YulTypedName","src":"7864:5:20","type":""}],"src":"7831:116:20"},{"body":{"nativeSrc":"8013:77:20","nodeType":"YulBlock","src":"8013:77:20","statements":[{"nativeSrc":"8023:22:20","nodeType":"YulAssignment","src":"8023:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"8038:6:20","nodeType":"YulIdentifier","src":"8038:6:20"}],"functionName":{"name":"mload","nativeSrc":"8032:5:20","nodeType":"YulIdentifier","src":"8032:5:20"},"nativeSrc":"8032:13:20","nodeType":"YulFunctionCall","src":"8032:13:20"},"variableNames":[{"name":"value","nativeSrc":"8023:5:20","nodeType":"YulIdentifier","src":"8023:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8078:5:20","nodeType":"YulIdentifier","src":"8078:5:20"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"8054:23:20","nodeType":"YulIdentifier","src":"8054:23:20"},"nativeSrc":"8054:30:20","nodeType":"YulFunctionCall","src":"8054:30:20"},"nativeSrc":"8054:30:20","nodeType":"YulExpressionStatement","src":"8054:30:20"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"7953:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7991:6:20","nodeType":"YulTypedName","src":"7991:6:20","type":""},{"name":"end","nativeSrc":"7999:3:20","nodeType":"YulTypedName","src":"7999:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8007:5:20","nodeType":"YulTypedName","src":"8007:5:20","type":""}],"src":"7953:137:20"},{"body":{"nativeSrc":"8170:271:20","nodeType":"YulBlock","src":"8170:271:20","statements":[{"body":{"nativeSrc":"8216:83:20","nodeType":"YulBlock","src":"8216:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8218:77:20","nodeType":"YulIdentifier","src":"8218:77:20"},"nativeSrc":"8218:79:20","nodeType":"YulFunctionCall","src":"8218:79:20"},"nativeSrc":"8218:79:20","nodeType":"YulExpressionStatement","src":"8218:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8191:7:20","nodeType":"YulIdentifier","src":"8191:7:20"},{"name":"headStart","nativeSrc":"8200:9:20","nodeType":"YulIdentifier","src":"8200:9:20"}],"functionName":{"name":"sub","nativeSrc":"8187:3:20","nodeType":"YulIdentifier","src":"8187:3:20"},"nativeSrc":"8187:23:20","nodeType":"YulFunctionCall","src":"8187:23:20"},{"kind":"number","nativeSrc":"8212:2:20","nodeType":"YulLiteral","src":"8212:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8183:3:20","nodeType":"YulIdentifier","src":"8183:3:20"},"nativeSrc":"8183:32:20","nodeType":"YulFunctionCall","src":"8183:32:20"},"nativeSrc":"8180:119:20","nodeType":"YulIf","src":"8180:119:20"},{"nativeSrc":"8309:125:20","nodeType":"YulBlock","src":"8309:125:20","statements":[{"nativeSrc":"8324:15:20","nodeType":"YulVariableDeclaration","src":"8324:15:20","value":{"kind":"number","nativeSrc":"8338:1:20","nodeType":"YulLiteral","src":"8338:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8328:6:20","nodeType":"YulTypedName","src":"8328:6:20","type":""}]},{"nativeSrc":"8353:71:20","nodeType":"YulAssignment","src":"8353:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8396:9:20","nodeType":"YulIdentifier","src":"8396:9:20"},{"name":"offset","nativeSrc":"8407:6:20","nodeType":"YulIdentifier","src":"8407:6:20"}],"functionName":{"name":"add","nativeSrc":"8392:3:20","nodeType":"YulIdentifier","src":"8392:3:20"},"nativeSrc":"8392:22:20","nodeType":"YulFunctionCall","src":"8392:22:20"},{"name":"dataEnd","nativeSrc":"8416:7:20","nodeType":"YulIdentifier","src":"8416:7:20"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"8363:28:20","nodeType":"YulIdentifier","src":"8363:28:20"},"nativeSrc":"8363:61:20","nodeType":"YulFunctionCall","src":"8363:61:20"},"variableNames":[{"name":"value0","nativeSrc":"8353:6:20","nodeType":"YulIdentifier","src":"8353:6:20"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"8096:345:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8140:9:20","nodeType":"YulTypedName","src":"8140:9:20","type":""},{"name":"dataEnd","nativeSrc":"8151:7:20","nodeType":"YulTypedName","src":"8151:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8163:6:20","nodeType":"YulTypedName","src":"8163:6:20","type":""}],"src":"8096:345:20"},{"body":{"nativeSrc":"8475:152:20","nodeType":"YulBlock","src":"8475:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8492:1:20","nodeType":"YulLiteral","src":"8492:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"8495:77:20","nodeType":"YulLiteral","src":"8495:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8485:6:20","nodeType":"YulIdentifier","src":"8485:6:20"},"nativeSrc":"8485:88:20","nodeType":"YulFunctionCall","src":"8485:88:20"},"nativeSrc":"8485:88:20","nodeType":"YulExpressionStatement","src":"8485:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8589:1:20","nodeType":"YulLiteral","src":"8589:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"8592:4:20","nodeType":"YulLiteral","src":"8592:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8582:6:20","nodeType":"YulIdentifier","src":"8582:6:20"},"nativeSrc":"8582:15:20","nodeType":"YulFunctionCall","src":"8582:15:20"},"nativeSrc":"8582:15:20","nodeType":"YulExpressionStatement","src":"8582:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8613:1:20","nodeType":"YulLiteral","src":"8613:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:20","nodeType":"YulLiteral","src":"8616:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8606:6:20","nodeType":"YulIdentifier","src":"8606:6:20"},"nativeSrc":"8606:15:20","nodeType":"YulFunctionCall","src":"8606:15:20"},"nativeSrc":"8606:15:20","nodeType":"YulExpressionStatement","src":"8606:15:20"}]},"name":"panic_error_0x11","nativeSrc":"8447:180:20","nodeType":"YulFunctionDefinition","src":"8447:180:20"},{"body":{"nativeSrc":"8681:362:20","nodeType":"YulBlock","src":"8681:362:20","statements":[{"nativeSrc":"8691:25:20","nodeType":"YulAssignment","src":"8691:25:20","value":{"arguments":[{"name":"x","nativeSrc":"8714:1:20","nodeType":"YulIdentifier","src":"8714:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8696:17:20","nodeType":"YulIdentifier","src":"8696:17:20"},"nativeSrc":"8696:20:20","nodeType":"YulFunctionCall","src":"8696:20:20"},"variableNames":[{"name":"x","nativeSrc":"8691:1:20","nodeType":"YulIdentifier","src":"8691:1:20"}]},{"nativeSrc":"8725:25:20","nodeType":"YulAssignment","src":"8725:25:20","value":{"arguments":[{"name":"y","nativeSrc":"8748:1:20","nodeType":"YulIdentifier","src":"8748:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8730:17:20","nodeType":"YulIdentifier","src":"8730:17:20"},"nativeSrc":"8730:20:20","nodeType":"YulFunctionCall","src":"8730:20:20"},"variableNames":[{"name":"y","nativeSrc":"8725:1:20","nodeType":"YulIdentifier","src":"8725:1:20"}]},{"nativeSrc":"8759:28:20","nodeType":"YulVariableDeclaration","src":"8759:28:20","value":{"arguments":[{"name":"x","nativeSrc":"8782:1:20","nodeType":"YulIdentifier","src":"8782:1:20"},{"name":"y","nativeSrc":"8785:1:20","nodeType":"YulIdentifier","src":"8785:1:20"}],"functionName":{"name":"mul","nativeSrc":"8778:3:20","nodeType":"YulIdentifier","src":"8778:3:20"},"nativeSrc":"8778:9:20","nodeType":"YulFunctionCall","src":"8778:9:20"},"variables":[{"name":"product_raw","nativeSrc":"8763:11:20","nodeType":"YulTypedName","src":"8763:11:20","type":""}]},{"nativeSrc":"8796:41:20","nodeType":"YulAssignment","src":"8796:41:20","value":{"arguments":[{"name":"product_raw","nativeSrc":"8825:11:20","nodeType":"YulIdentifier","src":"8825:11:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8807:17:20","nodeType":"YulIdentifier","src":"8807:17:20"},"nativeSrc":"8807:30:20","nodeType":"YulFunctionCall","src":"8807:30:20"},"variableNames":[{"name":"product","nativeSrc":"8796:7:20","nodeType":"YulIdentifier","src":"8796:7:20"}]},{"body":{"nativeSrc":"9014:22:20","nodeType":"YulBlock","src":"9014:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9016:16:20","nodeType":"YulIdentifier","src":"9016:16:20"},"nativeSrc":"9016:18:20","nodeType":"YulFunctionCall","src":"9016:18:20"},"nativeSrc":"9016:18:20","nodeType":"YulExpressionStatement","src":"9016:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"8947:1:20","nodeType":"YulIdentifier","src":"8947:1:20"}],"functionName":{"name":"iszero","nativeSrc":"8940:6:20","nodeType":"YulIdentifier","src":"8940:6:20"},"nativeSrc":"8940:9:20","nodeType":"YulFunctionCall","src":"8940:9:20"},{"arguments":[{"name":"y","nativeSrc":"8970:1:20","nodeType":"YulIdentifier","src":"8970:1:20"},{"arguments":[{"name":"product","nativeSrc":"8977:7:20","nodeType":"YulIdentifier","src":"8977:7:20"},{"name":"x","nativeSrc":"8986:1:20","nodeType":"YulIdentifier","src":"8986:1:20"}],"functionName":{"name":"div","nativeSrc":"8973:3:20","nodeType":"YulIdentifier","src":"8973:3:20"},"nativeSrc":"8973:15:20","nodeType":"YulFunctionCall","src":"8973:15:20"}],"functionName":{"name":"eq","nativeSrc":"8967:2:20","nodeType":"YulIdentifier","src":"8967:2:20"},"nativeSrc":"8967:22:20","nodeType":"YulFunctionCall","src":"8967:22:20"}],"functionName":{"name":"or","nativeSrc":"8920:2:20","nodeType":"YulIdentifier","src":"8920:2:20"},"nativeSrc":"8920:83:20","nodeType":"YulFunctionCall","src":"8920:83:20"}],"functionName":{"name":"iszero","nativeSrc":"8900:6:20","nodeType":"YulIdentifier","src":"8900:6:20"},"nativeSrc":"8900:113:20","nodeType":"YulFunctionCall","src":"8900:113:20"},"nativeSrc":"8897:139:20","nodeType":"YulIf","src":"8897:139:20"}]},"name":"checked_mul_t_uint256","nativeSrc":"8633:410:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8664:1:20","nodeType":"YulTypedName","src":"8664:1:20","type":""},{"name":"y","nativeSrc":"8667:1:20","nodeType":"YulTypedName","src":"8667:1:20","type":""}],"returnVariables":[{"name":"product","nativeSrc":"8673:7:20","nodeType":"YulTypedName","src":"8673:7:20","type":""}],"src":"8633:410:20"},{"body":{"nativeSrc":"9077:152:20","nodeType":"YulBlock","src":"9077:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9094:1:20","nodeType":"YulLiteral","src":"9094:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"9097:77:20","nodeType":"YulLiteral","src":"9097:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9087:6:20","nodeType":"YulIdentifier","src":"9087:6:20"},"nativeSrc":"9087:88:20","nodeType":"YulFunctionCall","src":"9087:88:20"},"nativeSrc":"9087:88:20","nodeType":"YulExpressionStatement","src":"9087:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9191:1:20","nodeType":"YulLiteral","src":"9191:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"9194:4:20","nodeType":"YulLiteral","src":"9194:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"9184:6:20","nodeType":"YulIdentifier","src":"9184:6:20"},"nativeSrc":"9184:15:20","nodeType":"YulFunctionCall","src":"9184:15:20"},"nativeSrc":"9184:15:20","nodeType":"YulExpressionStatement","src":"9184:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9215:1:20","nodeType":"YulLiteral","src":"9215:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"9218:4:20","nodeType":"YulLiteral","src":"9218:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9208:6:20","nodeType":"YulIdentifier","src":"9208:6:20"},"nativeSrc":"9208:15:20","nodeType":"YulFunctionCall","src":"9208:15:20"},"nativeSrc":"9208:15:20","nodeType":"YulExpressionStatement","src":"9208:15:20"}]},"name":"panic_error_0x12","nativeSrc":"9049:180:20","nodeType":"YulFunctionDefinition","src":"9049:180:20"},{"body":{"nativeSrc":"9277:143:20","nodeType":"YulBlock","src":"9277:143:20","statements":[{"nativeSrc":"9287:25:20","nodeType":"YulAssignment","src":"9287:25:20","value":{"arguments":[{"name":"x","nativeSrc":"9310:1:20","nodeType":"YulIdentifier","src":"9310:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9292:17:20","nodeType":"YulIdentifier","src":"9292:17:20"},"nativeSrc":"9292:20:20","nodeType":"YulFunctionCall","src":"9292:20:20"},"variableNames":[{"name":"x","nativeSrc":"9287:1:20","nodeType":"YulIdentifier","src":"9287:1:20"}]},{"nativeSrc":"9321:25:20","nodeType":"YulAssignment","src":"9321:25:20","value":{"arguments":[{"name":"y","nativeSrc":"9344:1:20","nodeType":"YulIdentifier","src":"9344:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9326:17:20","nodeType":"YulIdentifier","src":"9326:17:20"},"nativeSrc":"9326:20:20","nodeType":"YulFunctionCall","src":"9326:20:20"},"variableNames":[{"name":"y","nativeSrc":"9321:1:20","nodeType":"YulIdentifier","src":"9321:1:20"}]},{"body":{"nativeSrc":"9368:22:20","nodeType":"YulBlock","src":"9368:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"9370:16:20","nodeType":"YulIdentifier","src":"9370:16:20"},"nativeSrc":"9370:18:20","nodeType":"YulFunctionCall","src":"9370:18:20"},"nativeSrc":"9370:18:20","nodeType":"YulExpressionStatement","src":"9370:18:20"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"9365:1:20","nodeType":"YulIdentifier","src":"9365:1:20"}],"functionName":{"name":"iszero","nativeSrc":"9358:6:20","nodeType":"YulIdentifier","src":"9358:6:20"},"nativeSrc":"9358:9:20","nodeType":"YulFunctionCall","src":"9358:9:20"},"nativeSrc":"9355:35:20","nodeType":"YulIf","src":"9355:35:20"},{"nativeSrc":"9400:14:20","nodeType":"YulAssignment","src":"9400:14:20","value":{"arguments":[{"name":"x","nativeSrc":"9409:1:20","nodeType":"YulIdentifier","src":"9409:1:20"},{"name":"y","nativeSrc":"9412:1:20","nodeType":"YulIdentifier","src":"9412:1:20"}],"functionName":{"name":"div","nativeSrc":"9405:3:20","nodeType":"YulIdentifier","src":"9405:3:20"},"nativeSrc":"9405:9:20","nodeType":"YulFunctionCall","src":"9405:9:20"},"variableNames":[{"name":"r","nativeSrc":"9400:1:20","nodeType":"YulIdentifier","src":"9400:1:20"}]}]},"name":"checked_div_t_uint256","nativeSrc":"9235:185:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9266:1:20","nodeType":"YulTypedName","src":"9266:1:20","type":""},{"name":"y","nativeSrc":"9269:1:20","nodeType":"YulTypedName","src":"9269:1:20","type":""}],"returnVariables":[{"name":"r","nativeSrc":"9275:1:20","nodeType":"YulTypedName","src":"9275:1:20","type":""}],"src":"9235:185:20"},{"body":{"nativeSrc":"9552:206:20","nodeType":"YulBlock","src":"9552:206:20","statements":[{"nativeSrc":"9562:26:20","nodeType":"YulAssignment","src":"9562:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9574:9:20","nodeType":"YulIdentifier","src":"9574:9:20"},{"kind":"number","nativeSrc":"9585:2:20","nodeType":"YulLiteral","src":"9585:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9570:3:20","nodeType":"YulIdentifier","src":"9570:3:20"},"nativeSrc":"9570:18:20","nodeType":"YulFunctionCall","src":"9570:18:20"},"variableNames":[{"name":"tail","nativeSrc":"9562:4:20","nodeType":"YulIdentifier","src":"9562:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9642:6:20","nodeType":"YulIdentifier","src":"9642:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9655:9:20","nodeType":"YulIdentifier","src":"9655:9:20"},{"kind":"number","nativeSrc":"9666:1:20","nodeType":"YulLiteral","src":"9666:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9651:3:20","nodeType":"YulIdentifier","src":"9651:3:20"},"nativeSrc":"9651:17:20","nodeType":"YulFunctionCall","src":"9651:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9598:43:20","nodeType":"YulIdentifier","src":"9598:43:20"},"nativeSrc":"9598:71:20","nodeType":"YulFunctionCall","src":"9598:71:20"},"nativeSrc":"9598:71:20","nodeType":"YulExpressionStatement","src":"9598:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9723:6:20","nodeType":"YulIdentifier","src":"9723:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9736:9:20","nodeType":"YulIdentifier","src":"9736:9:20"},{"kind":"number","nativeSrc":"9747:2:20","nodeType":"YulLiteral","src":"9747:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9732:3:20","nodeType":"YulIdentifier","src":"9732:3:20"},"nativeSrc":"9732:18:20","nodeType":"YulFunctionCall","src":"9732:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9679:43:20","nodeType":"YulIdentifier","src":"9679:43:20"},"nativeSrc":"9679:72:20","nodeType":"YulFunctionCall","src":"9679:72:20"},"nativeSrc":"9679:72:20","nodeType":"YulExpressionStatement","src":"9679:72:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"9426:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9516:9:20","nodeType":"YulTypedName","src":"9516:9:20","type":""},{"name":"value1","nativeSrc":"9528:6:20","nodeType":"YulTypedName","src":"9528:6:20","type":""},{"name":"value0","nativeSrc":"9536:6:20","nodeType":"YulTypedName","src":"9536:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9547:4:20","nodeType":"YulTypedName","src":"9547:4:20","type":""}],"src":"9426:332:20"},{"body":{"nativeSrc":"9890:206:20","nodeType":"YulBlock","src":"9890:206:20","statements":[{"nativeSrc":"9900:26:20","nodeType":"YulAssignment","src":"9900:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9912:9:20","nodeType":"YulIdentifier","src":"9912:9:20"},{"kind":"number","nativeSrc":"9923:2:20","nodeType":"YulLiteral","src":"9923:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9908:3:20","nodeType":"YulIdentifier","src":"9908:3:20"},"nativeSrc":"9908:18:20","nodeType":"YulFunctionCall","src":"9908:18:20"},"variableNames":[{"name":"tail","nativeSrc":"9900:4:20","nodeType":"YulIdentifier","src":"9900:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9980:6:20","nodeType":"YulIdentifier","src":"9980:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9993:9:20","nodeType":"YulIdentifier","src":"9993:9:20"},{"kind":"number","nativeSrc":"10004:1:20","nodeType":"YulLiteral","src":"10004:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9989:3:20","nodeType":"YulIdentifier","src":"9989:3:20"},"nativeSrc":"9989:17:20","nodeType":"YulFunctionCall","src":"9989:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9936:43:20","nodeType":"YulIdentifier","src":"9936:43:20"},"nativeSrc":"9936:71:20","nodeType":"YulFunctionCall","src":"9936:71:20"},"nativeSrc":"9936:71:20","nodeType":"YulExpressionStatement","src":"9936:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10061:6:20","nodeType":"YulIdentifier","src":"10061:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"10074:9:20","nodeType":"YulIdentifier","src":"10074:9:20"},{"kind":"number","nativeSrc":"10085:2:20","nodeType":"YulLiteral","src":"10085:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10070:3:20","nodeType":"YulIdentifier","src":"10070:3:20"},"nativeSrc":"10070:18:20","nodeType":"YulFunctionCall","src":"10070:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10017:43:20","nodeType":"YulIdentifier","src":"10017:43:20"},"nativeSrc":"10017:72:20","nodeType":"YulFunctionCall","src":"10017:72:20"},"nativeSrc":"10017:72:20","nodeType":"YulExpressionStatement","src":"10017:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9764:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9854:9:20","nodeType":"YulTypedName","src":"9854:9:20","type":""},{"name":"value1","nativeSrc":"9866:6:20","nodeType":"YulTypedName","src":"9866:6:20","type":""},{"name":"value0","nativeSrc":"9874:6:20","nodeType":"YulTypedName","src":"9874:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9885:4:20","nodeType":"YulTypedName","src":"9885:4:20","type":""}],"src":"9764:332:20"},{"body":{"nativeSrc":"10146:147:20","nodeType":"YulBlock","src":"10146:147:20","statements":[{"nativeSrc":"10156:25:20","nodeType":"YulAssignment","src":"10156:25:20","value":{"arguments":[{"name":"x","nativeSrc":"10179:1:20","nodeType":"YulIdentifier","src":"10179:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10161:17:20","nodeType":"YulIdentifier","src":"10161:17:20"},"nativeSrc":"10161:20:20","nodeType":"YulFunctionCall","src":"10161:20:20"},"variableNames":[{"name":"x","nativeSrc":"10156:1:20","nodeType":"YulIdentifier","src":"10156:1:20"}]},{"nativeSrc":"10190:25:20","nodeType":"YulAssignment","src":"10190:25:20","value":{"arguments":[{"name":"y","nativeSrc":"10213:1:20","nodeType":"YulIdentifier","src":"10213:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10195:17:20","nodeType":"YulIdentifier","src":"10195:17:20"},"nativeSrc":"10195:20:20","nodeType":"YulFunctionCall","src":"10195:20:20"},"variableNames":[{"name":"y","nativeSrc":"10190:1:20","nodeType":"YulIdentifier","src":"10190:1:20"}]},{"nativeSrc":"10224:16:20","nodeType":"YulAssignment","src":"10224:16:20","value":{"arguments":[{"name":"x","nativeSrc":"10235:1:20","nodeType":"YulIdentifier","src":"10235:1:20"},{"name":"y","nativeSrc":"10238:1:20","nodeType":"YulIdentifier","src":"10238:1:20"}],"functionName":{"name":"add","nativeSrc":"10231:3:20","nodeType":"YulIdentifier","src":"10231:3:20"},"nativeSrc":"10231:9:20","nodeType":"YulFunctionCall","src":"10231:9:20"},"variableNames":[{"name":"sum","nativeSrc":"10224:3:20","nodeType":"YulIdentifier","src":"10224:3:20"}]},{"body":{"nativeSrc":"10264:22:20","nodeType":"YulBlock","src":"10264:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10266:16:20","nodeType":"YulIdentifier","src":"10266:16:20"},"nativeSrc":"10266:18:20","nodeType":"YulFunctionCall","src":"10266:18:20"},"nativeSrc":"10266:18:20","nodeType":"YulExpressionStatement","src":"10266:18:20"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"10256:1:20","nodeType":"YulIdentifier","src":"10256:1:20"},{"name":"sum","nativeSrc":"10259:3:20","nodeType":"YulIdentifier","src":"10259:3:20"}],"functionName":{"name":"gt","nativeSrc":"10253:2:20","nodeType":"YulIdentifier","src":"10253:2:20"},"nativeSrc":"10253:10:20","nodeType":"YulFunctionCall","src":"10253:10:20"},"nativeSrc":"10250:36:20","nodeType":"YulIf","src":"10250:36:20"}]},"name":"checked_add_t_uint256","nativeSrc":"10102:191:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10133:1:20","nodeType":"YulTypedName","src":"10133:1:20","type":""},{"name":"y","nativeSrc":"10136:1:20","nodeType":"YulTypedName","src":"10136:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"10142:3:20","nodeType":"YulTypedName","src":"10142:3:20","type":""}],"src":"10102:191:20"},{"body":{"nativeSrc":"10342:154:20","nodeType":"YulBlock","src":"10342:154:20","statements":[{"nativeSrc":"10352:24:20","nodeType":"YulAssignment","src":"10352:24:20","value":{"arguments":[{"name":"x","nativeSrc":"10374:1:20","nodeType":"YulIdentifier","src":"10374:1:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"10357:16:20","nodeType":"YulIdentifier","src":"10357:16:20"},"nativeSrc":"10357:19:20","nodeType":"YulFunctionCall","src":"10357:19:20"},"variableNames":[{"name":"x","nativeSrc":"10352:1:20","nodeType":"YulIdentifier","src":"10352:1:20"}]},{"nativeSrc":"10385:24:20","nodeType":"YulAssignment","src":"10385:24:20","value":{"arguments":[{"name":"y","nativeSrc":"10407:1:20","nodeType":"YulIdentifier","src":"10407:1:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"10390:16:20","nodeType":"YulIdentifier","src":"10390:16:20"},"nativeSrc":"10390:19:20","nodeType":"YulFunctionCall","src":"10390:19:20"},"variableNames":[{"name":"y","nativeSrc":"10385:1:20","nodeType":"YulIdentifier","src":"10385:1:20"}]},{"nativeSrc":"10418:16:20","nodeType":"YulAssignment","src":"10418:16:20","value":{"arguments":[{"name":"x","nativeSrc":"10429:1:20","nodeType":"YulIdentifier","src":"10429:1:20"},{"name":"y","nativeSrc":"10432:1:20","nodeType":"YulIdentifier","src":"10432:1:20"}],"functionName":{"name":"add","nativeSrc":"10425:3:20","nodeType":"YulIdentifier","src":"10425:3:20"},"nativeSrc":"10425:9:20","nodeType":"YulFunctionCall","src":"10425:9:20"},"variableNames":[{"name":"sum","nativeSrc":"10418:3:20","nodeType":"YulIdentifier","src":"10418:3:20"}]},{"body":{"nativeSrc":"10467:22:20","nodeType":"YulBlock","src":"10467:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10469:16:20","nodeType":"YulIdentifier","src":"10469:16:20"},"nativeSrc":"10469:18:20","nodeType":"YulFunctionCall","src":"10469:18:20"},"nativeSrc":"10469:18:20","nodeType":"YulExpressionStatement","src":"10469:18:20"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"10450:3:20","nodeType":"YulIdentifier","src":"10450:3:20"},{"kind":"number","nativeSrc":"10455:10:20","nodeType":"YulLiteral","src":"10455:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"gt","nativeSrc":"10447:2:20","nodeType":"YulIdentifier","src":"10447:2:20"},"nativeSrc":"10447:19:20","nodeType":"YulFunctionCall","src":"10447:19:20"},"nativeSrc":"10444:45:20","nodeType":"YulIf","src":"10444:45:20"}]},"name":"checked_add_t_uint32","nativeSrc":"10299:197:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10329:1:20","nodeType":"YulTypedName","src":"10329:1:20","type":""},{"name":"y","nativeSrc":"10332:1:20","nodeType":"YulTypedName","src":"10332:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"10338:3:20","nodeType":"YulTypedName","src":"10338:3:20","type":""}],"src":"10299:197:20"},{"body":{"nativeSrc":"10543:141:20","nodeType":"YulBlock","src":"10543:141:20","statements":[{"nativeSrc":"10553:24:20","nodeType":"YulAssignment","src":"10553:24:20","value":{"arguments":[{"name":"x","nativeSrc":"10575:1:20","nodeType":"YulIdentifier","src":"10575:1:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"10558:16:20","nodeType":"YulIdentifier","src":"10558:16:20"},"nativeSrc":"10558:19:20","nodeType":"YulFunctionCall","src":"10558:19:20"},"variableNames":[{"name":"x","nativeSrc":"10553:1:20","nodeType":"YulIdentifier","src":"10553:1:20"}]},{"nativeSrc":"10586:24:20","nodeType":"YulAssignment","src":"10586:24:20","value":{"arguments":[{"name":"y","nativeSrc":"10608:1:20","nodeType":"YulIdentifier","src":"10608:1:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"10591:16:20","nodeType":"YulIdentifier","src":"10591:16:20"},"nativeSrc":"10591:19:20","nodeType":"YulFunctionCall","src":"10591:19:20"},"variableNames":[{"name":"y","nativeSrc":"10586:1:20","nodeType":"YulIdentifier","src":"10586:1:20"}]},{"body":{"nativeSrc":"10632:22:20","nodeType":"YulBlock","src":"10632:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"10634:16:20","nodeType":"YulIdentifier","src":"10634:16:20"},"nativeSrc":"10634:18:20","nodeType":"YulFunctionCall","src":"10634:18:20"},"nativeSrc":"10634:18:20","nodeType":"YulExpressionStatement","src":"10634:18:20"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"10629:1:20","nodeType":"YulIdentifier","src":"10629:1:20"}],"functionName":{"name":"iszero","nativeSrc":"10622:6:20","nodeType":"YulIdentifier","src":"10622:6:20"},"nativeSrc":"10622:9:20","nodeType":"YulFunctionCall","src":"10622:9:20"},"nativeSrc":"10619:35:20","nodeType":"YulIf","src":"10619:35:20"},{"nativeSrc":"10664:14:20","nodeType":"YulAssignment","src":"10664:14:20","value":{"arguments":[{"name":"x","nativeSrc":"10673:1:20","nodeType":"YulIdentifier","src":"10673:1:20"},{"name":"y","nativeSrc":"10676:1:20","nodeType":"YulIdentifier","src":"10676:1:20"}],"functionName":{"name":"div","nativeSrc":"10669:3:20","nodeType":"YulIdentifier","src":"10669:3:20"},"nativeSrc":"10669:9:20","nodeType":"YulFunctionCall","src":"10669:9:20"},"variableNames":[{"name":"r","nativeSrc":"10664:1:20","nodeType":"YulIdentifier","src":"10664:1:20"}]}]},"name":"checked_div_t_uint32","nativeSrc":"10502:182:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10532:1:20","nodeType":"YulTypedName","src":"10532:1:20","type":""},{"name":"y","nativeSrc":"10535:1:20","nodeType":"YulTypedName","src":"10535:1:20","type":""}],"returnVariables":[{"name":"r","nativeSrc":"10541:1:20","nodeType":"YulTypedName","src":"10541:1:20","type":""}],"src":"10502:182:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$754_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$754_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$754_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$754__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$754_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint32(x, y) -> sum {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_uint32(x, y) -> r {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561000f575f80fd5b5060043610610086575f3560e01c80638b099b23116100595780638b099b23146100fc578063da30923f1461012c578063ede1e41614610148578063f9fa57321461016457610086565b80630cf5946b1461008a5780630f574ba7146100a65780631718b22e146100c25780634f367b32146100de575b5f80fd5b6100a4600480360381019061009f9190610ad7565b610194565b005b6100c060048036038101906100bb9190610b15565b610313565b005b6100dc60048036038101906100d79190610ad7565b610491565b005b6100e661068e565b6040516100f39190610b9b565b60405180910390f35b61011660048036038101906101119190610bb4565b6106b1565b6040516101239190610c01565b60405180910390f35b61014660048036038101906101419190610b15565b610754565b005b610162600480360381019061015d9190610c53565b6108cb565b005b61017e60048036038101906101799190610c91565b6109ee565b60405161018b9190610ccb565b60405180910390f35b5f339050815f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101f19190610cf3565b602060405180830381865afa15801561020c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102309190610d20565b1015610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610da5565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8285856040518463ffffffff1660e01b81526004016102cd93929190610dc3565b6020604051808303815f875af11580156102e9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030d9190610e2d565b50505050565b5f339050815f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103709190610cf3565b602060405180830381865afa15801561038b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103af9190610d20565b10156103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e790610da5565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff1660e01b815260040161044c93929190610dc3565b6020604051808303815f875af1158015610468573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061048c9190610e2d565b505050565b5f3390505f829050600560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160149054906101000a900463ffffffff1663ffffffff1603610512576064600a846105059190610e85565b61050f9190610ef3565b90505b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161056b9190610cf3565b602060405180830381865afa158015610586573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105aa9190610d20565b10156105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e290610da5565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8386846040518463ffffffff1660e01b815260040161064793929190610dc3565b6020604051808303815f875af1158015610663573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106879190610e2d565b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846040518363ffffffff1660e01b815260040161070d929190610f23565b602060405180830381865afa158015610728573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061074c9190610d20565b905092915050565b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107ad9190610cf3565b602060405180830381865afa1580156107c8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ec9190610d20565b101561082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490610da5565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610887929190610f4a565b6020604051808303815f875af11580156108a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c79190610e2d565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201548152505090506001816040018181516109ac9190610f71565b9150818152505080604001518282602001516109c89190610fa4565b6109d29190610fdb565b816020019063ffffffff16908163ffffffff1681525050505050565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160149054906101000a900463ffffffff169050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a7382610a4a565b9050919050565b610a8381610a69565b8114610a8d575f80fd5b50565b5f81359050610a9e81610a7a565b92915050565b5f819050919050565b610ab681610aa4565b8114610ac0575f80fd5b50565b5f81359050610ad181610aad565b92915050565b5f8060408385031215610aed57610aec610a46565b5b5f610afa85828601610a90565b9250506020610b0b85828601610ac3565b9150509250929050565b5f60208284031215610b2a57610b29610a46565b5b5f610b3784828501610ac3565b91505092915050565b5f819050919050565b5f610b63610b5e610b5984610a4a565b610b40565b610a4a565b9050919050565b5f610b7482610b49565b9050919050565b5f610b8582610b6a565b9050919050565b610b9581610b7b565b82525050565b5f602082019050610bae5f830184610b8c565b92915050565b5f8060408385031215610bca57610bc9610a46565b5b5f610bd785828601610a90565b9250506020610be885828601610a90565b9150509250929050565b610bfb81610aa4565b82525050565b5f602082019050610c145f830184610bf2565b92915050565b5f63ffffffff82169050919050565b610c3281610c1a565b8114610c3c575f80fd5b50565b5f81359050610c4d81610c29565b92915050565b5f8060408385031215610c6957610c68610a46565b5b5f610c7685828601610a90565b9250506020610c8785828601610c3f565b9150509250929050565b5f60208284031215610ca657610ca5610a46565b5b5f610cb384828501610a90565b91505092915050565b610cc581610c1a565b82525050565b5f602082019050610cde5f830184610cbc565b92915050565b610ced81610a69565b82525050565b5f602082019050610d065f830184610ce4565b92915050565b5f81519050610d1a81610aad565b92915050565b5f60208284031215610d3557610d34610a46565b5b5f610d4284828501610d0c565b91505092915050565b5f82825260208201905092915050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610d8f601283610d4b565b9150610d9a82610d5b565b602082019050919050565b5f6020820190508181035f830152610dbc81610d83565b9050919050565b5f606082019050610dd65f830186610ce4565b610de36020830185610ce4565b610df06040830184610bf2565b949350505050565b5f8115159050919050565b610e0c81610df8565b8114610e16575f80fd5b50565b5f81519050610e2781610e03565b92915050565b5f60208284031215610e4257610e41610a46565b5b5f610e4f84828501610e19565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e8f82610aa4565b9150610e9a83610aa4565b9250828202610ea881610aa4565b91508282048414831517610ebf57610ebe610e58565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610efd82610aa4565b9150610f0883610aa4565b925082610f1857610f17610ec6565b5b828204905092915050565b5f604082019050610f365f830185610ce4565b610f436020830184610ce4565b9392505050565b5f604082019050610f5d5f830185610ce4565b610f6a6020830184610bf2565b9392505050565b5f610f7b82610aa4565b9150610f8683610aa4565b9250828201905080821115610f9e57610f9d610e58565b5b92915050565b5f610fae82610c1a565b9150610fb983610c1a565b9250828201905063ffffffff811115610fd557610fd4610e58565b5b92915050565b5f610fe582610c1a565b9150610ff083610c1a565b92508261100057610fff610ec6565b5b82820490509291505056fea264697066735822122013a8386e9dd49a3c018ed62b079cbbb17c1f0ba0ecc967fb916ca63d1fdc028464736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B099B23 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8B099B23 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xDA30923F EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xEDE1E416 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xF9FA5732 EQ PUSH2 0x164 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0xCF5946B EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xF574BA7 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x1718B22E EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x4F367B32 EQ PUSH2 0xDE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x194 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP DUP2 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST LT ISZERO PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP DUP2 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x468 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 DUP3 SWAP1 POP PUSH1 0x5 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SUB PUSH2 0x512 JUMPI PUSH1 0x64 PUSH1 0xA DUP5 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST PUSH2 0x50F SWAP2 SWAP1 PUSH2 0xEF3 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST LT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E2 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 DUP7 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x647 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x663 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x687 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP3 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST LT ISZERO PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x887 SWAP3 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MLOAD PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0xF71 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x40 ADD MLOAD DUP3 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0xFDB JUMP JUMPDEST DUP2 PUSH1 0x20 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA73 DUP3 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA83 DUP2 PUSH2 0xA69 JUMP JUMPDEST DUP2 EQ PUSH2 0xA8D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9E DUP2 PUSH2 0xA7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB6 DUP2 PUSH2 0xAA4 JUMP JUMPDEST DUP2 EQ PUSH2 0xAC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD1 DUP2 PUSH2 0xAAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAED JUMPI PUSH2 0xAEC PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAFA DUP6 DUP3 DUP7 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0B DUP6 DUP3 DUP7 ADD PUSH2 0xAC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2A JUMPI PUSH2 0xB29 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB37 DUP5 DUP3 DUP6 ADD PUSH2 0xAC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB63 PUSH2 0xB5E PUSH2 0xB59 DUP5 PUSH2 0xA4A JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB74 DUP3 PUSH2 0xB49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB85 DUP3 PUSH2 0xB6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB95 DUP2 PUSH2 0xB7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAE PUSH0 DUP4 ADD DUP5 PUSH2 0xB8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBC9 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD7 DUP6 DUP3 DUP7 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBE8 DUP6 DUP3 DUP7 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFB DUP2 PUSH2 0xAA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC14 PUSH0 DUP4 ADD DUP5 PUSH2 0xBF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC32 DUP2 PUSH2 0xC1A JUMP JUMPDEST DUP2 EQ PUSH2 0xC3C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC4D DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC76 DUP6 DUP3 DUP7 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC87 DUP6 DUP3 DUP7 ADD PUSH2 0xC3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA6 JUMPI PUSH2 0xCA5 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC5 DUP2 PUSH2 0xC1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDE PUSH0 DUP4 ADD DUP5 PUSH2 0xCBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCED DUP2 PUSH2 0xA69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD1A DUP2 PUSH2 0xAAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD42 DUP5 DUP3 DUP6 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD8F PUSH1 0x12 DUP4 PUSH2 0xD4B JUMP JUMPDEST SWAP2 POP PUSH2 0xD9A DUP3 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDBC DUP2 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDD6 PUSH0 DUP4 ADD DUP7 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xDE3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xDF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBF2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0C DUP2 PUSH2 0xDF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xE16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE27 DUP2 PUSH2 0xE03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 PUSH2 0xA46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE4F DUP5 DUP3 DUP6 ADD PUSH2 0xE19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE8F DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9A DUP4 PUSH2 0xAA4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xEA8 DUP2 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xE58 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEFD DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF08 DUP4 PUSH2 0xAA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF18 JUMPI PUSH2 0xF17 PUSH2 0xEC6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF36 PUSH0 DUP4 ADD DUP6 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xF43 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCE4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF5D PUSH0 DUP4 ADD DUP6 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0xF6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7B DUP3 PUSH2 0xAA4 JUMP JUMPDEST SWAP2 POP PUSH2 0xF86 DUP4 PUSH2 0xAA4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0xE58 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFAE DUP3 PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP PUSH2 0xFB9 DUP4 PUSH2 0xC1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0xFD5 JUMPI PUSH2 0xFD4 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFE5 DUP3 PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP PUSH2 0xFF0 DUP4 PUSH2 0xC1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1000 JUMPI PUSH2 0xFFF PUSH2 0xEC6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA8 CODESIZE PUSH15 0x9DD49A3C018ED62B079CBBB17C1F0B LOG0 0xEC 0xC9 PUSH8 0xFB916CA63D1FDC02 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"190:2412:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2001:274;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2301:295;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1070:439;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;213:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;600:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;827:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1538:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1835:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2001:274;2077:21;2101:10;2077:34;;2167:6;2129:12;;;;;;;;;;:22;;;2152:10;2129:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;2121:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2206:12;;;;;;;;;;:25;;;2232:13;2246;2261:6;2206:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2067:208;2001:274;;:::o;2301:295::-;2365:25;2393:10;2365:38;;2459:18;2421:12;;;;;;;;;;:22;;;2444:10;2421:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;2413:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2510:12;;;;;;;;;;:25;;;2536:17;2563:4;2570:18;2510:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2355:241;2301:295;:::o;1070:439::-;1150:21;1174:10;1150:34;;1194:17;1214:9;1194:29;;1279:1;1237:16;:31;1254:13;1237:31;;;;;;;;;;;;;;;:38;;;;;;;;;;;;:43;;;1233:107;;1326:3;1320:2;1308:9;:14;;;;:::i;:::-;1307:22;;;;:::i;:::-;1295:34;;1233:107;1395:9;1357:12;;;;;;;;;;:22;;;1380:10;1357:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;1349:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1437:12;;;;;;;;;;:25;;;1463:13;1477;1492:9;1437:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1140:369;;1070:439;;:::o;213:26::-;;;;;;;;;;;;:::o;600:200::-;677:7;755:12;;;;;;;;;;;:22;;;778:5;785:7;755:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;748:45;;600:200;;;;:::o;827:216::-;944:12;903;;;;;;;;;;:22;;;934:4;903:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;895:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;989:12;;;;;;;;;;:21;;;1011:10;1023:12;989:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;827:216;:::o;1538:291::-;1617:31;1651:16;:31;1668:13;1651:31;;;;;;;;;;;;;;;1617:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1721:1;1692:10;:26;;:30;;;;;;;:::i;:::-;;;;;;;;1795:10;:26;;;1779:6;1759:10;:17;;;:26;;;;:::i;:::-;1752:70;;;;:::i;:::-;1732:10;:17;;:90;;;;;;;;;;;1607:222;1538:291;;:::o;1835:137::-;1903:6;1927:16;:31;1944:13;1927:31;;;;;;;;;;;;;;;:38;;;;;;;;;;;;1920:45;;1835:137;;;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:329::-;1736:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:119;;;1791:79;;:::i;:::-;1753:119;1911:1;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1882:117;1677:329;;;;:::o;2012:60::-;2040:3;2061:5;2054:12;;2012:60;;;:::o;2078:142::-;2128:9;2161:53;2179:34;2188:24;2206:5;2188:24;:::i;:::-;2179:34;:::i;:::-;2161:53;:::i;:::-;2148:66;;2078:142;;;:::o;2226:126::-;2276:9;2309:37;2340:5;2309:37;:::i;:::-;2296:50;;2226:126;;;:::o;2358:140::-;2422:9;2455:37;2486:5;2455:37;:::i;:::-;2442:50;;2358:140;;;:::o;2504:159::-;2605:51;2650:5;2605:51;:::i;:::-;2600:3;2593:64;2504:159;;:::o;2669:250::-;2776:4;2814:2;2803:9;2799:18;2791:26;;2827:85;2909:1;2898:9;2894:17;2885:6;2827:85;:::i;:::-;2669:250;;;;:::o;2925:474::-;2993:6;3001;3050:2;3038:9;3029:7;3025:23;3021:32;3018:119;;;3056:79;;:::i;:::-;3018:119;3176:1;3201:53;3246:7;3237:6;3226:9;3222:22;3201:53;:::i;:::-;3191:63;;3147:117;3303:2;3329:53;3374:7;3365:6;3354:9;3350:22;3329:53;:::i;:::-;3319:63;;3274:118;2925:474;;;;;:::o;3405:118::-;3492:24;3510:5;3492:24;:::i;:::-;3487:3;3480:37;3405:118;;:::o;3529:222::-;3622:4;3660:2;3649:9;3645:18;3637:26;;3673:71;3741:1;3730:9;3726:17;3717:6;3673:71;:::i;:::-;3529:222;;;;:::o;3757:93::-;3793:7;3833:10;3826:5;3822:22;3811:33;;3757:93;;;:::o;3856:120::-;3928:23;3945:5;3928:23;:::i;:::-;3921:5;3918:34;3908:62;;3966:1;3963;3956:12;3908:62;3856:120;:::o;3982:137::-;4027:5;4065:6;4052:20;4043:29;;4081:32;4107:5;4081:32;:::i;:::-;3982:137;;;;:::o;4125:472::-;4192:6;4200;4249:2;4237:9;4228:7;4224:23;4220:32;4217:119;;;4255:79;;:::i;:::-;4217:119;4375:1;4400:53;4445:7;4436:6;4425:9;4421:22;4400:53;:::i;:::-;4390:63;;4346:117;4502:2;4528:52;4572:7;4563:6;4552:9;4548:22;4528:52;:::i;:::-;4518:62;;4473:117;4125:472;;;;;:::o;4603:329::-;4662:6;4711:2;4699:9;4690:7;4686:23;4682:32;4679:119;;;4717:79;;:::i;:::-;4679:119;4837:1;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4808:117;4603:329;;;;:::o;4938:115::-;5023:23;5040:5;5023:23;:::i;:::-;5018:3;5011:36;4938:115;;:::o;5059:218::-;5150:4;5188:2;5177:9;5173:18;5165:26;;5201:69;5267:1;5256:9;5252:17;5243:6;5201:69;:::i;:::-;5059:218;;;;:::o;5283:118::-;5370:24;5388:5;5370:24;:::i;:::-;5365:3;5358:37;5283:118;;:::o;5407:222::-;5500:4;5538:2;5527:9;5523:18;5515:26;;5551:71;5619:1;5608:9;5604:17;5595:6;5551:71;:::i;:::-;5407:222;;;;:::o;5635:143::-;5692:5;5723:6;5717:13;5708:22;;5739:33;5766:5;5739:33;:::i;:::-;5635:143;;;;:::o;5784:351::-;5854:6;5903:2;5891:9;5882:7;5878:23;5874:32;5871:119;;;5909:79;;:::i;:::-;5871:119;6029:1;6054:64;6110:7;6101:6;6090:9;6086:22;6054:64;:::i;:::-;6044:74;;6000:128;5784:351;;;;:::o;6141:169::-;6225:11;6259:6;6254:3;6247:19;6299:4;6294:3;6290:14;6275:29;;6141:169;;;;:::o;6316:168::-;6456:20;6452:1;6444:6;6440:14;6433:44;6316:168;:::o;6490:366::-;6632:3;6653:67;6717:2;6712:3;6653:67;:::i;:::-;6646:74;;6729:93;6818:3;6729:93;:::i;:::-;6847:2;6842:3;6838:12;6831:19;;6490:366;;;:::o;6862:419::-;7028:4;7066:2;7055:9;7051:18;7043:26;;7115:9;7109:4;7105:20;7101:1;7090:9;7086:17;7079:47;7143:131;7269:4;7143:131;:::i;:::-;7135:139;;6862:419;;;:::o;7287:442::-;7436:4;7474:2;7463:9;7459:18;7451:26;;7487:71;7555:1;7544:9;7540:17;7531:6;7487:71;:::i;:::-;7568:72;7636:2;7625:9;7621:18;7612:6;7568:72;:::i;:::-;7650;7718:2;7707:9;7703:18;7694:6;7650:72;:::i;:::-;7287:442;;;;;;:::o;7735:90::-;7769:7;7812:5;7805:13;7798:21;7787:32;;7735:90;;;:::o;7831:116::-;7901:21;7916:5;7901:21;:::i;:::-;7894:5;7891:32;7881:60;;7937:1;7934;7927:12;7881:60;7831:116;:::o;7953:137::-;8007:5;8038:6;8032:13;8023:22;;8054:30;8078:5;8054:30;:::i;:::-;7953:137;;;;:::o;8096:345::-;8163:6;8212:2;8200:9;8191:7;8187:23;8183:32;8180:119;;;8218:79;;:::i;:::-;8180:119;8338:1;8363:61;8416:7;8407:6;8396:9;8392:22;8363:61;:::i;:::-;8353:71;;8309:125;8096:345;;;;:::o;8447:180::-;8495:77;8492:1;8485:88;8592:4;8589:1;8582:15;8616:4;8613:1;8606:15;8633:410;8673:7;8696:20;8714:1;8696:20;:::i;:::-;8691:25;;8730:20;8748:1;8730:20;:::i;:::-;8725:25;;8785:1;8782;8778:9;8807:30;8825:11;8807:30;:::i;:::-;8796:41;;8986:1;8977:7;8973:15;8970:1;8967:22;8947:1;8940:9;8920:83;8897:139;;9016:18;;:::i;:::-;8897:139;8681:362;8633:410;;;;:::o;9049:180::-;9097:77;9094:1;9087:88;9194:4;9191:1;9184:15;9218:4;9215:1;9208:15;9235:185;9275:1;9292:20;9310:1;9292:20;:::i;:::-;9287:25;;9326:20;9344:1;9326:20;:::i;:::-;9321:25;;9365:1;9355:35;;9370:18;;:::i;:::-;9355:35;9412:1;9409;9405:9;9400:14;;9235:185;;;;:::o;9426:332::-;9547:4;9585:2;9574:9;9570:18;9562:26;;9598:71;9666:1;9655:9;9651:17;9642:6;9598:71;:::i;:::-;9679:72;9747:2;9736:9;9732:18;9723:6;9679:72;:::i;:::-;9426:332;;;;;:::o;9764:::-;9885:4;9923:2;9912:9;9908:18;9900:26;;9936:71;10004:1;9993:9;9989:17;9980:6;9936:71;:::i;:::-;10017:72;10085:2;10074:9;10070:18;10061:6;10017:72;:::i;:::-;9764:332;;;;;:::o;10102:191::-;10142:3;10161:20;10179:1;10161:20;:::i;:::-;10156:25;;10195:20;10213:1;10195:20;:::i;:::-;10190:25;;10238:1;10235;10231:9;10224:16;;10259:3;10256:1;10253:10;10250:36;;;10266:18;;:::i;:::-;10250:36;10102:191;;;;:::o;10299:197::-;10338:3;10357:19;10374:1;10357:19;:::i;:::-;10352:24;;10390:19;10407:1;10390:19;:::i;:::-;10385:24;;10432:1;10429;10425:9;10418:16;;10455:10;10450:3;10447:19;10444:45;;;10469:18;;:::i;:::-;10444:45;10299:197;;;;:::o;10502:182::-;10541:1;10558:19;10575:1;10558:19;:::i;:::-;10553:24;;10591:19;10608:1;10591:19;:::i;:::-;10586:24;;10629:1;10619:35;;10634:18;;:::i;:::-;10619:35;10676:1;10673;10669:9;10664:14;;10502:182;;;;:::o"},"methodIdentifiers":{"buyProducts(address,uint256)":"1718b22e","checkAllowance(address,address)":"8b099b23","getFarmerRating(address)":"f9fa5732","payFarmer(address,uint256)":"0cf5946b","rateFarmer(address,uint32)":"ede1e416","subscribe(uint256)":"0f574ba7","transferTokensToFarmer(uint256)":"da30923f","vegrowwToken()":"4f367b32"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vendorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"itemsCost\",\"type\":\"uint256\"}],\"name\":\"buyProducts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"checkAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"farmerAddress\",\"type\":\"address\"}],\"name\":\"getFarmerRating\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"farmerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"payFarmer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"farmerAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"rating\",\"type\":\"uint32\"}],\"name\":\"rateFarmer\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscribtionAmount\",\"type\":\"uint256\"}],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"transferTokensToFarmer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vegrowwToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Farmer.sol\":\"Farmer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Farmer.sol\":{\"keccak256\":\"0x77560f5260b76d229f777b553fb906c4b054eaab23d213bca14d0762d29d38bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46157bca4c4a13c0e9f77208b30ab6bd891d4fd80aa3d76d9f171b3d96410b5d\",\"dweb:/ipfs/QmZ9Y41vUrsDJjEe9dPva4GSmpMLEmPNcKzhdTkynMtzjZ\"]}},\"version\":1}"}},"contracts/Storage.sol":{"Storage":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"StoreEvent","type":"event"},{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"store","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561000f575f80fd5b5061028d8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80632e64cec1146100385780636057361d14610056575b5f80fd5b610040610072565b60405161004d9190610115565b60405180910390f35b610070600480360381019061006b919061015c565b61007a565b005b5f8054905090565b606481106100bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b4906101e1565b60405180910390fd5b7ff968ef841feb103aafe6a7faf747366409c985dbe99998d2ab7ecd867096542c336040516100ec919061023e565b60405180910390a1805f8190555050565b5f819050919050565b61010f816100fd565b82525050565b5f6020820190506101285f830184610106565b92915050565b5f80fd5b61013b816100fd565b8114610145575f80fd5b50565b5f8135905061015681610132565b92915050565b5f602082840312156101715761017061012e565b5b5f61017e84828501610148565b91505092915050565b5f82825260208201905092915050565b7f4e756d626572206d757374206265203c203130300000000000000000000000005f82015250565b5f6101cb601483610187565b91506101d682610197565b602082019050919050565b5f6020820190508181035f8301526101f8816101bf565b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610228826101ff565b9050919050565b6102388161021e565b82525050565b5f6020820190506102515f83018461022f565b9291505056fea2646970667358221220055e863eb1bd3fbed27f36c077ea6cea2054b5d497d752553aeae62f8fd44fa264736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x6057361D EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 LT PUSH2 0xBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4 SWAP1 PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF968EF841FEB103AAFE6A7FAF747366409C985DBE99998D2AB7ECD867096542C CALLER PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F DUP2 PUSH2 0xFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x128 PUSH0 DUP4 ADD DUP5 PUSH2 0x106 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13B DUP2 PUSH2 0xFD JUMP JUMPDEST DUP2 EQ PUSH2 0x145 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156 DUP2 PUSH2 0x132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x12E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E DUP5 DUP3 DUP6 ADD PUSH2 0x148 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E756D626572206D757374206265203C20313030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB PUSH1 0x14 DUP4 PUSH2 0x187 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6 DUP3 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8 DUP2 PUSH2 0x1BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x228 DUP3 PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x251 PUSH0 DUP4 ADD DUP5 PUSH2 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0x5E DUP7 RETURNDATACOPY 0xB1 0xBD EXTCODEHASH 0xBE 0xD2 PUSH32 0x36C077EA6CEA2054B5D497D752553AEAE62F8FD44FA264736F6C634300081500 CALLER ","sourceMap":"199:568:18:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@retrieve_3736":{"entryPoint":114,"id":3736,"parameterSlots":0,"returnSlots":1},"@store_3727":{"entryPoint":122,"id":3727,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":559,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4_to_t_string_memory_ptr_fromStack":{"entryPoint":447,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":262,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":481,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":277,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":391,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":542,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":511,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":253,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":302,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":306,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3108:20","nodeType":"YulBlock","src":"0:3108:20","statements":[{"body":{"nativeSrc":"52:32:20","nodeType":"YulBlock","src":"52:32:20","statements":[{"nativeSrc":"62:16:20","nodeType":"YulAssignment","src":"62:16:20","value":{"name":"value","nativeSrc":"73:5:20","nodeType":"YulIdentifier","src":"73:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:20","nodeType":"YulIdentifier","src":"62:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:20","nodeType":"YulTypedName","src":"34:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:20","nodeType":"YulTypedName","src":"44:7:20","type":""}],"src":"7:77:20"},{"body":{"nativeSrc":"155:53:20","nodeType":"YulBlock","src":"155:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"172:3:20","nodeType":"YulIdentifier","src":"172:3:20"},{"arguments":[{"name":"value","nativeSrc":"195:5:20","nodeType":"YulIdentifier","src":"195:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"177:17:20","nodeType":"YulIdentifier","src":"177:17:20"},"nativeSrc":"177:24:20","nodeType":"YulFunctionCall","src":"177:24:20"}],"functionName":{"name":"mstore","nativeSrc":"165:6:20","nodeType":"YulIdentifier","src":"165:6:20"},"nativeSrc":"165:37:20","nodeType":"YulFunctionCall","src":"165:37:20"},"nativeSrc":"165:37:20","nodeType":"YulExpressionStatement","src":"165:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"90:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"143:5:20","nodeType":"YulTypedName","src":"143:5:20","type":""},{"name":"pos","nativeSrc":"150:3:20","nodeType":"YulTypedName","src":"150:3:20","type":""}],"src":"90:118:20"},{"body":{"nativeSrc":"312:124:20","nodeType":"YulBlock","src":"312:124:20","statements":[{"nativeSrc":"322:26:20","nodeType":"YulAssignment","src":"322:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:20","nodeType":"YulIdentifier","src":"334:9:20"},{"kind":"number","nativeSrc":"345:2:20","nodeType":"YulLiteral","src":"345:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"330:3:20","nodeType":"YulIdentifier","src":"330:3:20"},"nativeSrc":"330:18:20","nodeType":"YulFunctionCall","src":"330:18:20"},"variableNames":[{"name":"tail","nativeSrc":"322:4:20","nodeType":"YulIdentifier","src":"322:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"402:6:20","nodeType":"YulIdentifier","src":"402:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"415:9:20","nodeType":"YulIdentifier","src":"415:9:20"},{"kind":"number","nativeSrc":"426:1:20","nodeType":"YulLiteral","src":"426:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"411:3:20","nodeType":"YulIdentifier","src":"411:3:20"},"nativeSrc":"411:17:20","nodeType":"YulFunctionCall","src":"411:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"358:43:20","nodeType":"YulIdentifier","src":"358:43:20"},"nativeSrc":"358:71:20","nodeType":"YulFunctionCall","src":"358:71:20"},"nativeSrc":"358:71:20","nodeType":"YulExpressionStatement","src":"358:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"214:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"284:9:20","nodeType":"YulTypedName","src":"284:9:20","type":""},{"name":"value0","nativeSrc":"296:6:20","nodeType":"YulTypedName","src":"296:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"307:4:20","nodeType":"YulTypedName","src":"307:4:20","type":""}],"src":"214:222:20"},{"body":{"nativeSrc":"482:35:20","nodeType":"YulBlock","src":"482:35:20","statements":[{"nativeSrc":"492:19:20","nodeType":"YulAssignment","src":"492:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"508:2:20","nodeType":"YulLiteral","src":"508:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"502:5:20","nodeType":"YulIdentifier","src":"502:5:20"},"nativeSrc":"502:9:20","nodeType":"YulFunctionCall","src":"502:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"492:6:20","nodeType":"YulIdentifier","src":"492:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"442:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"475:6:20","nodeType":"YulTypedName","src":"475:6:20","type":""}],"src":"442:75:20"},{"body":{"nativeSrc":"612:28:20","nodeType":"YulBlock","src":"612:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"629:1:20","nodeType":"YulLiteral","src":"629:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"632:1:20","nodeType":"YulLiteral","src":"632:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"622:6:20","nodeType":"YulIdentifier","src":"622:6:20"},"nativeSrc":"622:12:20","nodeType":"YulFunctionCall","src":"622:12:20"},"nativeSrc":"622:12:20","nodeType":"YulExpressionStatement","src":"622:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"523:117:20","nodeType":"YulFunctionDefinition","src":"523:117:20"},{"body":{"nativeSrc":"735:28:20","nodeType":"YulBlock","src":"735:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"752:1:20","nodeType":"YulLiteral","src":"752:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"755:1:20","nodeType":"YulLiteral","src":"755:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"745:6:20","nodeType":"YulIdentifier","src":"745:6:20"},"nativeSrc":"745:12:20","nodeType":"YulFunctionCall","src":"745:12:20"},"nativeSrc":"745:12:20","nodeType":"YulExpressionStatement","src":"745:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"646:117:20","nodeType":"YulFunctionDefinition","src":"646:117:20"},{"body":{"nativeSrc":"812:79:20","nodeType":"YulBlock","src":"812:79:20","statements":[{"body":{"nativeSrc":"869:16:20","nodeType":"YulBlock","src":"869:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"878:1:20","nodeType":"YulLiteral","src":"878:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"881:1:20","nodeType":"YulLiteral","src":"881:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"871:6:20","nodeType":"YulIdentifier","src":"871:6:20"},"nativeSrc":"871:12:20","nodeType":"YulFunctionCall","src":"871:12:20"},"nativeSrc":"871:12:20","nodeType":"YulExpressionStatement","src":"871:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"835:5:20","nodeType":"YulIdentifier","src":"835:5:20"},{"arguments":[{"name":"value","nativeSrc":"860:5:20","nodeType":"YulIdentifier","src":"860:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"842:17:20","nodeType":"YulIdentifier","src":"842:17:20"},"nativeSrc":"842:24:20","nodeType":"YulFunctionCall","src":"842:24:20"}],"functionName":{"name":"eq","nativeSrc":"832:2:20","nodeType":"YulIdentifier","src":"832:2:20"},"nativeSrc":"832:35:20","nodeType":"YulFunctionCall","src":"832:35:20"}],"functionName":{"name":"iszero","nativeSrc":"825:6:20","nodeType":"YulIdentifier","src":"825:6:20"},"nativeSrc":"825:43:20","nodeType":"YulFunctionCall","src":"825:43:20"},"nativeSrc":"822:63:20","nodeType":"YulIf","src":"822:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"769:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"805:5:20","nodeType":"YulTypedName","src":"805:5:20","type":""}],"src":"769:122:20"},{"body":{"nativeSrc":"949:87:20","nodeType":"YulBlock","src":"949:87:20","statements":[{"nativeSrc":"959:29:20","nodeType":"YulAssignment","src":"959:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"981:6:20","nodeType":"YulIdentifier","src":"981:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"968:12:20","nodeType":"YulIdentifier","src":"968:12:20"},"nativeSrc":"968:20:20","nodeType":"YulFunctionCall","src":"968:20:20"},"variableNames":[{"name":"value","nativeSrc":"959:5:20","nodeType":"YulIdentifier","src":"959:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1024:5:20","nodeType":"YulIdentifier","src":"1024:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"997:26:20","nodeType":"YulIdentifier","src":"997:26:20"},"nativeSrc":"997:33:20","nodeType":"YulFunctionCall","src":"997:33:20"},"nativeSrc":"997:33:20","nodeType":"YulExpressionStatement","src":"997:33:20"}]},"name":"abi_decode_t_uint256","nativeSrc":"897:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"927:6:20","nodeType":"YulTypedName","src":"927:6:20","type":""},{"name":"end","nativeSrc":"935:3:20","nodeType":"YulTypedName","src":"935:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"943:5:20","nodeType":"YulTypedName","src":"943:5:20","type":""}],"src":"897:139:20"},{"body":{"nativeSrc":"1108:263:20","nodeType":"YulBlock","src":"1108:263:20","statements":[{"body":{"nativeSrc":"1154:83:20","nodeType":"YulBlock","src":"1154:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1156:77:20","nodeType":"YulIdentifier","src":"1156:77:20"},"nativeSrc":"1156:79:20","nodeType":"YulFunctionCall","src":"1156:79:20"},"nativeSrc":"1156:79:20","nodeType":"YulExpressionStatement","src":"1156:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1129:7:20","nodeType":"YulIdentifier","src":"1129:7:20"},{"name":"headStart","nativeSrc":"1138:9:20","nodeType":"YulIdentifier","src":"1138:9:20"}],"functionName":{"name":"sub","nativeSrc":"1125:3:20","nodeType":"YulIdentifier","src":"1125:3:20"},"nativeSrc":"1125:23:20","nodeType":"YulFunctionCall","src":"1125:23:20"},{"kind":"number","nativeSrc":"1150:2:20","nodeType":"YulLiteral","src":"1150:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1121:3:20","nodeType":"YulIdentifier","src":"1121:3:20"},"nativeSrc":"1121:32:20","nodeType":"YulFunctionCall","src":"1121:32:20"},"nativeSrc":"1118:119:20","nodeType":"YulIf","src":"1118:119:20"},{"nativeSrc":"1247:117:20","nodeType":"YulBlock","src":"1247:117:20","statements":[{"nativeSrc":"1262:15:20","nodeType":"YulVariableDeclaration","src":"1262:15:20","value":{"kind":"number","nativeSrc":"1276:1:20","nodeType":"YulLiteral","src":"1276:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1266:6:20","nodeType":"YulTypedName","src":"1266:6:20","type":""}]},{"nativeSrc":"1291:63:20","nodeType":"YulAssignment","src":"1291:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1326:9:20","nodeType":"YulIdentifier","src":"1326:9:20"},{"name":"offset","nativeSrc":"1337:6:20","nodeType":"YulIdentifier","src":"1337:6:20"}],"functionName":{"name":"add","nativeSrc":"1322:3:20","nodeType":"YulIdentifier","src":"1322:3:20"},"nativeSrc":"1322:22:20","nodeType":"YulFunctionCall","src":"1322:22:20"},{"name":"dataEnd","nativeSrc":"1346:7:20","nodeType":"YulIdentifier","src":"1346:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1301:20:20","nodeType":"YulIdentifier","src":"1301:20:20"},"nativeSrc":"1301:53:20","nodeType":"YulFunctionCall","src":"1301:53:20"},"variableNames":[{"name":"value0","nativeSrc":"1291:6:20","nodeType":"YulIdentifier","src":"1291:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1042:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1078:9:20","nodeType":"YulTypedName","src":"1078:9:20","type":""},{"name":"dataEnd","nativeSrc":"1089:7:20","nodeType":"YulTypedName","src":"1089:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1101:6:20","nodeType":"YulTypedName","src":"1101:6:20","type":""}],"src":"1042:329:20"},{"body":{"nativeSrc":"1473:73:20","nodeType":"YulBlock","src":"1473:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1490:3:20","nodeType":"YulIdentifier","src":"1490:3:20"},{"name":"length","nativeSrc":"1495:6:20","nodeType":"YulIdentifier","src":"1495:6:20"}],"functionName":{"name":"mstore","nativeSrc":"1483:6:20","nodeType":"YulIdentifier","src":"1483:6:20"},"nativeSrc":"1483:19:20","nodeType":"YulFunctionCall","src":"1483:19:20"},"nativeSrc":"1483:19:20","nodeType":"YulExpressionStatement","src":"1483:19:20"},{"nativeSrc":"1511:29:20","nodeType":"YulAssignment","src":"1511:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"1530:3:20","nodeType":"YulIdentifier","src":"1530:3:20"},{"kind":"number","nativeSrc":"1535:4:20","nodeType":"YulLiteral","src":"1535:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1526:3:20","nodeType":"YulIdentifier","src":"1526:3:20"},"nativeSrc":"1526:14:20","nodeType":"YulFunctionCall","src":"1526:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"1511:11:20","nodeType":"YulIdentifier","src":"1511:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1377:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1445:3:20","nodeType":"YulTypedName","src":"1445:3:20","type":""},{"name":"length","nativeSrc":"1450:6:20","nodeType":"YulTypedName","src":"1450:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1461:11:20","nodeType":"YulTypedName","src":"1461:11:20","type":""}],"src":"1377:169:20"},{"body":{"nativeSrc":"1658:64:20","nodeType":"YulBlock","src":"1658:64:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1680:6:20","nodeType":"YulIdentifier","src":"1680:6:20"},{"kind":"number","nativeSrc":"1688:1:20","nodeType":"YulLiteral","src":"1688:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1676:3:20","nodeType":"YulIdentifier","src":"1676:3:20"},"nativeSrc":"1676:14:20","nodeType":"YulFunctionCall","src":"1676:14:20"},{"hexValue":"4e756d626572206d757374206265203c20313030","kind":"string","nativeSrc":"1692:22:20","nodeType":"YulLiteral","src":"1692:22:20","type":"","value":"Number must be < 100"}],"functionName":{"name":"mstore","nativeSrc":"1669:6:20","nodeType":"YulIdentifier","src":"1669:6:20"},"nativeSrc":"1669:46:20","nodeType":"YulFunctionCall","src":"1669:46:20"},"nativeSrc":"1669:46:20","nodeType":"YulExpressionStatement","src":"1669:46:20"}]},"name":"store_literal_in_memory_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4","nativeSrc":"1552:170:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1650:6:20","nodeType":"YulTypedName","src":"1650:6:20","type":""}],"src":"1552:170:20"},{"body":{"nativeSrc":"1874:220:20","nodeType":"YulBlock","src":"1874:220:20","statements":[{"nativeSrc":"1884:74:20","nodeType":"YulAssignment","src":"1884:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"1950:3:20","nodeType":"YulIdentifier","src":"1950:3:20"},{"kind":"number","nativeSrc":"1955:2:20","nodeType":"YulLiteral","src":"1955:2:20","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1891:58:20","nodeType":"YulIdentifier","src":"1891:58:20"},"nativeSrc":"1891:67:20","nodeType":"YulFunctionCall","src":"1891:67:20"},"variableNames":[{"name":"pos","nativeSrc":"1884:3:20","nodeType":"YulIdentifier","src":"1884:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2056:3:20","nodeType":"YulIdentifier","src":"2056:3:20"}],"functionName":{"name":"store_literal_in_memory_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4","nativeSrc":"1967:88:20","nodeType":"YulIdentifier","src":"1967:88:20"},"nativeSrc":"1967:93:20","nodeType":"YulFunctionCall","src":"1967:93:20"},"nativeSrc":"1967:93:20","nodeType":"YulExpressionStatement","src":"1967:93:20"},{"nativeSrc":"2069:19:20","nodeType":"YulAssignment","src":"2069:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"2080:3:20","nodeType":"YulIdentifier","src":"2080:3:20"},{"kind":"number","nativeSrc":"2085:2:20","nodeType":"YulLiteral","src":"2085:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2076:3:20","nodeType":"YulIdentifier","src":"2076:3:20"},"nativeSrc":"2076:12:20","nodeType":"YulFunctionCall","src":"2076:12:20"},"variableNames":[{"name":"end","nativeSrc":"2069:3:20","nodeType":"YulIdentifier","src":"2069:3:20"}]}]},"name":"abi_encode_t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4_to_t_string_memory_ptr_fromStack","nativeSrc":"1728:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1862:3:20","nodeType":"YulTypedName","src":"1862:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1870:3:20","nodeType":"YulTypedName","src":"1870:3:20","type":""}],"src":"1728:366:20"},{"body":{"nativeSrc":"2271:248:20","nodeType":"YulBlock","src":"2271:248:20","statements":[{"nativeSrc":"2281:26:20","nodeType":"YulAssignment","src":"2281:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2293:9:20","nodeType":"YulIdentifier","src":"2293:9:20"},{"kind":"number","nativeSrc":"2304:2:20","nodeType":"YulLiteral","src":"2304:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2289:3:20","nodeType":"YulIdentifier","src":"2289:3:20"},"nativeSrc":"2289:18:20","nodeType":"YulFunctionCall","src":"2289:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2281:4:20","nodeType":"YulIdentifier","src":"2281:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2328:9:20","nodeType":"YulIdentifier","src":"2328:9:20"},{"kind":"number","nativeSrc":"2339:1:20","nodeType":"YulLiteral","src":"2339:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2324:3:20","nodeType":"YulIdentifier","src":"2324:3:20"},"nativeSrc":"2324:17:20","nodeType":"YulFunctionCall","src":"2324:17:20"},{"arguments":[{"name":"tail","nativeSrc":"2347:4:20","nodeType":"YulIdentifier","src":"2347:4:20"},{"name":"headStart","nativeSrc":"2353:9:20","nodeType":"YulIdentifier","src":"2353:9:20"}],"functionName":{"name":"sub","nativeSrc":"2343:3:20","nodeType":"YulIdentifier","src":"2343:3:20"},"nativeSrc":"2343:20:20","nodeType":"YulFunctionCall","src":"2343:20:20"}],"functionName":{"name":"mstore","nativeSrc":"2317:6:20","nodeType":"YulIdentifier","src":"2317:6:20"},"nativeSrc":"2317:47:20","nodeType":"YulFunctionCall","src":"2317:47:20"},"nativeSrc":"2317:47:20","nodeType":"YulExpressionStatement","src":"2317:47:20"},{"nativeSrc":"2373:139:20","nodeType":"YulAssignment","src":"2373:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"2507:4:20","nodeType":"YulIdentifier","src":"2507:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4_to_t_string_memory_ptr_fromStack","nativeSrc":"2381:124:20","nodeType":"YulIdentifier","src":"2381:124:20"},"nativeSrc":"2381:131:20","nodeType":"YulFunctionCall","src":"2381:131:20"},"variableNames":[{"name":"tail","nativeSrc":"2373:4:20","nodeType":"YulIdentifier","src":"2373:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2100:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2251:9:20","nodeType":"YulTypedName","src":"2251:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2266:4:20","nodeType":"YulTypedName","src":"2266:4:20","type":""}],"src":"2100:419:20"},{"body":{"nativeSrc":"2570:81:20","nodeType":"YulBlock","src":"2570:81:20","statements":[{"nativeSrc":"2580:65:20","nodeType":"YulAssignment","src":"2580:65:20","value":{"arguments":[{"name":"value","nativeSrc":"2595:5:20","nodeType":"YulIdentifier","src":"2595:5:20"},{"kind":"number","nativeSrc":"2602:42:20","nodeType":"YulLiteral","src":"2602:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2591:3:20","nodeType":"YulIdentifier","src":"2591:3:20"},"nativeSrc":"2591:54:20","nodeType":"YulFunctionCall","src":"2591:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"2580:7:20","nodeType":"YulIdentifier","src":"2580:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2525:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2552:5:20","nodeType":"YulTypedName","src":"2552:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2562:7:20","nodeType":"YulTypedName","src":"2562:7:20","type":""}],"src":"2525:126:20"},{"body":{"nativeSrc":"2702:51:20","nodeType":"YulBlock","src":"2702:51:20","statements":[{"nativeSrc":"2712:35:20","nodeType":"YulAssignment","src":"2712:35:20","value":{"arguments":[{"name":"value","nativeSrc":"2741:5:20","nodeType":"YulIdentifier","src":"2741:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2723:17:20","nodeType":"YulIdentifier","src":"2723:17:20"},"nativeSrc":"2723:24:20","nodeType":"YulFunctionCall","src":"2723:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"2712:7:20","nodeType":"YulIdentifier","src":"2712:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"2657:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2684:5:20","nodeType":"YulTypedName","src":"2684:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2694:7:20","nodeType":"YulTypedName","src":"2694:7:20","type":""}],"src":"2657:96:20"},{"body":{"nativeSrc":"2824:53:20","nodeType":"YulBlock","src":"2824:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2841:3:20","nodeType":"YulIdentifier","src":"2841:3:20"},{"arguments":[{"name":"value","nativeSrc":"2864:5:20","nodeType":"YulIdentifier","src":"2864:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2846:17:20","nodeType":"YulIdentifier","src":"2846:17:20"},"nativeSrc":"2846:24:20","nodeType":"YulFunctionCall","src":"2846:24:20"}],"functionName":{"name":"mstore","nativeSrc":"2834:6:20","nodeType":"YulIdentifier","src":"2834:6:20"},"nativeSrc":"2834:37:20","nodeType":"YulFunctionCall","src":"2834:37:20"},"nativeSrc":"2834:37:20","nodeType":"YulExpressionStatement","src":"2834:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2759:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2812:5:20","nodeType":"YulTypedName","src":"2812:5:20","type":""},{"name":"pos","nativeSrc":"2819:3:20","nodeType":"YulTypedName","src":"2819:3:20","type":""}],"src":"2759:118:20"},{"body":{"nativeSrc":"2981:124:20","nodeType":"YulBlock","src":"2981:124:20","statements":[{"nativeSrc":"2991:26:20","nodeType":"YulAssignment","src":"2991:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3003:9:20","nodeType":"YulIdentifier","src":"3003:9:20"},{"kind":"number","nativeSrc":"3014:2:20","nodeType":"YulLiteral","src":"3014:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2999:3:20","nodeType":"YulIdentifier","src":"2999:3:20"},"nativeSrc":"2999:18:20","nodeType":"YulFunctionCall","src":"2999:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2991:4:20","nodeType":"YulIdentifier","src":"2991:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3071:6:20","nodeType":"YulIdentifier","src":"3071:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"3084:9:20","nodeType":"YulIdentifier","src":"3084:9:20"},{"kind":"number","nativeSrc":"3095:1:20","nodeType":"YulLiteral","src":"3095:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3080:3:20","nodeType":"YulIdentifier","src":"3080:3:20"},"nativeSrc":"3080:17:20","nodeType":"YulFunctionCall","src":"3080:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3027:43:20","nodeType":"YulIdentifier","src":"3027:43:20"},"nativeSrc":"3027:71:20","nodeType":"YulFunctionCall","src":"3027:71:20"},"nativeSrc":"3027:71:20","nodeType":"YulExpressionStatement","src":"3027:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2883:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2953:9:20","nodeType":"YulTypedName","src":"2953:9:20","type":""},{"name":"value0","nativeSrc":"2965:6:20","nodeType":"YulTypedName","src":"2965:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2976:4:20","nodeType":"YulTypedName","src":"2976:4:20","type":""}],"src":"2883:222:20"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Number must be < 100\")\n\n    }\n\n    function abi_encode_t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_437844c3c5a64ec8827d8b8fea80a38aaa8e0ce32fe12da3690a9db71b73afd4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561000f575f80fd5b5060043610610034575f3560e01c80632e64cec1146100385780636057361d14610056575b5f80fd5b610040610072565b60405161004d9190610115565b60405180910390f35b610070600480360381019061006b919061015c565b61007a565b005b5f8054905090565b606481106100bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b4906101e1565b60405180910390fd5b7ff968ef841feb103aafe6a7faf747366409c985dbe99998d2ab7ecd867096542c336040516100ec919061023e565b60405180910390a1805f8190555050565b5f819050919050565b61010f816100fd565b82525050565b5f6020820190506101285f830184610106565b92915050565b5f80fd5b61013b816100fd565b8114610145575f80fd5b50565b5f8135905061015681610132565b92915050565b5f602082840312156101715761017061012e565b5b5f61017e84828501610148565b91505092915050565b5f82825260208201905092915050565b7f4e756d626572206d757374206265203c203130300000000000000000000000005f82015250565b5f6101cb601483610187565b91506101d682610197565b602082019050919050565b5f6020820190508181035f8301526101f8816101bf565b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610228826101ff565b9050919050565b6102388161021e565b82525050565b5f6020820190506102515f83018461022f565b9291505056fea2646970667358221220055e863eb1bd3fbed27f36c077ea6cea2054b5d497d752553aeae62f8fd44fa264736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x6057361D EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 LT PUSH2 0xBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4 SWAP1 PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF968EF841FEB103AAFE6A7FAF747366409C985DBE99998D2AB7ECD867096542C CALLER PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F DUP2 PUSH2 0xFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x128 PUSH0 DUP4 ADD DUP5 PUSH2 0x106 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13B DUP2 PUSH2 0xFD JUMP JUMPDEST DUP2 EQ PUSH2 0x145 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156 DUP2 PUSH2 0x132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x12E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E DUP5 DUP3 DUP6 ADD PUSH2 0x148 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E756D626572206D757374206265203C20313030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB PUSH1 0x14 DUP4 PUSH2 0x187 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6 DUP3 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8 DUP2 PUSH2 0x1BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x228 DUP3 PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x251 PUSH0 DUP4 ADD DUP5 PUSH2 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0x5E DUP7 RETURNDATACOPY 0xB1 0xBD EXTCODEHASH 0xBE 0xD2 PUSH32 0x36C077EA6CEA2054B5D497D752553AEAE62F8FD44FA264736F6C634300081500 CALLER ","sourceMap":"199:568:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;394:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;686:79;727:7;752:6;;745:13;;686:79;:::o;394:211::-;501:3;495;:9;487:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;554:22;565:10;554:22;;;;;;:::i;:::-;;;;;;;;595:3;586:6;:12;;;;394:211;:::o;7:77:20:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:169::-;1461:11;1495:6;1490:3;1483:19;1535:4;1530:3;1526:14;1511:29;;1377:169;;;;:::o;1552:170::-;1692:22;1688:1;1680:6;1676:14;1669:46;1552:170;:::o;1728:366::-;1870:3;1891:67;1955:2;1950:3;1891:67;:::i;:::-;1884:74;;1967:93;2056:3;1967:93;:::i;:::-;2085:2;2080:3;2076:12;2069:19;;1728:366;;;:::o;2100:419::-;2266:4;2304:2;2293:9;2289:18;2281:26;;2353:9;2347:4;2343:20;2339:1;2328:9;2324:17;2317:47;2381:131;2507:4;2381:131;:::i;:::-;2373:139;;2100:419;;;:::o;2525:126::-;2562:7;2602:42;2595:5;2591:54;2580:65;;2525:126;;;:::o;2657:96::-;2694:7;2723:24;2741:5;2723:24;:::i;:::-;2712:35;;2657:96;;;:::o;2759:118::-;2846:24;2864:5;2846:24;:::i;:::-;2841:3;2834:37;2759:118;;:::o;2883:222::-;2976:4;3014:2;3003:9;2999:18;2991:26;;3027:71;3095:1;3084:9;3080:17;3071:6;3027:71;:::i;:::-;2883:222;;;;:::o"},"methodIdentifiers":{"retrieve()":"2e64cec1","store(uint256)":"6057361d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"StoreEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"Store & retrieve value in a variable\",\"kind\":\"dev\",\"methods\":{\"retrieve()\":{\"details\":\"Return value \",\"returns\":{\"_0\":\"value of 'number'\"}},\"store(uint256)\":{\"details\":\"Store value in variable\",\"params\":{\"num\":\"value to store\"}}},\"title\":\"Storage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Storage.sol\":\"Storage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Storage.sol\":{\"keccak256\":\"0x3847505eaac333398997b239bf47381247b2c11d2457c628c324b149bbc2f6d3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6099b305b2b4647998e4e82eb13c1ccb9165ab48337acdfd4c0a18247e811fd6\",\"dweb:/ipfs/QmXKuecFKKFJQaoBnXQf52nKyu37doUyCMvZT6nvnszhQT\"]}},\"version\":1}"}},"contracts/VeGroww.sol":{"VeGroww":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2087":{"entryPoint":null,"id":2087,"parameterSlots":2,"returnSlots":0},"@_213":{"entryPoint":null,"id":213,"parameterSlots":2,"returnSlots":0},"@_3767":{"entryPoint":null,"id":3767,"parameterSlots":0,"returnSlots":0},"@_803":{"entryPoint":null,"id":803,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_2134":{"entryPoint":603,"id":2134,"parameterSlots":0,"returnSlots":1},"@_mint_516":{"entryPoint":703,"id":516,"parameterSlots":2,"returnSlots":0},"@_update_483":{"entryPoint":956,"id":483,"parameterSlots":3,"returnSlots":0},"@decimals_240":{"entryPoint":695,"id":240,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1364":{"entryPoint":947,"id":1364,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1218":{"entryPoint":518,"id":1218,"parameterSlots":2,"returnSlots":1},"@toShortString_1120":{"entryPoint":841,"id":1120,"parameterSlots":1,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2984,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2900,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2917,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3092,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3507,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":3001,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3566,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":3301,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1656,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3291,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1504,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3119,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3449,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2401,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":2737,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2491,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2817,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1965,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2965,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2891,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2934,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1786,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":2725,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1927,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":3338,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1804,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2116,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3135,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1674,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1604,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2087,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1795,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2057,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2344,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1559,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1514,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1843,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":3316,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":3177,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1689,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":2389,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2045,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1899,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1701,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1852,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1895,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:12936:20","nodeType":"YulBlock","src":"0:12936:20","statements":[{"body":{"nativeSrc":"66:40:20","nodeType":"YulBlock","src":"66:40:20","statements":[{"nativeSrc":"77:22:20","nodeType":"YulAssignment","src":"77:22:20","value":{"arguments":[{"name":"value","nativeSrc":"93:5:20","nodeType":"YulIdentifier","src":"93:5:20"}],"functionName":{"name":"mload","nativeSrc":"87:5:20","nodeType":"YulIdentifier","src":"87:5:20"},"nativeSrc":"87:12:20","nodeType":"YulFunctionCall","src":"87:12:20"},"variableNames":[{"name":"length","nativeSrc":"77:6:20","nodeType":"YulIdentifier","src":"77:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:20","nodeType":"YulTypedName","src":"49:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:20","nodeType":"YulTypedName","src":"59:6:20","type":""}],"src":"7:99:20"},{"body":{"nativeSrc":"140:152:20","nodeType":"YulBlock","src":"140:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:20","nodeType":"YulLiteral","src":"157:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:20","nodeType":"YulLiteral","src":"160:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:20","nodeType":"YulIdentifier","src":"150:6:20"},"nativeSrc":"150:88:20","nodeType":"YulFunctionCall","src":"150:88:20"},"nativeSrc":"150:88:20","nodeType":"YulExpressionStatement","src":"150:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:20","nodeType":"YulLiteral","src":"254:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:20","nodeType":"YulLiteral","src":"257:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:20","nodeType":"YulIdentifier","src":"247:6:20"},"nativeSrc":"247:15:20","nodeType":"YulFunctionCall","src":"247:15:20"},"nativeSrc":"247:15:20","nodeType":"YulExpressionStatement","src":"247:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:20","nodeType":"YulLiteral","src":"278:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:20","nodeType":"YulLiteral","src":"281:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:20","nodeType":"YulIdentifier","src":"271:6:20"},"nativeSrc":"271:15:20","nodeType":"YulFunctionCall","src":"271:15:20"},"nativeSrc":"271:15:20","nodeType":"YulExpressionStatement","src":"271:15:20"}]},"name":"panic_error_0x41","nativeSrc":"112:180:20","nodeType":"YulFunctionDefinition","src":"112:180:20"},{"body":{"nativeSrc":"326:152:20","nodeType":"YulBlock","src":"326:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:20","nodeType":"YulLiteral","src":"343:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:20","nodeType":"YulLiteral","src":"346:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:20","nodeType":"YulIdentifier","src":"336:6:20"},"nativeSrc":"336:88:20","nodeType":"YulFunctionCall","src":"336:88:20"},"nativeSrc":"336:88:20","nodeType":"YulExpressionStatement","src":"336:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:20","nodeType":"YulLiteral","src":"440:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:20","nodeType":"YulLiteral","src":"443:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:20","nodeType":"YulIdentifier","src":"433:6:20"},"nativeSrc":"433:15:20","nodeType":"YulFunctionCall","src":"433:15:20"},"nativeSrc":"433:15:20","nodeType":"YulExpressionStatement","src":"433:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:20","nodeType":"YulLiteral","src":"464:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:20","nodeType":"YulLiteral","src":"467:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:20","nodeType":"YulIdentifier","src":"457:6:20"},"nativeSrc":"457:15:20","nodeType":"YulFunctionCall","src":"457:15:20"},"nativeSrc":"457:15:20","nodeType":"YulExpressionStatement","src":"457:15:20"}]},"name":"panic_error_0x22","nativeSrc":"298:180:20","nodeType":"YulFunctionDefinition","src":"298:180:20"},{"body":{"nativeSrc":"535:269:20","nodeType":"YulBlock","src":"535:269:20","statements":[{"nativeSrc":"545:22:20","nodeType":"YulAssignment","src":"545:22:20","value":{"arguments":[{"name":"data","nativeSrc":"559:4:20","nodeType":"YulIdentifier","src":"559:4:20"},{"kind":"number","nativeSrc":"565:1:20","nodeType":"YulLiteral","src":"565:1:20","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:20","nodeType":"YulIdentifier","src":"555:3:20"},"nativeSrc":"555:12:20","nodeType":"YulFunctionCall","src":"555:12:20"},"variableNames":[{"name":"length","nativeSrc":"545:6:20","nodeType":"YulIdentifier","src":"545:6:20"}]},{"nativeSrc":"576:38:20","nodeType":"YulVariableDeclaration","src":"576:38:20","value":{"arguments":[{"name":"data","nativeSrc":"606:4:20","nodeType":"YulIdentifier","src":"606:4:20"},{"kind":"number","nativeSrc":"612:1:20","nodeType":"YulLiteral","src":"612:1:20","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:20","nodeType":"YulIdentifier","src":"602:3:20"},"nativeSrc":"602:12:20","nodeType":"YulFunctionCall","src":"602:12:20"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:20","nodeType":"YulTypedName","src":"580:18:20","type":""}]},{"body":{"nativeSrc":"653:51:20","nodeType":"YulBlock","src":"653:51:20","statements":[{"nativeSrc":"667:27:20","nodeType":"YulAssignment","src":"667:27:20","value":{"arguments":[{"name":"length","nativeSrc":"681:6:20","nodeType":"YulIdentifier","src":"681:6:20"},{"kind":"number","nativeSrc":"689:4:20","nodeType":"YulLiteral","src":"689:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:20","nodeType":"YulIdentifier","src":"677:3:20"},"nativeSrc":"677:17:20","nodeType":"YulFunctionCall","src":"677:17:20"},"variableNames":[{"name":"length","nativeSrc":"667:6:20","nodeType":"YulIdentifier","src":"667:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:20","nodeType":"YulIdentifier","src":"633:18:20"}],"functionName":{"name":"iszero","nativeSrc":"626:6:20","nodeType":"YulIdentifier","src":"626:6:20"},"nativeSrc":"626:26:20","nodeType":"YulFunctionCall","src":"626:26:20"},"nativeSrc":"623:81:20","nodeType":"YulIf","src":"623:81:20"},{"body":{"nativeSrc":"756:42:20","nodeType":"YulBlock","src":"756:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:20","nodeType":"YulIdentifier","src":"770:16:20"},"nativeSrc":"770:18:20","nodeType":"YulFunctionCall","src":"770:18:20"},"nativeSrc":"770:18:20","nodeType":"YulExpressionStatement","src":"770:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:20","nodeType":"YulIdentifier","src":"720:18:20"},{"arguments":[{"name":"length","nativeSrc":"743:6:20","nodeType":"YulIdentifier","src":"743:6:20"},{"kind":"number","nativeSrc":"751:2:20","nodeType":"YulLiteral","src":"751:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:20","nodeType":"YulIdentifier","src":"740:2:20"},"nativeSrc":"740:14:20","nodeType":"YulFunctionCall","src":"740:14:20"}],"functionName":{"name":"eq","nativeSrc":"717:2:20","nodeType":"YulIdentifier","src":"717:2:20"},"nativeSrc":"717:38:20","nodeType":"YulFunctionCall","src":"717:38:20"},"nativeSrc":"714:84:20","nodeType":"YulIf","src":"714:84:20"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:20","nodeType":"YulTypedName","src":"519:4:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:20","nodeType":"YulTypedName","src":"528:6:20","type":""}],"src":"484:320:20"},{"body":{"nativeSrc":"864:87:20","nodeType":"YulBlock","src":"864:87:20","statements":[{"nativeSrc":"874:11:20","nodeType":"YulAssignment","src":"874:11:20","value":{"name":"ptr","nativeSrc":"882:3:20","nodeType":"YulIdentifier","src":"882:3:20"},"variableNames":[{"name":"data","nativeSrc":"874:4:20","nodeType":"YulIdentifier","src":"874:4:20"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:20","nodeType":"YulLiteral","src":"902:1:20","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:20","nodeType":"YulIdentifier","src":"905:3:20"}],"functionName":{"name":"mstore","nativeSrc":"895:6:20","nodeType":"YulIdentifier","src":"895:6:20"},"nativeSrc":"895:14:20","nodeType":"YulFunctionCall","src":"895:14:20"},"nativeSrc":"895:14:20","nodeType":"YulExpressionStatement","src":"895:14:20"},{"nativeSrc":"918:26:20","nodeType":"YulAssignment","src":"918:26:20","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:20","nodeType":"YulLiteral","src":"936:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:20","nodeType":"YulLiteral","src":"939:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:20","nodeType":"YulIdentifier","src":"926:9:20"},"nativeSrc":"926:18:20","nodeType":"YulFunctionCall","src":"926:18:20"},"variableNames":[{"name":"data","nativeSrc":"918:4:20","nodeType":"YulIdentifier","src":"918:4:20"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:20","nodeType":"YulTypedName","src":"851:3:20","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:20","nodeType":"YulTypedName","src":"859:4:20","type":""}],"src":"810:141:20"},{"body":{"nativeSrc":"1001:49:20","nodeType":"YulBlock","src":"1001:49:20","statements":[{"nativeSrc":"1011:33:20","nodeType":"YulAssignment","src":"1011:33:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:20","nodeType":"YulIdentifier","src":"1029:5:20"},{"kind":"number","nativeSrc":"1036:2:20","nodeType":"YulLiteral","src":"1036:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:20","nodeType":"YulIdentifier","src":"1025:3:20"},"nativeSrc":"1025:14:20","nodeType":"YulFunctionCall","src":"1025:14:20"},{"kind":"number","nativeSrc":"1041:2:20","nodeType":"YulLiteral","src":"1041:2:20","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:20","nodeType":"YulIdentifier","src":"1021:3:20"},"nativeSrc":"1021:23:20","nodeType":"YulFunctionCall","src":"1021:23:20"},"variableNames":[{"name":"result","nativeSrc":"1011:6:20","nodeType":"YulIdentifier","src":"1011:6:20"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:20","nodeType":"YulTypedName","src":"984:5:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:20","nodeType":"YulTypedName","src":"994:6:20","type":""}],"src":"957:93:20"},{"body":{"nativeSrc":"1109:54:20","nodeType":"YulBlock","src":"1109:54:20","statements":[{"nativeSrc":"1119:37:20","nodeType":"YulAssignment","src":"1119:37:20","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:20","nodeType":"YulIdentifier","src":"1144:4:20"},{"name":"value","nativeSrc":"1150:5:20","nodeType":"YulIdentifier","src":"1150:5:20"}],"functionName":{"name":"shl","nativeSrc":"1140:3:20","nodeType":"YulIdentifier","src":"1140:3:20"},"nativeSrc":"1140:16:20","nodeType":"YulFunctionCall","src":"1140:16:20"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:20","nodeType":"YulIdentifier","src":"1119:8:20"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:20","nodeType":"YulTypedName","src":"1084:4:20","type":""},{"name":"value","nativeSrc":"1090:5:20","nodeType":"YulTypedName","src":"1090:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:20","nodeType":"YulTypedName","src":"1100:8:20","type":""}],"src":"1056:107:20"},{"body":{"nativeSrc":"1245:317:20","nodeType":"YulBlock","src":"1245:317:20","statements":[{"nativeSrc":"1255:35:20","nodeType":"YulVariableDeclaration","src":"1255:35:20","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:20","nodeType":"YulIdentifier","src":"1276:10:20"},{"kind":"number","nativeSrc":"1288:1:20","nodeType":"YulLiteral","src":"1288:1:20","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:20","nodeType":"YulIdentifier","src":"1272:3:20"},"nativeSrc":"1272:18:20","nodeType":"YulFunctionCall","src":"1272:18:20"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:20","nodeType":"YulTypedName","src":"1259:9:20","type":""}]},{"nativeSrc":"1299:109:20","nodeType":"YulVariableDeclaration","src":"1299:109:20","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:20","nodeType":"YulIdentifier","src":"1330:9:20"},{"kind":"number","nativeSrc":"1341:66:20","nodeType":"YulLiteral","src":"1341:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:20","nodeType":"YulIdentifier","src":"1311:18:20"},"nativeSrc":"1311:97:20","nodeType":"YulFunctionCall","src":"1311:97:20"},"variables":[{"name":"mask","nativeSrc":"1303:4:20","nodeType":"YulTypedName","src":"1303:4:20","type":""}]},{"nativeSrc":"1417:51:20","nodeType":"YulAssignment","src":"1417:51:20","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:20","nodeType":"YulIdentifier","src":"1448:9:20"},{"name":"toInsert","nativeSrc":"1459:8:20","nodeType":"YulIdentifier","src":"1459:8:20"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:20","nodeType":"YulIdentifier","src":"1429:18:20"},"nativeSrc":"1429:39:20","nodeType":"YulFunctionCall","src":"1429:39:20"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:20","nodeType":"YulIdentifier","src":"1417:8:20"}]},{"nativeSrc":"1477:30:20","nodeType":"YulAssignment","src":"1477:30:20","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:20","nodeType":"YulIdentifier","src":"1490:5:20"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:20","nodeType":"YulIdentifier","src":"1501:4:20"}],"functionName":{"name":"not","nativeSrc":"1497:3:20","nodeType":"YulIdentifier","src":"1497:3:20"},"nativeSrc":"1497:9:20","nodeType":"YulFunctionCall","src":"1497:9:20"}],"functionName":{"name":"and","nativeSrc":"1486:3:20","nodeType":"YulIdentifier","src":"1486:3:20"},"nativeSrc":"1486:21:20","nodeType":"YulFunctionCall","src":"1486:21:20"},"variableNames":[{"name":"value","nativeSrc":"1477:5:20","nodeType":"YulIdentifier","src":"1477:5:20"}]},{"nativeSrc":"1516:40:20","nodeType":"YulAssignment","src":"1516:40:20","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:20","nodeType":"YulIdentifier","src":"1529:5:20"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:20","nodeType":"YulIdentifier","src":"1540:8:20"},{"name":"mask","nativeSrc":"1550:4:20","nodeType":"YulIdentifier","src":"1550:4:20"}],"functionName":{"name":"and","nativeSrc":"1536:3:20","nodeType":"YulIdentifier","src":"1536:3:20"},"nativeSrc":"1536:19:20","nodeType":"YulFunctionCall","src":"1536:19:20"}],"functionName":{"name":"or","nativeSrc":"1526:2:20","nodeType":"YulIdentifier","src":"1526:2:20"},"nativeSrc":"1526:30:20","nodeType":"YulFunctionCall","src":"1526:30:20"},"variableNames":[{"name":"result","nativeSrc":"1516:6:20","nodeType":"YulIdentifier","src":"1516:6:20"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:20","nodeType":"YulTypedName","src":"1206:5:20","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:20","nodeType":"YulTypedName","src":"1213:10:20","type":""},{"name":"toInsert","nativeSrc":"1225:8:20","nodeType":"YulTypedName","src":"1225:8:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:20","nodeType":"YulTypedName","src":"1238:6:20","type":""}],"src":"1169:393:20"},{"body":{"nativeSrc":"1613:32:20","nodeType":"YulBlock","src":"1613:32:20","statements":[{"nativeSrc":"1623:16:20","nodeType":"YulAssignment","src":"1623:16:20","value":{"name":"value","nativeSrc":"1634:5:20","nodeType":"YulIdentifier","src":"1634:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:20","nodeType":"YulIdentifier","src":"1623:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:20","nodeType":"YulTypedName","src":"1595:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:20","nodeType":"YulTypedName","src":"1605:7:20","type":""}],"src":"1568:77:20"},{"body":{"nativeSrc":"1683:28:20","nodeType":"YulBlock","src":"1683:28:20","statements":[{"nativeSrc":"1693:12:20","nodeType":"YulAssignment","src":"1693:12:20","value":{"name":"value","nativeSrc":"1700:5:20","nodeType":"YulIdentifier","src":"1700:5:20"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:20","nodeType":"YulIdentifier","src":"1693:3:20"}]}]},"name":"identity","nativeSrc":"1651:60:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:20","nodeType":"YulTypedName","src":"1669:5:20","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:20","nodeType":"YulTypedName","src":"1679:3:20","type":""}],"src":"1651:60:20"},{"body":{"nativeSrc":"1777:82:20","nodeType":"YulBlock","src":"1777:82:20","statements":[{"nativeSrc":"1787:66:20","nodeType":"YulAssignment","src":"1787:66:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:20","nodeType":"YulIdentifier","src":"1845:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:20","nodeType":"YulIdentifier","src":"1827:17:20"},"nativeSrc":"1827:24:20","nodeType":"YulFunctionCall","src":"1827:24:20"}],"functionName":{"name":"identity","nativeSrc":"1818:8:20","nodeType":"YulIdentifier","src":"1818:8:20"},"nativeSrc":"1818:34:20","nodeType":"YulFunctionCall","src":"1818:34:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:20","nodeType":"YulIdentifier","src":"1800:17:20"},"nativeSrc":"1800:53:20","nodeType":"YulFunctionCall","src":"1800:53:20"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:20","nodeType":"YulIdentifier","src":"1787:9:20"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:20","nodeType":"YulTypedName","src":"1757:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:20","nodeType":"YulTypedName","src":"1767:9:20","type":""}],"src":"1717:142:20"},{"body":{"nativeSrc":"1912:28:20","nodeType":"YulBlock","src":"1912:28:20","statements":[{"nativeSrc":"1922:12:20","nodeType":"YulAssignment","src":"1922:12:20","value":{"name":"value","nativeSrc":"1929:5:20","nodeType":"YulIdentifier","src":"1929:5:20"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:20","nodeType":"YulIdentifier","src":"1922:3:20"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:20","nodeType":"YulTypedName","src":"1898:5:20","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:20","nodeType":"YulTypedName","src":"1908:3:20","type":""}],"src":"1865:75:20"},{"body":{"nativeSrc":"2022:193:20","nodeType":"YulBlock","src":"2022:193:20","statements":[{"nativeSrc":"2032:63:20","nodeType":"YulVariableDeclaration","src":"2032:63:20","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:20","nodeType":"YulIdentifier","src":"2087:7:20"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:20","nodeType":"YulIdentifier","src":"2056:30:20"},"nativeSrc":"2056:39:20","nodeType":"YulFunctionCall","src":"2056:39:20"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:20","nodeType":"YulTypedName","src":"2036:16:20","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:20","nodeType":"YulIdentifier","src":"2111:4:20"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:20","nodeType":"YulIdentifier","src":"2151:4:20"}],"functionName":{"name":"sload","nativeSrc":"2145:5:20","nodeType":"YulIdentifier","src":"2145:5:20"},"nativeSrc":"2145:11:20","nodeType":"YulFunctionCall","src":"2145:11:20"},{"name":"offset","nativeSrc":"2158:6:20","nodeType":"YulIdentifier","src":"2158:6:20"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:20","nodeType":"YulIdentifier","src":"2190:16:20"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:20","nodeType":"YulIdentifier","src":"2166:23:20"},"nativeSrc":"2166:41:20","nodeType":"YulFunctionCall","src":"2166:41:20"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:20","nodeType":"YulIdentifier","src":"2117:27:20"},"nativeSrc":"2117:91:20","nodeType":"YulFunctionCall","src":"2117:91:20"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:20","nodeType":"YulIdentifier","src":"2104:6:20"},"nativeSrc":"2104:105:20","nodeType":"YulFunctionCall","src":"2104:105:20"},"nativeSrc":"2104:105:20","nodeType":"YulExpressionStatement","src":"2104:105:20"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:20","nodeType":"YulTypedName","src":"1999:4:20","type":""},{"name":"offset","nativeSrc":"2005:6:20","nodeType":"YulTypedName","src":"2005:6:20","type":""},{"name":"value_0","nativeSrc":"2013:7:20","nodeType":"YulTypedName","src":"2013:7:20","type":""}],"src":"1946:269:20"},{"body":{"nativeSrc":"2270:24:20","nodeType":"YulBlock","src":"2270:24:20","statements":[{"nativeSrc":"2280:8:20","nodeType":"YulAssignment","src":"2280:8:20","value":{"kind":"number","nativeSrc":"2287:1:20","nodeType":"YulLiteral","src":"2287:1:20","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:20","nodeType":"YulIdentifier","src":"2280:3:20"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:20","nodeType":"YulTypedName","src":"2266:3:20","type":""}],"src":"2221:73:20"},{"body":{"nativeSrc":"2353:136:20","nodeType":"YulBlock","src":"2353:136:20","statements":[{"nativeSrc":"2363:46:20","nodeType":"YulVariableDeclaration","src":"2363:46:20","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:20","nodeType":"YulIdentifier","src":"2377:30:20"},"nativeSrc":"2377:32:20","nodeType":"YulFunctionCall","src":"2377:32:20"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:20","nodeType":"YulTypedName","src":"2367:6:20","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:20","nodeType":"YulIdentifier","src":"2462:4:20"},{"name":"offset","nativeSrc":"2468:6:20","nodeType":"YulIdentifier","src":"2468:6:20"},{"name":"zero_0","nativeSrc":"2476:6:20","nodeType":"YulIdentifier","src":"2476:6:20"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:20","nodeType":"YulIdentifier","src":"2418:43:20"},"nativeSrc":"2418:65:20","nodeType":"YulFunctionCall","src":"2418:65:20"},"nativeSrc":"2418:65:20","nodeType":"YulExpressionStatement","src":"2418:65:20"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:20","nodeType":"YulTypedName","src":"2339:4:20","type":""},{"name":"offset","nativeSrc":"2345:6:20","nodeType":"YulTypedName","src":"2345:6:20","type":""}],"src":"2300:189:20"},{"body":{"nativeSrc":"2545:136:20","nodeType":"YulBlock","src":"2545:136:20","statements":[{"body":{"nativeSrc":"2612:63:20","nodeType":"YulBlock","src":"2612:63:20","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:20","nodeType":"YulIdentifier","src":"2656:5:20"},{"kind":"number","nativeSrc":"2663:1:20","nodeType":"YulLiteral","src":"2663:1:20","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:20","nodeType":"YulIdentifier","src":"2626:29:20"},"nativeSrc":"2626:39:20","nodeType":"YulFunctionCall","src":"2626:39:20"},"nativeSrc":"2626:39:20","nodeType":"YulExpressionStatement","src":"2626:39:20"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:20","nodeType":"YulIdentifier","src":"2565:5:20"},{"name":"end","nativeSrc":"2572:3:20","nodeType":"YulIdentifier","src":"2572:3:20"}],"functionName":{"name":"lt","nativeSrc":"2562:2:20","nodeType":"YulIdentifier","src":"2562:2:20"},"nativeSrc":"2562:14:20","nodeType":"YulFunctionCall","src":"2562:14:20"},"nativeSrc":"2555:120:20","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:20","nodeType":"YulBlock","src":"2577:26:20","statements":[{"nativeSrc":"2579:22:20","nodeType":"YulAssignment","src":"2579:22:20","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:20","nodeType":"YulIdentifier","src":"2592:5:20"},{"kind":"number","nativeSrc":"2599:1:20","nodeType":"YulLiteral","src":"2599:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:20","nodeType":"YulIdentifier","src":"2588:3:20"},"nativeSrc":"2588:13:20","nodeType":"YulFunctionCall","src":"2588:13:20"},"variableNames":[{"name":"start","nativeSrc":"2579:5:20","nodeType":"YulIdentifier","src":"2579:5:20"}]}]},"pre":{"nativeSrc":"2559:2:20","nodeType":"YulBlock","src":"2559:2:20","statements":[]},"src":"2555:120:20"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:20","nodeType":"YulTypedName","src":"2533:5:20","type":""},{"name":"end","nativeSrc":"2540:3:20","nodeType":"YulTypedName","src":"2540:3:20","type":""}],"src":"2495:186:20"},{"body":{"nativeSrc":"2766:464:20","nodeType":"YulBlock","src":"2766:464:20","statements":[{"body":{"nativeSrc":"2792:431:20","nodeType":"YulBlock","src":"2792:431:20","statements":[{"nativeSrc":"2806:54:20","nodeType":"YulVariableDeclaration","src":"2806:54:20","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:20","nodeType":"YulIdentifier","src":"2854:5:20"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:20","nodeType":"YulIdentifier","src":"2822:31:20"},"nativeSrc":"2822:38:20","nodeType":"YulFunctionCall","src":"2822:38:20"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:20","nodeType":"YulTypedName","src":"2810:8:20","type":""}]},{"nativeSrc":"2873:63:20","nodeType":"YulVariableDeclaration","src":"2873:63:20","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:20","nodeType":"YulIdentifier","src":"2896:8:20"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:20","nodeType":"YulIdentifier","src":"2924:10:20"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:20","nodeType":"YulIdentifier","src":"2906:17:20"},"nativeSrc":"2906:29:20","nodeType":"YulFunctionCall","src":"2906:29:20"}],"functionName":{"name":"add","nativeSrc":"2892:3:20","nodeType":"YulIdentifier","src":"2892:3:20"},"nativeSrc":"2892:44:20","nodeType":"YulFunctionCall","src":"2892:44:20"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:20","nodeType":"YulTypedName","src":"2877:11:20","type":""}]},{"body":{"nativeSrc":"3093:27:20","nodeType":"YulBlock","src":"3093:27:20","statements":[{"nativeSrc":"3095:23:20","nodeType":"YulAssignment","src":"3095:23:20","value":{"name":"dataArea","nativeSrc":"3110:8:20","nodeType":"YulIdentifier","src":"3110:8:20"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:20","nodeType":"YulIdentifier","src":"3095:11:20"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:20","nodeType":"YulIdentifier","src":"3077:10:20"},{"kind":"number","nativeSrc":"3089:2:20","nodeType":"YulLiteral","src":"3089:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:20","nodeType":"YulIdentifier","src":"3074:2:20"},"nativeSrc":"3074:18:20","nodeType":"YulFunctionCall","src":"3074:18:20"},"nativeSrc":"3071:49:20","nodeType":"YulIf","src":"3071:49:20"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:20","nodeType":"YulIdentifier","src":"3162:11:20"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:20","nodeType":"YulIdentifier","src":"3179:8:20"},{"arguments":[{"name":"len","nativeSrc":"3207:3:20","nodeType":"YulIdentifier","src":"3207:3:20"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:20","nodeType":"YulIdentifier","src":"3189:17:20"},"nativeSrc":"3189:22:20","nodeType":"YulFunctionCall","src":"3189:22:20"}],"functionName":{"name":"add","nativeSrc":"3175:3:20","nodeType":"YulIdentifier","src":"3175:3:20"},"nativeSrc":"3175:37:20","nodeType":"YulFunctionCall","src":"3175:37:20"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:20","nodeType":"YulIdentifier","src":"3133:28:20"},"nativeSrc":"3133:80:20","nodeType":"YulFunctionCall","src":"3133:80:20"},"nativeSrc":"3133:80:20","nodeType":"YulExpressionStatement","src":"3133:80:20"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:20","nodeType":"YulIdentifier","src":"2783:3:20"},{"kind":"number","nativeSrc":"2788:2:20","nodeType":"YulLiteral","src":"2788:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:20","nodeType":"YulIdentifier","src":"2780:2:20"},"nativeSrc":"2780:11:20","nodeType":"YulFunctionCall","src":"2780:11:20"},"nativeSrc":"2777:446:20","nodeType":"YulIf","src":"2777:446:20"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:20","nodeType":"YulTypedName","src":"2742:5:20","type":""},{"name":"len","nativeSrc":"2749:3:20","nodeType":"YulTypedName","src":"2749:3:20","type":""},{"name":"startIndex","nativeSrc":"2754:10:20","nodeType":"YulTypedName","src":"2754:10:20","type":""}],"src":"2687:543:20"},{"body":{"nativeSrc":"3299:54:20","nodeType":"YulBlock","src":"3299:54:20","statements":[{"nativeSrc":"3309:37:20","nodeType":"YulAssignment","src":"3309:37:20","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:20","nodeType":"YulIdentifier","src":"3334:4:20"},{"name":"value","nativeSrc":"3340:5:20","nodeType":"YulIdentifier","src":"3340:5:20"}],"functionName":{"name":"shr","nativeSrc":"3330:3:20","nodeType":"YulIdentifier","src":"3330:3:20"},"nativeSrc":"3330:16:20","nodeType":"YulFunctionCall","src":"3330:16:20"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:20","nodeType":"YulIdentifier","src":"3309:8:20"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:20","nodeType":"YulTypedName","src":"3274:4:20","type":""},{"name":"value","nativeSrc":"3280:5:20","nodeType":"YulTypedName","src":"3280:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:20","nodeType":"YulTypedName","src":"3290:8:20","type":""}],"src":"3236:117:20"},{"body":{"nativeSrc":"3410:118:20","nodeType":"YulBlock","src":"3410:118:20","statements":[{"nativeSrc":"3420:68:20","nodeType":"YulVariableDeclaration","src":"3420:68:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:20","nodeType":"YulLiteral","src":"3469:1:20","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:20","nodeType":"YulIdentifier","src":"3472:5:20"}],"functionName":{"name":"mul","nativeSrc":"3465:3:20","nodeType":"YulIdentifier","src":"3465:3:20"},"nativeSrc":"3465:13:20","nodeType":"YulFunctionCall","src":"3465:13:20"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:20","nodeType":"YulLiteral","src":"3484:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:20","nodeType":"YulIdentifier","src":"3480:3:20"},"nativeSrc":"3480:6:20","nodeType":"YulFunctionCall","src":"3480:6:20"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:20","nodeType":"YulIdentifier","src":"3436:28:20"},"nativeSrc":"3436:51:20","nodeType":"YulFunctionCall","src":"3436:51:20"}],"functionName":{"name":"not","nativeSrc":"3432:3:20","nodeType":"YulIdentifier","src":"3432:3:20"},"nativeSrc":"3432:56:20","nodeType":"YulFunctionCall","src":"3432:56:20"},"variables":[{"name":"mask","nativeSrc":"3424:4:20","nodeType":"YulTypedName","src":"3424:4:20","type":""}]},{"nativeSrc":"3497:25:20","nodeType":"YulAssignment","src":"3497:25:20","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:20","nodeType":"YulIdentifier","src":"3511:4:20"},{"name":"mask","nativeSrc":"3517:4:20","nodeType":"YulIdentifier","src":"3517:4:20"}],"functionName":{"name":"and","nativeSrc":"3507:3:20","nodeType":"YulIdentifier","src":"3507:3:20"},"nativeSrc":"3507:15:20","nodeType":"YulFunctionCall","src":"3507:15:20"},"variableNames":[{"name":"result","nativeSrc":"3497:6:20","nodeType":"YulIdentifier","src":"3497:6:20"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:20","nodeType":"YulTypedName","src":"3387:4:20","type":""},{"name":"bytes","nativeSrc":"3393:5:20","nodeType":"YulTypedName","src":"3393:5:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:20","nodeType":"YulTypedName","src":"3403:6:20","type":""}],"src":"3359:169:20"},{"body":{"nativeSrc":"3614:214:20","nodeType":"YulBlock","src":"3614:214:20","statements":[{"nativeSrc":"3747:37:20","nodeType":"YulAssignment","src":"3747:37:20","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:20","nodeType":"YulIdentifier","src":"3774:4:20"},{"name":"len","nativeSrc":"3780:3:20","nodeType":"YulIdentifier","src":"3780:3:20"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:20","nodeType":"YulIdentifier","src":"3755:18:20"},"nativeSrc":"3755:29:20","nodeType":"YulFunctionCall","src":"3755:29:20"},"variableNames":[{"name":"data","nativeSrc":"3747:4:20","nodeType":"YulIdentifier","src":"3747:4:20"}]},{"nativeSrc":"3793:29:20","nodeType":"YulAssignment","src":"3793:29:20","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:20","nodeType":"YulIdentifier","src":"3804:4:20"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:20","nodeType":"YulLiteral","src":"3814:1:20","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:20","nodeType":"YulIdentifier","src":"3817:3:20"}],"functionName":{"name":"mul","nativeSrc":"3810:3:20","nodeType":"YulIdentifier","src":"3810:3:20"},"nativeSrc":"3810:11:20","nodeType":"YulFunctionCall","src":"3810:11:20"}],"functionName":{"name":"or","nativeSrc":"3801:2:20","nodeType":"YulIdentifier","src":"3801:2:20"},"nativeSrc":"3801:21:20","nodeType":"YulFunctionCall","src":"3801:21:20"},"variableNames":[{"name":"used","nativeSrc":"3793:4:20","nodeType":"YulIdentifier","src":"3793:4:20"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:20","nodeType":"YulTypedName","src":"3595:4:20","type":""},{"name":"len","nativeSrc":"3601:3:20","nodeType":"YulTypedName","src":"3601:3:20","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:20","nodeType":"YulTypedName","src":"3609:4:20","type":""}],"src":"3533:295:20"},{"body":{"nativeSrc":"3925:1303:20","nodeType":"YulBlock","src":"3925:1303:20","statements":[{"nativeSrc":"3936:51:20","nodeType":"YulVariableDeclaration","src":"3936:51:20","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:20","nodeType":"YulIdentifier","src":"3983:3:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:20","nodeType":"YulIdentifier","src":"3950:32:20"},"nativeSrc":"3950:37:20","nodeType":"YulFunctionCall","src":"3950:37:20"},"variables":[{"name":"newLen","nativeSrc":"3940:6:20","nodeType":"YulTypedName","src":"3940:6:20","type":""}]},{"body":{"nativeSrc":"4072:22:20","nodeType":"YulBlock","src":"4072:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:20","nodeType":"YulIdentifier","src":"4074:16:20"},"nativeSrc":"4074:18:20","nodeType":"YulFunctionCall","src":"4074:18:20"},"nativeSrc":"4074:18:20","nodeType":"YulExpressionStatement","src":"4074:18:20"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:20","nodeType":"YulIdentifier","src":"4044:6:20"},{"kind":"number","nativeSrc":"4052:18:20","nodeType":"YulLiteral","src":"4052:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:20","nodeType":"YulIdentifier","src":"4041:2:20"},"nativeSrc":"4041:30:20","nodeType":"YulFunctionCall","src":"4041:30:20"},"nativeSrc":"4038:56:20","nodeType":"YulIf","src":"4038:56:20"},{"nativeSrc":"4104:52:20","nodeType":"YulVariableDeclaration","src":"4104:52:20","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:20","nodeType":"YulIdentifier","src":"4150:4:20"}],"functionName":{"name":"sload","nativeSrc":"4144:5:20","nodeType":"YulIdentifier","src":"4144:5:20"},"nativeSrc":"4144:11:20","nodeType":"YulFunctionCall","src":"4144:11:20"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:20","nodeType":"YulIdentifier","src":"4118:25:20"},"nativeSrc":"4118:38:20","nodeType":"YulFunctionCall","src":"4118:38:20"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:20","nodeType":"YulTypedName","src":"4108:6:20","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:20","nodeType":"YulIdentifier","src":"4249:4:20"},{"name":"oldLen","nativeSrc":"4255:6:20","nodeType":"YulIdentifier","src":"4255:6:20"},{"name":"newLen","nativeSrc":"4263:6:20","nodeType":"YulIdentifier","src":"4263:6:20"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:20","nodeType":"YulIdentifier","src":"4203:45:20"},"nativeSrc":"4203:67:20","nodeType":"YulFunctionCall","src":"4203:67:20"},"nativeSrc":"4203:67:20","nodeType":"YulExpressionStatement","src":"4203:67:20"},{"nativeSrc":"4280:18:20","nodeType":"YulVariableDeclaration","src":"4280:18:20","value":{"kind":"number","nativeSrc":"4297:1:20","nodeType":"YulLiteral","src":"4297:1:20","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:20","nodeType":"YulTypedName","src":"4284:9:20","type":""}]},{"nativeSrc":"4308:17:20","nodeType":"YulAssignment","src":"4308:17:20","value":{"kind":"number","nativeSrc":"4321:4:20","nodeType":"YulLiteral","src":"4321:4:20","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:20","nodeType":"YulIdentifier","src":"4308:9:20"}]},{"cases":[{"body":{"nativeSrc":"4372:611:20","nodeType":"YulBlock","src":"4372:611:20","statements":[{"nativeSrc":"4386:37:20","nodeType":"YulVariableDeclaration","src":"4386:37:20","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:20","nodeType":"YulIdentifier","src":"4405:6:20"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:20","nodeType":"YulLiteral","src":"4417:4:20","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:20","nodeType":"YulIdentifier","src":"4413:3:20"},"nativeSrc":"4413:9:20","nodeType":"YulFunctionCall","src":"4413:9:20"}],"functionName":{"name":"and","nativeSrc":"4401:3:20","nodeType":"YulIdentifier","src":"4401:3:20"},"nativeSrc":"4401:22:20","nodeType":"YulFunctionCall","src":"4401:22:20"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:20","nodeType":"YulTypedName","src":"4390:7:20","type":""}]},{"nativeSrc":"4437:51:20","nodeType":"YulVariableDeclaration","src":"4437:51:20","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:20","nodeType":"YulIdentifier","src":"4483:4:20"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:20","nodeType":"YulIdentifier","src":"4451:31:20"},"nativeSrc":"4451:37:20","nodeType":"YulFunctionCall","src":"4451:37:20"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:20","nodeType":"YulTypedName","src":"4441:6:20","type":""}]},{"nativeSrc":"4501:10:20","nodeType":"YulVariableDeclaration","src":"4501:10:20","value":{"kind":"number","nativeSrc":"4510:1:20","nodeType":"YulLiteral","src":"4510:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:20","nodeType":"YulTypedName","src":"4505:1:20","type":""}]},{"body":{"nativeSrc":"4569:163:20","nodeType":"YulBlock","src":"4569:163:20","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:20","nodeType":"YulIdentifier","src":"4594:6:20"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:20","nodeType":"YulIdentifier","src":"4612:3:20"},{"name":"srcOffset","nativeSrc":"4617:9:20","nodeType":"YulIdentifier","src":"4617:9:20"}],"functionName":{"name":"add","nativeSrc":"4608:3:20","nodeType":"YulIdentifier","src":"4608:3:20"},"nativeSrc":"4608:19:20","nodeType":"YulFunctionCall","src":"4608:19:20"}],"functionName":{"name":"mload","nativeSrc":"4602:5:20","nodeType":"YulIdentifier","src":"4602:5:20"},"nativeSrc":"4602:26:20","nodeType":"YulFunctionCall","src":"4602:26:20"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:20","nodeType":"YulIdentifier","src":"4587:6:20"},"nativeSrc":"4587:42:20","nodeType":"YulFunctionCall","src":"4587:42:20"},"nativeSrc":"4587:42:20","nodeType":"YulExpressionStatement","src":"4587:42:20"},{"nativeSrc":"4646:24:20","nodeType":"YulAssignment","src":"4646:24:20","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:20","nodeType":"YulIdentifier","src":"4660:6:20"},{"kind":"number","nativeSrc":"4668:1:20","nodeType":"YulLiteral","src":"4668:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:20","nodeType":"YulIdentifier","src":"4656:3:20"},"nativeSrc":"4656:14:20","nodeType":"YulFunctionCall","src":"4656:14:20"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:20","nodeType":"YulIdentifier","src":"4646:6:20"}]},{"nativeSrc":"4687:31:20","nodeType":"YulAssignment","src":"4687:31:20","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:20","nodeType":"YulIdentifier","src":"4704:9:20"},{"kind":"number","nativeSrc":"4715:2:20","nodeType":"YulLiteral","src":"4715:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:20","nodeType":"YulIdentifier","src":"4700:3:20"},"nativeSrc":"4700:18:20","nodeType":"YulFunctionCall","src":"4700:18:20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:20","nodeType":"YulIdentifier","src":"4687:9:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:20","nodeType":"YulIdentifier","src":"4535:1:20"},{"name":"loopEnd","nativeSrc":"4538:7:20","nodeType":"YulIdentifier","src":"4538:7:20"}],"functionName":{"name":"lt","nativeSrc":"4532:2:20","nodeType":"YulIdentifier","src":"4532:2:20"},"nativeSrc":"4532:14:20","nodeType":"YulFunctionCall","src":"4532:14:20"},"nativeSrc":"4524:208:20","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:20","nodeType":"YulBlock","src":"4547:21:20","statements":[{"nativeSrc":"4549:17:20","nodeType":"YulAssignment","src":"4549:17:20","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:20","nodeType":"YulIdentifier","src":"4558:1:20"},{"kind":"number","nativeSrc":"4561:4:20","nodeType":"YulLiteral","src":"4561:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:20","nodeType":"YulIdentifier","src":"4554:3:20"},"nativeSrc":"4554:12:20","nodeType":"YulFunctionCall","src":"4554:12:20"},"variableNames":[{"name":"i","nativeSrc":"4549:1:20","nodeType":"YulIdentifier","src":"4549:1:20"}]}]},"pre":{"nativeSrc":"4528:3:20","nodeType":"YulBlock","src":"4528:3:20","statements":[]},"src":"4524:208:20"},{"body":{"nativeSrc":"4768:156:20","nodeType":"YulBlock","src":"4768:156:20","statements":[{"nativeSrc":"4786:43:20","nodeType":"YulVariableDeclaration","src":"4786:43:20","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:20","nodeType":"YulIdentifier","src":"4813:3:20"},{"name":"srcOffset","nativeSrc":"4818:9:20","nodeType":"YulIdentifier","src":"4818:9:20"}],"functionName":{"name":"add","nativeSrc":"4809:3:20","nodeType":"YulIdentifier","src":"4809:3:20"},"nativeSrc":"4809:19:20","nodeType":"YulFunctionCall","src":"4809:19:20"}],"functionName":{"name":"mload","nativeSrc":"4803:5:20","nodeType":"YulIdentifier","src":"4803:5:20"},"nativeSrc":"4803:26:20","nodeType":"YulFunctionCall","src":"4803:26:20"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:20","nodeType":"YulTypedName","src":"4790:9:20","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:20","nodeType":"YulIdentifier","src":"4853:6:20"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:20","nodeType":"YulIdentifier","src":"4880:9:20"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:20","nodeType":"YulIdentifier","src":"4895:6:20"},{"kind":"number","nativeSrc":"4903:4:20","nodeType":"YulLiteral","src":"4903:4:20","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:20","nodeType":"YulIdentifier","src":"4891:3:20"},"nativeSrc":"4891:17:20","nodeType":"YulFunctionCall","src":"4891:17:20"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:20","nodeType":"YulIdentifier","src":"4861:18:20"},"nativeSrc":"4861:48:20","nodeType":"YulFunctionCall","src":"4861:48:20"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:20","nodeType":"YulIdentifier","src":"4846:6:20"},"nativeSrc":"4846:64:20","nodeType":"YulFunctionCall","src":"4846:64:20"},"nativeSrc":"4846:64:20","nodeType":"YulExpressionStatement","src":"4846:64:20"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:20","nodeType":"YulIdentifier","src":"4751:7:20"},{"name":"newLen","nativeSrc":"4760:6:20","nodeType":"YulIdentifier","src":"4760:6:20"}],"functionName":{"name":"lt","nativeSrc":"4748:2:20","nodeType":"YulIdentifier","src":"4748:2:20"},"nativeSrc":"4748:19:20","nodeType":"YulFunctionCall","src":"4748:19:20"},"nativeSrc":"4745:179:20","nodeType":"YulIf","src":"4745:179:20"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:20","nodeType":"YulIdentifier","src":"4944:4:20"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:20","nodeType":"YulIdentifier","src":"4958:6:20"},{"kind":"number","nativeSrc":"4966:1:20","nodeType":"YulLiteral","src":"4966:1:20","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:20","nodeType":"YulIdentifier","src":"4954:3:20"},"nativeSrc":"4954:14:20","nodeType":"YulFunctionCall","src":"4954:14:20"},{"kind":"number","nativeSrc":"4970:1:20","nodeType":"YulLiteral","src":"4970:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:20","nodeType":"YulIdentifier","src":"4950:3:20"},"nativeSrc":"4950:22:20","nodeType":"YulFunctionCall","src":"4950:22:20"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:20","nodeType":"YulIdentifier","src":"4937:6:20"},"nativeSrc":"4937:36:20","nodeType":"YulFunctionCall","src":"4937:36:20"},"nativeSrc":"4937:36:20","nodeType":"YulExpressionStatement","src":"4937:36:20"}]},"nativeSrc":"4365:618:20","nodeType":"YulCase","src":"4365:618:20","value":{"kind":"number","nativeSrc":"4370:1:20","nodeType":"YulLiteral","src":"4370:1:20","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:20","nodeType":"YulBlock","src":"5000:222:20","statements":[{"nativeSrc":"5014:14:20","nodeType":"YulVariableDeclaration","src":"5014:14:20","value":{"kind":"number","nativeSrc":"5027:1:20","nodeType":"YulLiteral","src":"5027:1:20","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:20","nodeType":"YulTypedName","src":"5018:5:20","type":""}]},{"body":{"nativeSrc":"5051:67:20","nodeType":"YulBlock","src":"5051:67:20","statements":[{"nativeSrc":"5069:35:20","nodeType":"YulAssignment","src":"5069:35:20","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:20","nodeType":"YulIdentifier","src":"5088:3:20"},{"name":"srcOffset","nativeSrc":"5093:9:20","nodeType":"YulIdentifier","src":"5093:9:20"}],"functionName":{"name":"add","nativeSrc":"5084:3:20","nodeType":"YulIdentifier","src":"5084:3:20"},"nativeSrc":"5084:19:20","nodeType":"YulFunctionCall","src":"5084:19:20"}],"functionName":{"name":"mload","nativeSrc":"5078:5:20","nodeType":"YulIdentifier","src":"5078:5:20"},"nativeSrc":"5078:26:20","nodeType":"YulFunctionCall","src":"5078:26:20"},"variableNames":[{"name":"value","nativeSrc":"5069:5:20","nodeType":"YulIdentifier","src":"5069:5:20"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:20","nodeType":"YulIdentifier","src":"5044:6:20"},"nativeSrc":"5041:77:20","nodeType":"YulIf","src":"5041:77:20"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:20","nodeType":"YulIdentifier","src":"5138:4:20"},{"arguments":[{"name":"value","nativeSrc":"5197:5:20","nodeType":"YulIdentifier","src":"5197:5:20"},{"name":"newLen","nativeSrc":"5204:6:20","nodeType":"YulIdentifier","src":"5204:6:20"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:20","nodeType":"YulIdentifier","src":"5144:52:20"},"nativeSrc":"5144:67:20","nodeType":"YulFunctionCall","src":"5144:67:20"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:20","nodeType":"YulIdentifier","src":"5131:6:20"},"nativeSrc":"5131:81:20","nodeType":"YulFunctionCall","src":"5131:81:20"},"nativeSrc":"5131:81:20","nodeType":"YulExpressionStatement","src":"5131:81:20"}]},"nativeSrc":"4992:230:20","nodeType":"YulCase","src":"4992:230:20","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:20","nodeType":"YulIdentifier","src":"4345:6:20"},{"kind":"number","nativeSrc":"4353:2:20","nodeType":"YulLiteral","src":"4353:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:20","nodeType":"YulIdentifier","src":"4342:2:20"},"nativeSrc":"4342:14:20","nodeType":"YulFunctionCall","src":"4342:14:20"},"nativeSrc":"4335:887:20","nodeType":"YulSwitch","src":"4335:887:20"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:20","nodeType":"YulTypedName","src":"3914:4:20","type":""},{"name":"src","nativeSrc":"3920:3:20","nodeType":"YulTypedName","src":"3920:3:20","type":""}],"src":"3833:1395:20"},{"body":{"nativeSrc":"5262:152:20","nodeType":"YulBlock","src":"5262:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5279:1:20","nodeType":"YulLiteral","src":"5279:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5282:77:20","nodeType":"YulLiteral","src":"5282:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5272:6:20","nodeType":"YulIdentifier","src":"5272:6:20"},"nativeSrc":"5272:88:20","nodeType":"YulFunctionCall","src":"5272:88:20"},"nativeSrc":"5272:88:20","nodeType":"YulExpressionStatement","src":"5272:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5376:1:20","nodeType":"YulLiteral","src":"5376:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"5379:4:20","nodeType":"YulLiteral","src":"5379:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5369:6:20","nodeType":"YulIdentifier","src":"5369:6:20"},"nativeSrc":"5369:15:20","nodeType":"YulFunctionCall","src":"5369:15:20"},"nativeSrc":"5369:15:20","nodeType":"YulExpressionStatement","src":"5369:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5400:1:20","nodeType":"YulLiteral","src":"5400:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5403:4:20","nodeType":"YulLiteral","src":"5403:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5393:6:20","nodeType":"YulIdentifier","src":"5393:6:20"},"nativeSrc":"5393:15:20","nodeType":"YulFunctionCall","src":"5393:15:20"},"nativeSrc":"5393:15:20","nodeType":"YulExpressionStatement","src":"5393:15:20"}]},"name":"panic_error_0x11","nativeSrc":"5234:180:20","nodeType":"YulFunctionDefinition","src":"5234:180:20"},{"body":{"nativeSrc":"5471:51:20","nodeType":"YulBlock","src":"5471:51:20","statements":[{"nativeSrc":"5481:34:20","nodeType":"YulAssignment","src":"5481:34:20","value":{"arguments":[{"kind":"number","nativeSrc":"5506:1:20","nodeType":"YulLiteral","src":"5506:1:20","type":"","value":"1"},{"name":"value","nativeSrc":"5509:5:20","nodeType":"YulIdentifier","src":"5509:5:20"}],"functionName":{"name":"shr","nativeSrc":"5502:3:20","nodeType":"YulIdentifier","src":"5502:3:20"},"nativeSrc":"5502:13:20","nodeType":"YulFunctionCall","src":"5502:13:20"},"variableNames":[{"name":"newValue","nativeSrc":"5481:8:20","nodeType":"YulIdentifier","src":"5481:8:20"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"5420:102:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5452:5:20","nodeType":"YulTypedName","src":"5452:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"5462:8:20","nodeType":"YulTypedName","src":"5462:8:20","type":""}],"src":"5420:102:20"},{"body":{"nativeSrc":"5601:775:20","nodeType":"YulBlock","src":"5601:775:20","statements":[{"nativeSrc":"5611:15:20","nodeType":"YulAssignment","src":"5611:15:20","value":{"name":"_power","nativeSrc":"5620:6:20","nodeType":"YulIdentifier","src":"5620:6:20"},"variableNames":[{"name":"power","nativeSrc":"5611:5:20","nodeType":"YulIdentifier","src":"5611:5:20"}]},{"nativeSrc":"5635:14:20","nodeType":"YulAssignment","src":"5635:14:20","value":{"name":"_base","nativeSrc":"5644:5:20","nodeType":"YulIdentifier","src":"5644:5:20"},"variableNames":[{"name":"base","nativeSrc":"5635:4:20","nodeType":"YulIdentifier","src":"5635:4:20"}]},{"body":{"nativeSrc":"5693:677:20","nodeType":"YulBlock","src":"5693:677:20","statements":[{"body":{"nativeSrc":"5781:22:20","nodeType":"YulBlock","src":"5781:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5783:16:20","nodeType":"YulIdentifier","src":"5783:16:20"},"nativeSrc":"5783:18:20","nodeType":"YulFunctionCall","src":"5783:18:20"},"nativeSrc":"5783:18:20","nodeType":"YulExpressionStatement","src":"5783:18:20"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"5759:4:20","nodeType":"YulIdentifier","src":"5759:4:20"},{"arguments":[{"name":"max","nativeSrc":"5769:3:20","nodeType":"YulIdentifier","src":"5769:3:20"},{"name":"base","nativeSrc":"5774:4:20","nodeType":"YulIdentifier","src":"5774:4:20"}],"functionName":{"name":"div","nativeSrc":"5765:3:20","nodeType":"YulIdentifier","src":"5765:3:20"},"nativeSrc":"5765:14:20","nodeType":"YulFunctionCall","src":"5765:14:20"}],"functionName":{"name":"gt","nativeSrc":"5756:2:20","nodeType":"YulIdentifier","src":"5756:2:20"},"nativeSrc":"5756:24:20","nodeType":"YulFunctionCall","src":"5756:24:20"},"nativeSrc":"5753:50:20","nodeType":"YulIf","src":"5753:50:20"},{"body":{"nativeSrc":"5848:419:20","nodeType":"YulBlock","src":"5848:419:20","statements":[{"nativeSrc":"6228:25:20","nodeType":"YulAssignment","src":"6228:25:20","value":{"arguments":[{"name":"power","nativeSrc":"6241:5:20","nodeType":"YulIdentifier","src":"6241:5:20"},{"name":"base","nativeSrc":"6248:4:20","nodeType":"YulIdentifier","src":"6248:4:20"}],"functionName":{"name":"mul","nativeSrc":"6237:3:20","nodeType":"YulIdentifier","src":"6237:3:20"},"nativeSrc":"6237:16:20","nodeType":"YulFunctionCall","src":"6237:16:20"},"variableNames":[{"name":"power","nativeSrc":"6228:5:20","nodeType":"YulIdentifier","src":"6228:5:20"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5823:8:20","nodeType":"YulIdentifier","src":"5823:8:20"},{"kind":"number","nativeSrc":"5833:1:20","nodeType":"YulLiteral","src":"5833:1:20","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5819:3:20","nodeType":"YulIdentifier","src":"5819:3:20"},"nativeSrc":"5819:16:20","nodeType":"YulFunctionCall","src":"5819:16:20"},"nativeSrc":"5816:451:20","nodeType":"YulIf","src":"5816:451:20"},{"nativeSrc":"6280:23:20","nodeType":"YulAssignment","src":"6280:23:20","value":{"arguments":[{"name":"base","nativeSrc":"6292:4:20","nodeType":"YulIdentifier","src":"6292:4:20"},{"name":"base","nativeSrc":"6298:4:20","nodeType":"YulIdentifier","src":"6298:4:20"}],"functionName":{"name":"mul","nativeSrc":"6288:3:20","nodeType":"YulIdentifier","src":"6288:3:20"},"nativeSrc":"6288:15:20","nodeType":"YulFunctionCall","src":"6288:15:20"},"variableNames":[{"name":"base","nativeSrc":"6280:4:20","nodeType":"YulIdentifier","src":"6280:4:20"}]},{"nativeSrc":"6316:44:20","nodeType":"YulAssignment","src":"6316:44:20","value":{"arguments":[{"name":"exponent","nativeSrc":"6351:8:20","nodeType":"YulIdentifier","src":"6351:8:20"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"6328:22:20","nodeType":"YulIdentifier","src":"6328:22:20"},"nativeSrc":"6328:32:20","nodeType":"YulFunctionCall","src":"6328:32:20"},"variableNames":[{"name":"exponent","nativeSrc":"6316:8:20","nodeType":"YulIdentifier","src":"6316:8:20"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5669:8:20","nodeType":"YulIdentifier","src":"5669:8:20"},{"kind":"number","nativeSrc":"5679:1:20","nodeType":"YulLiteral","src":"5679:1:20","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"5666:2:20","nodeType":"YulIdentifier","src":"5666:2:20"},"nativeSrc":"5666:15:20","nodeType":"YulFunctionCall","src":"5666:15:20"},"nativeSrc":"5658:712:20","nodeType":"YulForLoop","post":{"nativeSrc":"5682:2:20","nodeType":"YulBlock","src":"5682:2:20","statements":[]},"pre":{"nativeSrc":"5662:3:20","nodeType":"YulBlock","src":"5662:3:20","statements":[]},"src":"5658:712:20"}]},"name":"checked_exp_helper","nativeSrc":"5528:848:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"5556:6:20","nodeType":"YulTypedName","src":"5556:6:20","type":""},{"name":"_base","nativeSrc":"5564:5:20","nodeType":"YulTypedName","src":"5564:5:20","type":""},{"name":"exponent","nativeSrc":"5571:8:20","nodeType":"YulTypedName","src":"5571:8:20","type":""},{"name":"max","nativeSrc":"5581:3:20","nodeType":"YulTypedName","src":"5581:3:20","type":""}],"returnVariables":[{"name":"power","nativeSrc":"5589:5:20","nodeType":"YulTypedName","src":"5589:5:20","type":""},{"name":"base","nativeSrc":"5596:4:20","nodeType":"YulTypedName","src":"5596:4:20","type":""}],"src":"5528:848:20"},{"body":{"nativeSrc":"6442:1013:20","nodeType":"YulBlock","src":"6442:1013:20","statements":[{"body":{"nativeSrc":"6637:20:20","nodeType":"YulBlock","src":"6637:20:20","statements":[{"nativeSrc":"6639:10:20","nodeType":"YulAssignment","src":"6639:10:20","value":{"kind":"number","nativeSrc":"6648:1:20","nodeType":"YulLiteral","src":"6648:1:20","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"6639:5:20","nodeType":"YulIdentifier","src":"6639:5:20"}]},{"nativeSrc":"6650:5:20","nodeType":"YulLeave","src":"6650:5:20"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"6627:8:20","nodeType":"YulIdentifier","src":"6627:8:20"}],"functionName":{"name":"iszero","nativeSrc":"6620:6:20","nodeType":"YulIdentifier","src":"6620:6:20"},"nativeSrc":"6620:16:20","nodeType":"YulFunctionCall","src":"6620:16:20"},"nativeSrc":"6617:40:20","nodeType":"YulIf","src":"6617:40:20"},{"body":{"nativeSrc":"6682:20:20","nodeType":"YulBlock","src":"6682:20:20","statements":[{"nativeSrc":"6684:10:20","nodeType":"YulAssignment","src":"6684:10:20","value":{"kind":"number","nativeSrc":"6693:1:20","nodeType":"YulLiteral","src":"6693:1:20","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"6684:5:20","nodeType":"YulIdentifier","src":"6684:5:20"}]},{"nativeSrc":"6695:5:20","nodeType":"YulLeave","src":"6695:5:20"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"6676:4:20","nodeType":"YulIdentifier","src":"6676:4:20"}],"functionName":{"name":"iszero","nativeSrc":"6669:6:20","nodeType":"YulIdentifier","src":"6669:6:20"},"nativeSrc":"6669:12:20","nodeType":"YulFunctionCall","src":"6669:12:20"},"nativeSrc":"6666:36:20","nodeType":"YulIf","src":"6666:36:20"},{"cases":[{"body":{"nativeSrc":"6812:20:20","nodeType":"YulBlock","src":"6812:20:20","statements":[{"nativeSrc":"6814:10:20","nodeType":"YulAssignment","src":"6814:10:20","value":{"kind":"number","nativeSrc":"6823:1:20","nodeType":"YulLiteral","src":"6823:1:20","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"6814:5:20","nodeType":"YulIdentifier","src":"6814:5:20"}]},{"nativeSrc":"6825:5:20","nodeType":"YulLeave","src":"6825:5:20"}]},"nativeSrc":"6805:27:20","nodeType":"YulCase","src":"6805:27:20","value":{"kind":"number","nativeSrc":"6810:1:20","nodeType":"YulLiteral","src":"6810:1:20","type":"","value":"1"}},{"body":{"nativeSrc":"6856:176:20","nodeType":"YulBlock","src":"6856:176:20","statements":[{"body":{"nativeSrc":"6891:22:20","nodeType":"YulBlock","src":"6891:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6893:16:20","nodeType":"YulIdentifier","src":"6893:16:20"},"nativeSrc":"6893:18:20","nodeType":"YulFunctionCall","src":"6893:18:20"},"nativeSrc":"6893:18:20","nodeType":"YulExpressionStatement","src":"6893:18:20"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"6876:8:20","nodeType":"YulIdentifier","src":"6876:8:20"},{"kind":"number","nativeSrc":"6886:3:20","nodeType":"YulLiteral","src":"6886:3:20","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"6873:2:20","nodeType":"YulIdentifier","src":"6873:2:20"},"nativeSrc":"6873:17:20","nodeType":"YulFunctionCall","src":"6873:17:20"},"nativeSrc":"6870:43:20","nodeType":"YulIf","src":"6870:43:20"},{"nativeSrc":"6926:25:20","nodeType":"YulAssignment","src":"6926:25:20","value":{"arguments":[{"kind":"number","nativeSrc":"6939:1:20","nodeType":"YulLiteral","src":"6939:1:20","type":"","value":"2"},{"name":"exponent","nativeSrc":"6942:8:20","nodeType":"YulIdentifier","src":"6942:8:20"}],"functionName":{"name":"exp","nativeSrc":"6935:3:20","nodeType":"YulIdentifier","src":"6935:3:20"},"nativeSrc":"6935:16:20","nodeType":"YulFunctionCall","src":"6935:16:20"},"variableNames":[{"name":"power","nativeSrc":"6926:5:20","nodeType":"YulIdentifier","src":"6926:5:20"}]},{"body":{"nativeSrc":"6982:22:20","nodeType":"YulBlock","src":"6982:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6984:16:20","nodeType":"YulIdentifier","src":"6984:16:20"},"nativeSrc":"6984:18:20","nodeType":"YulFunctionCall","src":"6984:18:20"},"nativeSrc":"6984:18:20","nodeType":"YulExpressionStatement","src":"6984:18:20"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"6970:5:20","nodeType":"YulIdentifier","src":"6970:5:20"},{"name":"max","nativeSrc":"6977:3:20","nodeType":"YulIdentifier","src":"6977:3:20"}],"functionName":{"name":"gt","nativeSrc":"6967:2:20","nodeType":"YulIdentifier","src":"6967:2:20"},"nativeSrc":"6967:14:20","nodeType":"YulFunctionCall","src":"6967:14:20"},"nativeSrc":"6964:40:20","nodeType":"YulIf","src":"6964:40:20"},{"nativeSrc":"7017:5:20","nodeType":"YulLeave","src":"7017:5:20"}]},"nativeSrc":"6841:191:20","nodeType":"YulCase","src":"6841:191:20","value":{"kind":"number","nativeSrc":"6846:1:20","nodeType":"YulLiteral","src":"6846:1:20","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"6762:4:20","nodeType":"YulIdentifier","src":"6762:4:20"},"nativeSrc":"6755:277:20","nodeType":"YulSwitch","src":"6755:277:20"},{"body":{"nativeSrc":"7164:123:20","nodeType":"YulBlock","src":"7164:123:20","statements":[{"nativeSrc":"7178:28:20","nodeType":"YulAssignment","src":"7178:28:20","value":{"arguments":[{"name":"base","nativeSrc":"7191:4:20","nodeType":"YulIdentifier","src":"7191:4:20"},{"name":"exponent","nativeSrc":"7197:8:20","nodeType":"YulIdentifier","src":"7197:8:20"}],"functionName":{"name":"exp","nativeSrc":"7187:3:20","nodeType":"YulIdentifier","src":"7187:3:20"},"nativeSrc":"7187:19:20","nodeType":"YulFunctionCall","src":"7187:19:20"},"variableNames":[{"name":"power","nativeSrc":"7178:5:20","nodeType":"YulIdentifier","src":"7178:5:20"}]},{"body":{"nativeSrc":"7237:22:20","nodeType":"YulBlock","src":"7237:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7239:16:20","nodeType":"YulIdentifier","src":"7239:16:20"},"nativeSrc":"7239:18:20","nodeType":"YulFunctionCall","src":"7239:18:20"},"nativeSrc":"7239:18:20","nodeType":"YulExpressionStatement","src":"7239:18:20"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"7225:5:20","nodeType":"YulIdentifier","src":"7225:5:20"},{"name":"max","nativeSrc":"7232:3:20","nodeType":"YulIdentifier","src":"7232:3:20"}],"functionName":{"name":"gt","nativeSrc":"7222:2:20","nodeType":"YulIdentifier","src":"7222:2:20"},"nativeSrc":"7222:14:20","nodeType":"YulFunctionCall","src":"7222:14:20"},"nativeSrc":"7219:40:20","nodeType":"YulIf","src":"7219:40:20"},{"nativeSrc":"7272:5:20","nodeType":"YulLeave","src":"7272:5:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"7067:4:20","nodeType":"YulIdentifier","src":"7067:4:20"},{"kind":"number","nativeSrc":"7073:2:20","nodeType":"YulLiteral","src":"7073:2:20","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"7064:2:20","nodeType":"YulIdentifier","src":"7064:2:20"},"nativeSrc":"7064:12:20","nodeType":"YulFunctionCall","src":"7064:12:20"},{"arguments":[{"name":"exponent","nativeSrc":"7081:8:20","nodeType":"YulIdentifier","src":"7081:8:20"},{"kind":"number","nativeSrc":"7091:2:20","nodeType":"YulLiteral","src":"7091:2:20","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"7078:2:20","nodeType":"YulIdentifier","src":"7078:2:20"},"nativeSrc":"7078:16:20","nodeType":"YulFunctionCall","src":"7078:16:20"}],"functionName":{"name":"and","nativeSrc":"7060:3:20","nodeType":"YulIdentifier","src":"7060:3:20"},"nativeSrc":"7060:35:20","nodeType":"YulFunctionCall","src":"7060:35:20"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"7116:4:20","nodeType":"YulIdentifier","src":"7116:4:20"},{"kind":"number","nativeSrc":"7122:3:20","nodeType":"YulLiteral","src":"7122:3:20","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"7113:2:20","nodeType":"YulIdentifier","src":"7113:2:20"},"nativeSrc":"7113:13:20","nodeType":"YulFunctionCall","src":"7113:13:20"},{"arguments":[{"name":"exponent","nativeSrc":"7131:8:20","nodeType":"YulIdentifier","src":"7131:8:20"},{"kind":"number","nativeSrc":"7141:2:20","nodeType":"YulLiteral","src":"7141:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7128:2:20","nodeType":"YulIdentifier","src":"7128:2:20"},"nativeSrc":"7128:16:20","nodeType":"YulFunctionCall","src":"7128:16:20"}],"functionName":{"name":"and","nativeSrc":"7109:3:20","nodeType":"YulIdentifier","src":"7109:3:20"},"nativeSrc":"7109:36:20","nodeType":"YulFunctionCall","src":"7109:36:20"}],"functionName":{"name":"or","nativeSrc":"7044:2:20","nodeType":"YulIdentifier","src":"7044:2:20"},"nativeSrc":"7044:111:20","nodeType":"YulFunctionCall","src":"7044:111:20"},"nativeSrc":"7041:246:20","nodeType":"YulIf","src":"7041:246:20"},{"nativeSrc":"7297:57:20","nodeType":"YulAssignment","src":"7297:57:20","value":{"arguments":[{"kind":"number","nativeSrc":"7331:1:20","nodeType":"YulLiteral","src":"7331:1:20","type":"","value":"1"},{"name":"base","nativeSrc":"7334:4:20","nodeType":"YulIdentifier","src":"7334:4:20"},{"name":"exponent","nativeSrc":"7340:8:20","nodeType":"YulIdentifier","src":"7340:8:20"},{"name":"max","nativeSrc":"7350:3:20","nodeType":"YulIdentifier","src":"7350:3:20"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"7312:18:20","nodeType":"YulIdentifier","src":"7312:18:20"},"nativeSrc":"7312:42:20","nodeType":"YulFunctionCall","src":"7312:42:20"},"variableNames":[{"name":"power","nativeSrc":"7297:5:20","nodeType":"YulIdentifier","src":"7297:5:20"},{"name":"base","nativeSrc":"7304:4:20","nodeType":"YulIdentifier","src":"7304:4:20"}]},{"body":{"nativeSrc":"7393:22:20","nodeType":"YulBlock","src":"7393:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7395:16:20","nodeType":"YulIdentifier","src":"7395:16:20"},"nativeSrc":"7395:18:20","nodeType":"YulFunctionCall","src":"7395:18:20"},"nativeSrc":"7395:18:20","nodeType":"YulExpressionStatement","src":"7395:18:20"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"7370:5:20","nodeType":"YulIdentifier","src":"7370:5:20"},{"arguments":[{"name":"max","nativeSrc":"7381:3:20","nodeType":"YulIdentifier","src":"7381:3:20"},{"name":"base","nativeSrc":"7386:4:20","nodeType":"YulIdentifier","src":"7386:4:20"}],"functionName":{"name":"div","nativeSrc":"7377:3:20","nodeType":"YulIdentifier","src":"7377:3:20"},"nativeSrc":"7377:14:20","nodeType":"YulFunctionCall","src":"7377:14:20"}],"functionName":{"name":"gt","nativeSrc":"7367:2:20","nodeType":"YulIdentifier","src":"7367:2:20"},"nativeSrc":"7367:25:20","nodeType":"YulFunctionCall","src":"7367:25:20"},"nativeSrc":"7364:51:20","nodeType":"YulIf","src":"7364:51:20"},{"nativeSrc":"7424:25:20","nodeType":"YulAssignment","src":"7424:25:20","value":{"arguments":[{"name":"power","nativeSrc":"7437:5:20","nodeType":"YulIdentifier","src":"7437:5:20"},{"name":"base","nativeSrc":"7444:4:20","nodeType":"YulIdentifier","src":"7444:4:20"}],"functionName":{"name":"mul","nativeSrc":"7433:3:20","nodeType":"YulIdentifier","src":"7433:3:20"},"nativeSrc":"7433:16:20","nodeType":"YulFunctionCall","src":"7433:16:20"},"variableNames":[{"name":"power","nativeSrc":"7424:5:20","nodeType":"YulIdentifier","src":"7424:5:20"}]}]},"name":"checked_exp_unsigned","nativeSrc":"6382:1073:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"6412:4:20","nodeType":"YulTypedName","src":"6412:4:20","type":""},{"name":"exponent","nativeSrc":"6418:8:20","nodeType":"YulTypedName","src":"6418:8:20","type":""},{"name":"max","nativeSrc":"6428:3:20","nodeType":"YulTypedName","src":"6428:3:20","type":""}],"returnVariables":[{"name":"power","nativeSrc":"6436:5:20","nodeType":"YulTypedName","src":"6436:5:20","type":""}],"src":"6382:1073:20"},{"body":{"nativeSrc":"7504:43:20","nodeType":"YulBlock","src":"7504:43:20","statements":[{"nativeSrc":"7514:27:20","nodeType":"YulAssignment","src":"7514:27:20","value":{"arguments":[{"name":"value","nativeSrc":"7529:5:20","nodeType":"YulIdentifier","src":"7529:5:20"},{"kind":"number","nativeSrc":"7536:4:20","nodeType":"YulLiteral","src":"7536:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7525:3:20","nodeType":"YulIdentifier","src":"7525:3:20"},"nativeSrc":"7525:16:20","nodeType":"YulFunctionCall","src":"7525:16:20"},"variableNames":[{"name":"cleaned","nativeSrc":"7514:7:20","nodeType":"YulIdentifier","src":"7514:7:20"}]}]},"name":"cleanup_t_uint8","nativeSrc":"7461:86:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7486:5:20","nodeType":"YulTypedName","src":"7486:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7496:7:20","nodeType":"YulTypedName","src":"7496:7:20","type":""}],"src":"7461:86:20"},{"body":{"nativeSrc":"7617:217:20","nodeType":"YulBlock","src":"7617:217:20","statements":[{"nativeSrc":"7627:31:20","nodeType":"YulAssignment","src":"7627:31:20","value":{"arguments":[{"name":"base","nativeSrc":"7653:4:20","nodeType":"YulIdentifier","src":"7653:4:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7635:17:20","nodeType":"YulIdentifier","src":"7635:17:20"},"nativeSrc":"7635:23:20","nodeType":"YulFunctionCall","src":"7635:23:20"},"variableNames":[{"name":"base","nativeSrc":"7627:4:20","nodeType":"YulIdentifier","src":"7627:4:20"}]},{"nativeSrc":"7667:37:20","nodeType":"YulAssignment","src":"7667:37:20","value":{"arguments":[{"name":"exponent","nativeSrc":"7695:8:20","nodeType":"YulIdentifier","src":"7695:8:20"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"7679:15:20","nodeType":"YulIdentifier","src":"7679:15:20"},"nativeSrc":"7679:25:20","nodeType":"YulFunctionCall","src":"7679:25:20"},"variableNames":[{"name":"exponent","nativeSrc":"7667:8:20","nodeType":"YulIdentifier","src":"7667:8:20"}]},{"nativeSrc":"7714:113:20","nodeType":"YulAssignment","src":"7714:113:20","value":{"arguments":[{"name":"base","nativeSrc":"7744:4:20","nodeType":"YulIdentifier","src":"7744:4:20"},{"name":"exponent","nativeSrc":"7750:8:20","nodeType":"YulIdentifier","src":"7750:8:20"},{"kind":"number","nativeSrc":"7760:66:20","nodeType":"YulLiteral","src":"7760:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"7723:20:20","nodeType":"YulIdentifier","src":"7723:20:20"},"nativeSrc":"7723:104:20","nodeType":"YulFunctionCall","src":"7723:104:20"},"variableNames":[{"name":"power","nativeSrc":"7714:5:20","nodeType":"YulIdentifier","src":"7714:5:20"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"7553:281:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"7592:4:20","nodeType":"YulTypedName","src":"7592:4:20","type":""},{"name":"exponent","nativeSrc":"7598:8:20","nodeType":"YulTypedName","src":"7598:8:20","type":""}],"returnVariables":[{"name":"power","nativeSrc":"7611:5:20","nodeType":"YulTypedName","src":"7611:5:20","type":""}],"src":"7553:281:20"},{"body":{"nativeSrc":"7888:362:20","nodeType":"YulBlock","src":"7888:362:20","statements":[{"nativeSrc":"7898:25:20","nodeType":"YulAssignment","src":"7898:25:20","value":{"arguments":[{"name":"x","nativeSrc":"7921:1:20","nodeType":"YulIdentifier","src":"7921:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7903:17:20","nodeType":"YulIdentifier","src":"7903:17:20"},"nativeSrc":"7903:20:20","nodeType":"YulFunctionCall","src":"7903:20:20"},"variableNames":[{"name":"x","nativeSrc":"7898:1:20","nodeType":"YulIdentifier","src":"7898:1:20"}]},{"nativeSrc":"7932:25:20","nodeType":"YulAssignment","src":"7932:25:20","value":{"arguments":[{"name":"y","nativeSrc":"7955:1:20","nodeType":"YulIdentifier","src":"7955:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7937:17:20","nodeType":"YulIdentifier","src":"7937:17:20"},"nativeSrc":"7937:20:20","nodeType":"YulFunctionCall","src":"7937:20:20"},"variableNames":[{"name":"y","nativeSrc":"7932:1:20","nodeType":"YulIdentifier","src":"7932:1:20"}]},{"nativeSrc":"7966:28:20","nodeType":"YulVariableDeclaration","src":"7966:28:20","value":{"arguments":[{"name":"x","nativeSrc":"7989:1:20","nodeType":"YulIdentifier","src":"7989:1:20"},{"name":"y","nativeSrc":"7992:1:20","nodeType":"YulIdentifier","src":"7992:1:20"}],"functionName":{"name":"mul","nativeSrc":"7985:3:20","nodeType":"YulIdentifier","src":"7985:3:20"},"nativeSrc":"7985:9:20","nodeType":"YulFunctionCall","src":"7985:9:20"},"variables":[{"name":"product_raw","nativeSrc":"7970:11:20","nodeType":"YulTypedName","src":"7970:11:20","type":""}]},{"nativeSrc":"8003:41:20","nodeType":"YulAssignment","src":"8003:41:20","value":{"arguments":[{"name":"product_raw","nativeSrc":"8032:11:20","nodeType":"YulIdentifier","src":"8032:11:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8014:17:20","nodeType":"YulIdentifier","src":"8014:17:20"},"nativeSrc":"8014:30:20","nodeType":"YulFunctionCall","src":"8014:30:20"},"variableNames":[{"name":"product","nativeSrc":"8003:7:20","nodeType":"YulIdentifier","src":"8003:7:20"}]},{"body":{"nativeSrc":"8221:22:20","nodeType":"YulBlock","src":"8221:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8223:16:20","nodeType":"YulIdentifier","src":"8223:16:20"},"nativeSrc":"8223:18:20","nodeType":"YulFunctionCall","src":"8223:18:20"},"nativeSrc":"8223:18:20","nodeType":"YulExpressionStatement","src":"8223:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"8154:1:20","nodeType":"YulIdentifier","src":"8154:1:20"}],"functionName":{"name":"iszero","nativeSrc":"8147:6:20","nodeType":"YulIdentifier","src":"8147:6:20"},"nativeSrc":"8147:9:20","nodeType":"YulFunctionCall","src":"8147:9:20"},{"arguments":[{"name":"y","nativeSrc":"8177:1:20","nodeType":"YulIdentifier","src":"8177:1:20"},{"arguments":[{"name":"product","nativeSrc":"8184:7:20","nodeType":"YulIdentifier","src":"8184:7:20"},{"name":"x","nativeSrc":"8193:1:20","nodeType":"YulIdentifier","src":"8193:1:20"}],"functionName":{"name":"div","nativeSrc":"8180:3:20","nodeType":"YulIdentifier","src":"8180:3:20"},"nativeSrc":"8180:15:20","nodeType":"YulFunctionCall","src":"8180:15:20"}],"functionName":{"name":"eq","nativeSrc":"8174:2:20","nodeType":"YulIdentifier","src":"8174:2:20"},"nativeSrc":"8174:22:20","nodeType":"YulFunctionCall","src":"8174:22:20"}],"functionName":{"name":"or","nativeSrc":"8127:2:20","nodeType":"YulIdentifier","src":"8127:2:20"},"nativeSrc":"8127:83:20","nodeType":"YulFunctionCall","src":"8127:83:20"}],"functionName":{"name":"iszero","nativeSrc":"8107:6:20","nodeType":"YulIdentifier","src":"8107:6:20"},"nativeSrc":"8107:113:20","nodeType":"YulFunctionCall","src":"8107:113:20"},"nativeSrc":"8104:139:20","nodeType":"YulIf","src":"8104:139:20"}]},"name":"checked_mul_t_uint256","nativeSrc":"7840:410:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7871:1:20","nodeType":"YulTypedName","src":"7871:1:20","type":""},{"name":"y","nativeSrc":"7874:1:20","nodeType":"YulTypedName","src":"7874:1:20","type":""}],"returnVariables":[{"name":"product","nativeSrc":"7880:7:20","nodeType":"YulTypedName","src":"7880:7:20","type":""}],"src":"7840:410:20"},{"body":{"nativeSrc":"8301:32:20","nodeType":"YulBlock","src":"8301:32:20","statements":[{"nativeSrc":"8311:16:20","nodeType":"YulAssignment","src":"8311:16:20","value":{"name":"value","nativeSrc":"8322:5:20","nodeType":"YulIdentifier","src":"8322:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"8311:7:20","nodeType":"YulIdentifier","src":"8311:7:20"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"8256:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8283:5:20","nodeType":"YulTypedName","src":"8283:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8293:7:20","nodeType":"YulTypedName","src":"8293:7:20","type":""}],"src":"8256:77:20"},{"body":{"nativeSrc":"8404:53:20","nodeType":"YulBlock","src":"8404:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8421:3:20","nodeType":"YulIdentifier","src":"8421:3:20"},{"arguments":[{"name":"value","nativeSrc":"8444:5:20","nodeType":"YulIdentifier","src":"8444:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8426:17:20","nodeType":"YulIdentifier","src":"8426:17:20"},"nativeSrc":"8426:24:20","nodeType":"YulFunctionCall","src":"8426:24:20"}],"functionName":{"name":"mstore","nativeSrc":"8414:6:20","nodeType":"YulIdentifier","src":"8414:6:20"},"nativeSrc":"8414:37:20","nodeType":"YulFunctionCall","src":"8414:37:20"},"nativeSrc":"8414:37:20","nodeType":"YulExpressionStatement","src":"8414:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8339:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8392:5:20","nodeType":"YulTypedName","src":"8392:5:20","type":""},{"name":"pos","nativeSrc":"8399:3:20","nodeType":"YulTypedName","src":"8399:3:20","type":""}],"src":"8339:118:20"},{"body":{"nativeSrc":"8528:53:20","nodeType":"YulBlock","src":"8528:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8545:3:20","nodeType":"YulIdentifier","src":"8545:3:20"},{"arguments":[{"name":"value","nativeSrc":"8568:5:20","nodeType":"YulIdentifier","src":"8568:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8550:17:20","nodeType":"YulIdentifier","src":"8550:17:20"},"nativeSrc":"8550:24:20","nodeType":"YulFunctionCall","src":"8550:24:20"}],"functionName":{"name":"mstore","nativeSrc":"8538:6:20","nodeType":"YulIdentifier","src":"8538:6:20"},"nativeSrc":"8538:37:20","nodeType":"YulFunctionCall","src":"8538:37:20"},"nativeSrc":"8538:37:20","nodeType":"YulExpressionStatement","src":"8538:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8463:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8516:5:20","nodeType":"YulTypedName","src":"8516:5:20","type":""},{"name":"pos","nativeSrc":"8523:3:20","nodeType":"YulTypedName","src":"8523:3:20","type":""}],"src":"8463:118:20"},{"body":{"nativeSrc":"8632:81:20","nodeType":"YulBlock","src":"8632:81:20","statements":[{"nativeSrc":"8642:65:20","nodeType":"YulAssignment","src":"8642:65:20","value":{"arguments":[{"name":"value","nativeSrc":"8657:5:20","nodeType":"YulIdentifier","src":"8657:5:20"},{"kind":"number","nativeSrc":"8664:42:20","nodeType":"YulLiteral","src":"8664:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8653:3:20","nodeType":"YulIdentifier","src":"8653:3:20"},"nativeSrc":"8653:54:20","nodeType":"YulFunctionCall","src":"8653:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"8642:7:20","nodeType":"YulIdentifier","src":"8642:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"8587:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8614:5:20","nodeType":"YulTypedName","src":"8614:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8624:7:20","nodeType":"YulTypedName","src":"8624:7:20","type":""}],"src":"8587:126:20"},{"body":{"nativeSrc":"8764:51:20","nodeType":"YulBlock","src":"8764:51:20","statements":[{"nativeSrc":"8774:35:20","nodeType":"YulAssignment","src":"8774:35:20","value":{"arguments":[{"name":"value","nativeSrc":"8803:5:20","nodeType":"YulIdentifier","src":"8803:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"8785:17:20","nodeType":"YulIdentifier","src":"8785:17:20"},"nativeSrc":"8785:24:20","nodeType":"YulFunctionCall","src":"8785:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"8774:7:20","nodeType":"YulIdentifier","src":"8774:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"8719:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8746:5:20","nodeType":"YulTypedName","src":"8746:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8756:7:20","nodeType":"YulTypedName","src":"8756:7:20","type":""}],"src":"8719:96:20"},{"body":{"nativeSrc":"8886:53:20","nodeType":"YulBlock","src":"8886:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8903:3:20","nodeType":"YulIdentifier","src":"8903:3:20"},{"arguments":[{"name":"value","nativeSrc":"8926:5:20","nodeType":"YulIdentifier","src":"8926:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8908:17:20","nodeType":"YulIdentifier","src":"8908:17:20"},"nativeSrc":"8908:24:20","nodeType":"YulFunctionCall","src":"8908:24:20"}],"functionName":{"name":"mstore","nativeSrc":"8896:6:20","nodeType":"YulIdentifier","src":"8896:6:20"},"nativeSrc":"8896:37:20","nodeType":"YulFunctionCall","src":"8896:37:20"},"nativeSrc":"8896:37:20","nodeType":"YulExpressionStatement","src":"8896:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8821:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8874:5:20","nodeType":"YulTypedName","src":"8874:5:20","type":""},{"name":"pos","nativeSrc":"8881:3:20","nodeType":"YulTypedName","src":"8881:3:20","type":""}],"src":"8821:118:20"},{"body":{"nativeSrc":"9155:454:20","nodeType":"YulBlock","src":"9155:454:20","statements":[{"nativeSrc":"9165:27:20","nodeType":"YulAssignment","src":"9165:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9177:9:20","nodeType":"YulIdentifier","src":"9177:9:20"},{"kind":"number","nativeSrc":"9188:3:20","nodeType":"YulLiteral","src":"9188:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9173:3:20","nodeType":"YulIdentifier","src":"9173:3:20"},"nativeSrc":"9173:19:20","nodeType":"YulFunctionCall","src":"9173:19:20"},"variableNames":[{"name":"tail","nativeSrc":"9165:4:20","nodeType":"YulIdentifier","src":"9165:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9246:6:20","nodeType":"YulIdentifier","src":"9246:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9259:9:20","nodeType":"YulIdentifier","src":"9259:9:20"},{"kind":"number","nativeSrc":"9270:1:20","nodeType":"YulLiteral","src":"9270:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9255:3:20","nodeType":"YulIdentifier","src":"9255:3:20"},"nativeSrc":"9255:17:20","nodeType":"YulFunctionCall","src":"9255:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9202:43:20","nodeType":"YulIdentifier","src":"9202:43:20"},"nativeSrc":"9202:71:20","nodeType":"YulFunctionCall","src":"9202:71:20"},"nativeSrc":"9202:71:20","nodeType":"YulExpressionStatement","src":"9202:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9327:6:20","nodeType":"YulIdentifier","src":"9327:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9340:9:20","nodeType":"YulIdentifier","src":"9340:9:20"},{"kind":"number","nativeSrc":"9351:2:20","nodeType":"YulLiteral","src":"9351:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9336:3:20","nodeType":"YulIdentifier","src":"9336:3:20"},"nativeSrc":"9336:18:20","nodeType":"YulFunctionCall","src":"9336:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9283:43:20","nodeType":"YulIdentifier","src":"9283:43:20"},"nativeSrc":"9283:72:20","nodeType":"YulFunctionCall","src":"9283:72:20"},"nativeSrc":"9283:72:20","nodeType":"YulExpressionStatement","src":"9283:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"9409:6:20","nodeType":"YulIdentifier","src":"9409:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9422:9:20","nodeType":"YulIdentifier","src":"9422:9:20"},{"kind":"number","nativeSrc":"9433:2:20","nodeType":"YulLiteral","src":"9433:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9418:3:20","nodeType":"YulIdentifier","src":"9418:3:20"},"nativeSrc":"9418:18:20","nodeType":"YulFunctionCall","src":"9418:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"9365:43:20","nodeType":"YulIdentifier","src":"9365:43:20"},"nativeSrc":"9365:72:20","nodeType":"YulFunctionCall","src":"9365:72:20"},"nativeSrc":"9365:72:20","nodeType":"YulExpressionStatement","src":"9365:72:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"9491:6:20","nodeType":"YulIdentifier","src":"9491:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9504:9:20","nodeType":"YulIdentifier","src":"9504:9:20"},{"kind":"number","nativeSrc":"9515:2:20","nodeType":"YulLiteral","src":"9515:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9500:3:20","nodeType":"YulIdentifier","src":"9500:3:20"},"nativeSrc":"9500:18:20","nodeType":"YulFunctionCall","src":"9500:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9447:43:20","nodeType":"YulIdentifier","src":"9447:43:20"},"nativeSrc":"9447:72:20","nodeType":"YulFunctionCall","src":"9447:72:20"},"nativeSrc":"9447:72:20","nodeType":"YulExpressionStatement","src":"9447:72:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"9573:6:20","nodeType":"YulIdentifier","src":"9573:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9586:9:20","nodeType":"YulIdentifier","src":"9586:9:20"},{"kind":"number","nativeSrc":"9597:3:20","nodeType":"YulLiteral","src":"9597:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9582:3:20","nodeType":"YulIdentifier","src":"9582:3:20"},"nativeSrc":"9582:19:20","nodeType":"YulFunctionCall","src":"9582:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9529:43:20","nodeType":"YulIdentifier","src":"9529:43:20"},"nativeSrc":"9529:73:20","nodeType":"YulFunctionCall","src":"9529:73:20"},"nativeSrc":"9529:73:20","nodeType":"YulExpressionStatement","src":"9529:73:20"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"8945:664:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9095:9:20","nodeType":"YulTypedName","src":"9095:9:20","type":""},{"name":"value4","nativeSrc":"9107:6:20","nodeType":"YulTypedName","src":"9107:6:20","type":""},{"name":"value3","nativeSrc":"9115:6:20","nodeType":"YulTypedName","src":"9115:6:20","type":""},{"name":"value2","nativeSrc":"9123:6:20","nodeType":"YulTypedName","src":"9123:6:20","type":""},{"name":"value1","nativeSrc":"9131:6:20","nodeType":"YulTypedName","src":"9131:6:20","type":""},{"name":"value0","nativeSrc":"9139:6:20","nodeType":"YulTypedName","src":"9139:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9150:4:20","nodeType":"YulTypedName","src":"9150:4:20","type":""}],"src":"8945:664:20"},{"body":{"nativeSrc":"9713:124:20","nodeType":"YulBlock","src":"9713:124:20","statements":[{"nativeSrc":"9723:26:20","nodeType":"YulAssignment","src":"9723:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9735:9:20","nodeType":"YulIdentifier","src":"9735:9:20"},{"kind":"number","nativeSrc":"9746:2:20","nodeType":"YulLiteral","src":"9746:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9731:3:20","nodeType":"YulIdentifier","src":"9731:3:20"},"nativeSrc":"9731:18:20","nodeType":"YulFunctionCall","src":"9731:18:20"},"variableNames":[{"name":"tail","nativeSrc":"9723:4:20","nodeType":"YulIdentifier","src":"9723:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9803:6:20","nodeType":"YulIdentifier","src":"9803:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9816:9:20","nodeType":"YulIdentifier","src":"9816:9:20"},{"kind":"number","nativeSrc":"9827:1:20","nodeType":"YulLiteral","src":"9827:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9812:3:20","nodeType":"YulIdentifier","src":"9812:3:20"},"nativeSrc":"9812:17:20","nodeType":"YulFunctionCall","src":"9812:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9759:43:20","nodeType":"YulIdentifier","src":"9759:43:20"},"nativeSrc":"9759:71:20","nodeType":"YulFunctionCall","src":"9759:71:20"},"nativeSrc":"9759:71:20","nodeType":"YulExpressionStatement","src":"9759:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9615:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9685:9:20","nodeType":"YulTypedName","src":"9685:9:20","type":""},{"name":"value0","nativeSrc":"9697:6:20","nodeType":"YulTypedName","src":"9697:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9708:4:20","nodeType":"YulTypedName","src":"9708:4:20","type":""}],"src":"9615:222:20"},{"body":{"nativeSrc":"9939:73:20","nodeType":"YulBlock","src":"9939:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9956:3:20","nodeType":"YulIdentifier","src":"9956:3:20"},{"name":"length","nativeSrc":"9961:6:20","nodeType":"YulIdentifier","src":"9961:6:20"}],"functionName":{"name":"mstore","nativeSrc":"9949:6:20","nodeType":"YulIdentifier","src":"9949:6:20"},"nativeSrc":"9949:19:20","nodeType":"YulFunctionCall","src":"9949:19:20"},"nativeSrc":"9949:19:20","nodeType":"YulExpressionStatement","src":"9949:19:20"},{"nativeSrc":"9977:29:20","nodeType":"YulAssignment","src":"9977:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"9996:3:20","nodeType":"YulIdentifier","src":"9996:3:20"},{"kind":"number","nativeSrc":"10001:4:20","nodeType":"YulLiteral","src":"10001:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9992:3:20","nodeType":"YulIdentifier","src":"9992:3:20"},"nativeSrc":"9992:14:20","nodeType":"YulFunctionCall","src":"9992:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"9977:11:20","nodeType":"YulIdentifier","src":"9977:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9843:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9911:3:20","nodeType":"YulTypedName","src":"9911:3:20","type":""},{"name":"length","nativeSrc":"9916:6:20","nodeType":"YulTypedName","src":"9916:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9927:11:20","nodeType":"YulTypedName","src":"9927:11:20","type":""}],"src":"9843:169:20"},{"body":{"nativeSrc":"10080:184:20","nodeType":"YulBlock","src":"10080:184:20","statements":[{"nativeSrc":"10090:10:20","nodeType":"YulVariableDeclaration","src":"10090:10:20","value":{"kind":"number","nativeSrc":"10099:1:20","nodeType":"YulLiteral","src":"10099:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"10094:1:20","nodeType":"YulTypedName","src":"10094:1:20","type":""}]},{"body":{"nativeSrc":"10159:63:20","nodeType":"YulBlock","src":"10159:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10184:3:20","nodeType":"YulIdentifier","src":"10184:3:20"},{"name":"i","nativeSrc":"10189:1:20","nodeType":"YulIdentifier","src":"10189:1:20"}],"functionName":{"name":"add","nativeSrc":"10180:3:20","nodeType":"YulIdentifier","src":"10180:3:20"},"nativeSrc":"10180:11:20","nodeType":"YulFunctionCall","src":"10180:11:20"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10203:3:20","nodeType":"YulIdentifier","src":"10203:3:20"},{"name":"i","nativeSrc":"10208:1:20","nodeType":"YulIdentifier","src":"10208:1:20"}],"functionName":{"name":"add","nativeSrc":"10199:3:20","nodeType":"YulIdentifier","src":"10199:3:20"},"nativeSrc":"10199:11:20","nodeType":"YulFunctionCall","src":"10199:11:20"}],"functionName":{"name":"mload","nativeSrc":"10193:5:20","nodeType":"YulIdentifier","src":"10193:5:20"},"nativeSrc":"10193:18:20","nodeType":"YulFunctionCall","src":"10193:18:20"}],"functionName":{"name":"mstore","nativeSrc":"10173:6:20","nodeType":"YulIdentifier","src":"10173:6:20"},"nativeSrc":"10173:39:20","nodeType":"YulFunctionCall","src":"10173:39:20"},"nativeSrc":"10173:39:20","nodeType":"YulExpressionStatement","src":"10173:39:20"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"10120:1:20","nodeType":"YulIdentifier","src":"10120:1:20"},{"name":"length","nativeSrc":"10123:6:20","nodeType":"YulIdentifier","src":"10123:6:20"}],"functionName":{"name":"lt","nativeSrc":"10117:2:20","nodeType":"YulIdentifier","src":"10117:2:20"},"nativeSrc":"10117:13:20","nodeType":"YulFunctionCall","src":"10117:13:20"},"nativeSrc":"10109:113:20","nodeType":"YulForLoop","post":{"nativeSrc":"10131:19:20","nodeType":"YulBlock","src":"10131:19:20","statements":[{"nativeSrc":"10133:15:20","nodeType":"YulAssignment","src":"10133:15:20","value":{"arguments":[{"name":"i","nativeSrc":"10142:1:20","nodeType":"YulIdentifier","src":"10142:1:20"},{"kind":"number","nativeSrc":"10145:2:20","nodeType":"YulLiteral","src":"10145:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10138:3:20","nodeType":"YulIdentifier","src":"10138:3:20"},"nativeSrc":"10138:10:20","nodeType":"YulFunctionCall","src":"10138:10:20"},"variableNames":[{"name":"i","nativeSrc":"10133:1:20","nodeType":"YulIdentifier","src":"10133:1:20"}]}]},"pre":{"nativeSrc":"10113:3:20","nodeType":"YulBlock","src":"10113:3:20","statements":[]},"src":"10109:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"10242:3:20","nodeType":"YulIdentifier","src":"10242:3:20"},{"name":"length","nativeSrc":"10247:6:20","nodeType":"YulIdentifier","src":"10247:6:20"}],"functionName":{"name":"add","nativeSrc":"10238:3:20","nodeType":"YulIdentifier","src":"10238:3:20"},"nativeSrc":"10238:16:20","nodeType":"YulFunctionCall","src":"10238:16:20"},{"kind":"number","nativeSrc":"10256:1:20","nodeType":"YulLiteral","src":"10256:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"10231:6:20","nodeType":"YulIdentifier","src":"10231:6:20"},"nativeSrc":"10231:27:20","nodeType":"YulFunctionCall","src":"10231:27:20"},"nativeSrc":"10231:27:20","nodeType":"YulExpressionStatement","src":"10231:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10018:246:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10062:3:20","nodeType":"YulTypedName","src":"10062:3:20","type":""},{"name":"dst","nativeSrc":"10067:3:20","nodeType":"YulTypedName","src":"10067:3:20","type":""},{"name":"length","nativeSrc":"10072:6:20","nodeType":"YulTypedName","src":"10072:6:20","type":""}],"src":"10018:246:20"},{"body":{"nativeSrc":"10318:54:20","nodeType":"YulBlock","src":"10318:54:20","statements":[{"nativeSrc":"10328:38:20","nodeType":"YulAssignment","src":"10328:38:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10346:5:20","nodeType":"YulIdentifier","src":"10346:5:20"},{"kind":"number","nativeSrc":"10353:2:20","nodeType":"YulLiteral","src":"10353:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"10342:3:20","nodeType":"YulIdentifier","src":"10342:3:20"},"nativeSrc":"10342:14:20","nodeType":"YulFunctionCall","src":"10342:14:20"},{"arguments":[{"kind":"number","nativeSrc":"10362:2:20","nodeType":"YulLiteral","src":"10362:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"10358:3:20","nodeType":"YulIdentifier","src":"10358:3:20"},"nativeSrc":"10358:7:20","nodeType":"YulFunctionCall","src":"10358:7:20"}],"functionName":{"name":"and","nativeSrc":"10338:3:20","nodeType":"YulIdentifier","src":"10338:3:20"},"nativeSrc":"10338:28:20","nodeType":"YulFunctionCall","src":"10338:28:20"},"variableNames":[{"name":"result","nativeSrc":"10328:6:20","nodeType":"YulIdentifier","src":"10328:6:20"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"10270:102:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10301:5:20","nodeType":"YulTypedName","src":"10301:5:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"10311:6:20","nodeType":"YulTypedName","src":"10311:6:20","type":""}],"src":"10270:102:20"},{"body":{"nativeSrc":"10470:285:20","nodeType":"YulBlock","src":"10470:285:20","statements":[{"nativeSrc":"10480:53:20","nodeType":"YulVariableDeclaration","src":"10480:53:20","value":{"arguments":[{"name":"value","nativeSrc":"10527:5:20","nodeType":"YulIdentifier","src":"10527:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"10494:32:20","nodeType":"YulIdentifier","src":"10494:32:20"},"nativeSrc":"10494:39:20","nodeType":"YulFunctionCall","src":"10494:39:20"},"variables":[{"name":"length","nativeSrc":"10484:6:20","nodeType":"YulTypedName","src":"10484:6:20","type":""}]},{"nativeSrc":"10542:78:20","nodeType":"YulAssignment","src":"10542:78:20","value":{"arguments":[{"name":"pos","nativeSrc":"10608:3:20","nodeType":"YulIdentifier","src":"10608:3:20"},{"name":"length","nativeSrc":"10613:6:20","nodeType":"YulIdentifier","src":"10613:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10549:58:20","nodeType":"YulIdentifier","src":"10549:58:20"},"nativeSrc":"10549:71:20","nodeType":"YulFunctionCall","src":"10549:71:20"},"variableNames":[{"name":"pos","nativeSrc":"10542:3:20","nodeType":"YulIdentifier","src":"10542:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10668:5:20","nodeType":"YulIdentifier","src":"10668:5:20"},{"kind":"number","nativeSrc":"10675:4:20","nodeType":"YulLiteral","src":"10675:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10664:3:20","nodeType":"YulIdentifier","src":"10664:3:20"},"nativeSrc":"10664:16:20","nodeType":"YulFunctionCall","src":"10664:16:20"},{"name":"pos","nativeSrc":"10682:3:20","nodeType":"YulIdentifier","src":"10682:3:20"},{"name":"length","nativeSrc":"10687:6:20","nodeType":"YulIdentifier","src":"10687:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10629:34:20","nodeType":"YulIdentifier","src":"10629:34:20"},"nativeSrc":"10629:65:20","nodeType":"YulFunctionCall","src":"10629:65:20"},"nativeSrc":"10629:65:20","nodeType":"YulExpressionStatement","src":"10629:65:20"},{"nativeSrc":"10703:46:20","nodeType":"YulAssignment","src":"10703:46:20","value":{"arguments":[{"name":"pos","nativeSrc":"10714:3:20","nodeType":"YulIdentifier","src":"10714:3:20"},{"arguments":[{"name":"length","nativeSrc":"10741:6:20","nodeType":"YulIdentifier","src":"10741:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10719:21:20","nodeType":"YulIdentifier","src":"10719:21:20"},"nativeSrc":"10719:29:20","nodeType":"YulFunctionCall","src":"10719:29:20"}],"functionName":{"name":"add","nativeSrc":"10710:3:20","nodeType":"YulIdentifier","src":"10710:3:20"},"nativeSrc":"10710:39:20","nodeType":"YulFunctionCall","src":"10710:39:20"},"variableNames":[{"name":"end","nativeSrc":"10703:3:20","nodeType":"YulIdentifier","src":"10703:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10378:377:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10451:5:20","nodeType":"YulTypedName","src":"10451:5:20","type":""},{"name":"pos","nativeSrc":"10458:3:20","nodeType":"YulTypedName","src":"10458:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10466:3:20","nodeType":"YulTypedName","src":"10466:3:20","type":""}],"src":"10378:377:20"},{"body":{"nativeSrc":"10879:195:20","nodeType":"YulBlock","src":"10879:195:20","statements":[{"nativeSrc":"10889:26:20","nodeType":"YulAssignment","src":"10889:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"10901:9:20","nodeType":"YulIdentifier","src":"10901:9:20"},{"kind":"number","nativeSrc":"10912:2:20","nodeType":"YulLiteral","src":"10912:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10897:3:20","nodeType":"YulIdentifier","src":"10897:3:20"},"nativeSrc":"10897:18:20","nodeType":"YulFunctionCall","src":"10897:18:20"},"variableNames":[{"name":"tail","nativeSrc":"10889:4:20","nodeType":"YulIdentifier","src":"10889:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10936:9:20","nodeType":"YulIdentifier","src":"10936:9:20"},{"kind":"number","nativeSrc":"10947:1:20","nodeType":"YulLiteral","src":"10947:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10932:3:20","nodeType":"YulIdentifier","src":"10932:3:20"},"nativeSrc":"10932:17:20","nodeType":"YulFunctionCall","src":"10932:17:20"},{"arguments":[{"name":"tail","nativeSrc":"10955:4:20","nodeType":"YulIdentifier","src":"10955:4:20"},{"name":"headStart","nativeSrc":"10961:9:20","nodeType":"YulIdentifier","src":"10961:9:20"}],"functionName":{"name":"sub","nativeSrc":"10951:3:20","nodeType":"YulIdentifier","src":"10951:3:20"},"nativeSrc":"10951:20:20","nodeType":"YulFunctionCall","src":"10951:20:20"}],"functionName":{"name":"mstore","nativeSrc":"10925:6:20","nodeType":"YulIdentifier","src":"10925:6:20"},"nativeSrc":"10925:47:20","nodeType":"YulFunctionCall","src":"10925:47:20"},"nativeSrc":"10925:47:20","nodeType":"YulExpressionStatement","src":"10925:47:20"},{"nativeSrc":"10981:86:20","nodeType":"YulAssignment","src":"10981:86:20","value":{"arguments":[{"name":"value0","nativeSrc":"11053:6:20","nodeType":"YulIdentifier","src":"11053:6:20"},{"name":"tail","nativeSrc":"11062:4:20","nodeType":"YulIdentifier","src":"11062:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10989:63:20","nodeType":"YulIdentifier","src":"10989:63:20"},"nativeSrc":"10989:78:20","nodeType":"YulFunctionCall","src":"10989:78:20"},"variableNames":[{"name":"tail","nativeSrc":"10981:4:20","nodeType":"YulIdentifier","src":"10981:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10761:313:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10851:9:20","nodeType":"YulTypedName","src":"10851:9:20","type":""},{"name":"value0","nativeSrc":"10863:6:20","nodeType":"YulTypedName","src":"10863:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10874:4:20","nodeType":"YulTypedName","src":"10874:4:20","type":""}],"src":"10761:313:20"},{"body":{"nativeSrc":"11138:40:20","nodeType":"YulBlock","src":"11138:40:20","statements":[{"nativeSrc":"11149:22:20","nodeType":"YulAssignment","src":"11149:22:20","value":{"arguments":[{"name":"value","nativeSrc":"11165:5:20","nodeType":"YulIdentifier","src":"11165:5:20"}],"functionName":{"name":"mload","nativeSrc":"11159:5:20","nodeType":"YulIdentifier","src":"11159:5:20"},"nativeSrc":"11159:12:20","nodeType":"YulFunctionCall","src":"11159:12:20"},"variableNames":[{"name":"length","nativeSrc":"11149:6:20","nodeType":"YulIdentifier","src":"11149:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11080:98:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11121:5:20","nodeType":"YulTypedName","src":"11121:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11131:6:20","nodeType":"YulTypedName","src":"11131:6:20","type":""}],"src":"11080:98:20"},{"body":{"nativeSrc":"11240:60:20","nodeType":"YulBlock","src":"11240:60:20","statements":[{"nativeSrc":"11250:11:20","nodeType":"YulAssignment","src":"11250:11:20","value":{"name":"ptr","nativeSrc":"11258:3:20","nodeType":"YulIdentifier","src":"11258:3:20"},"variableNames":[{"name":"data","nativeSrc":"11250:4:20","nodeType":"YulIdentifier","src":"11250:4:20"}]},{"nativeSrc":"11271:22:20","nodeType":"YulAssignment","src":"11271:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"11283:3:20","nodeType":"YulIdentifier","src":"11283:3:20"},{"kind":"number","nativeSrc":"11288:4:20","nodeType":"YulLiteral","src":"11288:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11279:3:20","nodeType":"YulIdentifier","src":"11279:3:20"},"nativeSrc":"11279:14:20","nodeType":"YulFunctionCall","src":"11279:14:20"},"variableNames":[{"name":"data","nativeSrc":"11271:4:20","nodeType":"YulIdentifier","src":"11271:4:20"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"11184:116:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11227:3:20","nodeType":"YulTypedName","src":"11227:3:20","type":""}],"returnVariables":[{"name":"data","nativeSrc":"11235:4:20","nodeType":"YulTypedName","src":"11235:4:20","type":""}],"src":"11184:116:20"},{"body":{"nativeSrc":"11361:99:20","nodeType":"YulBlock","src":"11361:99:20","statements":[{"nativeSrc":"11372:42:20","nodeType":"YulVariableDeclaration","src":"11372:42:20","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"11409:3:20","nodeType":"YulIdentifier","src":"11409:3:20"}],"functionName":{"name":"mload","nativeSrc":"11403:5:20","nodeType":"YulIdentifier","src":"11403:5:20"},"nativeSrc":"11403:10:20","nodeType":"YulFunctionCall","src":"11403:10:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"11385:17:20","nodeType":"YulIdentifier","src":"11385:17:20"},"nativeSrc":"11385:29:20","nodeType":"YulFunctionCall","src":"11385:29:20"},"variables":[{"name":"value","nativeSrc":"11376:5:20","nodeType":"YulTypedName","src":"11376:5:20","type":""}]},{"nativeSrc":"11424:29:20","nodeType":"YulAssignment","src":"11424:29:20","value":{"name":"value","nativeSrc":"11448:5:20","nodeType":"YulIdentifier","src":"11448:5:20"},"variableNames":[{"name":"returnValue","nativeSrc":"11424:11:20","nodeType":"YulIdentifier","src":"11424:11:20"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"11306:154:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"11341:3:20","nodeType":"YulTypedName","src":"11341:3:20","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"11349:11:20","nodeType":"YulTypedName","src":"11349:11:20","type":""}],"src":"11306:154:20"},{"body":{"nativeSrc":"11556:504:20","nodeType":"YulBlock","src":"11556:504:20","statements":[{"nativeSrc":"11567:52:20","nodeType":"YulVariableDeclaration","src":"11567:52:20","value":{"arguments":[{"name":"array","nativeSrc":"11613:5:20","nodeType":"YulIdentifier","src":"11613:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"11581:31:20","nodeType":"YulIdentifier","src":"11581:31:20"},"nativeSrc":"11581:38:20","nodeType":"YulFunctionCall","src":"11581:38:20"},"variables":[{"name":"length","nativeSrc":"11571:6:20","nodeType":"YulTypedName","src":"11571:6:20","type":""}]},{"nativeSrc":"11628:21:20","nodeType":"YulVariableDeclaration","src":"11628:21:20","value":{"name":"array","nativeSrc":"11644:5:20","nodeType":"YulIdentifier","src":"11644:5:20"},"variables":[{"name":"dataArea","nativeSrc":"11632:8:20","nodeType":"YulTypedName","src":"11632:8:20","type":""}]},{"nativeSrc":"11659:52:20","nodeType":"YulAssignment","src":"11659:52:20","value":{"arguments":[{"name":"array","nativeSrc":"11705:5:20","nodeType":"YulIdentifier","src":"11705:5:20"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"11671:33:20","nodeType":"YulIdentifier","src":"11671:33:20"},"nativeSrc":"11671:40:20","nodeType":"YulFunctionCall","src":"11671:40:20"},"variableNames":[{"name":"dataArea","nativeSrc":"11659:8:20","nodeType":"YulIdentifier","src":"11659:8:20"}]},{"nativeSrc":"11721:44:20","nodeType":"YulAssignment","src":"11721:44:20","value":{"arguments":[{"name":"dataArea","nativeSrc":"11756:8:20","nodeType":"YulIdentifier","src":"11756:8:20"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"11730:25:20","nodeType":"YulIdentifier","src":"11730:25:20"},"nativeSrc":"11730:35:20","nodeType":"YulFunctionCall","src":"11730:35:20"},"variableNames":[{"name":"value","nativeSrc":"11721:5:20","nodeType":"YulIdentifier","src":"11721:5:20"}]},{"body":{"nativeSrc":"11793:260:20","nodeType":"YulBlock","src":"11793:260:20","statements":[{"nativeSrc":"11807:236:20","nodeType":"YulAssignment","src":"11807:236:20","value":{"arguments":[{"name":"value","nativeSrc":"11837:5:20","nodeType":"YulIdentifier","src":"11837:5:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11904:1:20","nodeType":"YulLiteral","src":"11904:1:20","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"11911:2:20","nodeType":"YulLiteral","src":"11911:2:20","type":"","value":"32"},{"name":"length","nativeSrc":"11915:6:20","nodeType":"YulIdentifier","src":"11915:6:20"}],"functionName":{"name":"sub","nativeSrc":"11907:3:20","nodeType":"YulIdentifier","src":"11907:3:20"},"nativeSrc":"11907:15:20","nodeType":"YulFunctionCall","src":"11907:15:20"}],"functionName":{"name":"mul","nativeSrc":"11900:3:20","nodeType":"YulIdentifier","src":"11900:3:20"},"nativeSrc":"11900:23:20","nodeType":"YulFunctionCall","src":"11900:23:20"},{"kind":"number","nativeSrc":"11945:66:20","nodeType":"YulLiteral","src":"11945:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"11860:18:20","nodeType":"YulIdentifier","src":"11860:18:20"},"nativeSrc":"11860:169:20","nodeType":"YulFunctionCall","src":"11860:169:20"}],"functionName":{"name":"and","nativeSrc":"11816:3:20","nodeType":"YulIdentifier","src":"11816:3:20"},"nativeSrc":"11816:227:20","nodeType":"YulFunctionCall","src":"11816:227:20"},"variableNames":[{"name":"value","nativeSrc":"11807:5:20","nodeType":"YulIdentifier","src":"11807:5:20"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"11781:6:20","nodeType":"YulIdentifier","src":"11781:6:20"},{"kind":"number","nativeSrc":"11789:2:20","nodeType":"YulLiteral","src":"11789:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11778:2:20","nodeType":"YulIdentifier","src":"11778:2:20"},"nativeSrc":"11778:14:20","nodeType":"YulFunctionCall","src":"11778:14:20"},"nativeSrc":"11775:278:20","nodeType":"YulIf","src":"11775:278:20"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"11466:594:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"11540:5:20","nodeType":"YulTypedName","src":"11540:5:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11550:5:20","nodeType":"YulTypedName","src":"11550:5:20","type":""}],"src":"11466:594:20"},{"body":{"nativeSrc":"12110:147:20","nodeType":"YulBlock","src":"12110:147:20","statements":[{"nativeSrc":"12120:25:20","nodeType":"YulAssignment","src":"12120:25:20","value":{"arguments":[{"name":"x","nativeSrc":"12143:1:20","nodeType":"YulIdentifier","src":"12143:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12125:17:20","nodeType":"YulIdentifier","src":"12125:17:20"},"nativeSrc":"12125:20:20","nodeType":"YulFunctionCall","src":"12125:20:20"},"variableNames":[{"name":"x","nativeSrc":"12120:1:20","nodeType":"YulIdentifier","src":"12120:1:20"}]},{"nativeSrc":"12154:25:20","nodeType":"YulAssignment","src":"12154:25:20","value":{"arguments":[{"name":"y","nativeSrc":"12177:1:20","nodeType":"YulIdentifier","src":"12177:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12159:17:20","nodeType":"YulIdentifier","src":"12159:17:20"},"nativeSrc":"12159:20:20","nodeType":"YulFunctionCall","src":"12159:20:20"},"variableNames":[{"name":"y","nativeSrc":"12154:1:20","nodeType":"YulIdentifier","src":"12154:1:20"}]},{"nativeSrc":"12188:16:20","nodeType":"YulAssignment","src":"12188:16:20","value":{"arguments":[{"name":"x","nativeSrc":"12199:1:20","nodeType":"YulIdentifier","src":"12199:1:20"},{"name":"y","nativeSrc":"12202:1:20","nodeType":"YulIdentifier","src":"12202:1:20"}],"functionName":{"name":"add","nativeSrc":"12195:3:20","nodeType":"YulIdentifier","src":"12195:3:20"},"nativeSrc":"12195:9:20","nodeType":"YulFunctionCall","src":"12195:9:20"},"variableNames":[{"name":"sum","nativeSrc":"12188:3:20","nodeType":"YulIdentifier","src":"12188:3:20"}]},{"body":{"nativeSrc":"12228:22:20","nodeType":"YulBlock","src":"12228:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12230:16:20","nodeType":"YulIdentifier","src":"12230:16:20"},"nativeSrc":"12230:18:20","nodeType":"YulFunctionCall","src":"12230:18:20"},"nativeSrc":"12230:18:20","nodeType":"YulExpressionStatement","src":"12230:18:20"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"12220:1:20","nodeType":"YulIdentifier","src":"12220:1:20"},{"name":"sum","nativeSrc":"12223:3:20","nodeType":"YulIdentifier","src":"12223:3:20"}],"functionName":{"name":"gt","nativeSrc":"12217:2:20","nodeType":"YulIdentifier","src":"12217:2:20"},"nativeSrc":"12217:10:20","nodeType":"YulFunctionCall","src":"12217:10:20"},"nativeSrc":"12214:36:20","nodeType":"YulIf","src":"12214:36:20"}]},"name":"checked_add_t_uint256","nativeSrc":"12066:191:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12097:1:20","nodeType":"YulTypedName","src":"12097:1:20","type":""},{"name":"y","nativeSrc":"12100:1:20","nodeType":"YulTypedName","src":"12100:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"12106:3:20","nodeType":"YulTypedName","src":"12106:3:20","type":""}],"src":"12066:191:20"},{"body":{"nativeSrc":"12417:288:20","nodeType":"YulBlock","src":"12417:288:20","statements":[{"nativeSrc":"12427:26:20","nodeType":"YulAssignment","src":"12427:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12439:9:20","nodeType":"YulIdentifier","src":"12439:9:20"},{"kind":"number","nativeSrc":"12450:2:20","nodeType":"YulLiteral","src":"12450:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12435:3:20","nodeType":"YulIdentifier","src":"12435:3:20"},"nativeSrc":"12435:18:20","nodeType":"YulFunctionCall","src":"12435:18:20"},"variableNames":[{"name":"tail","nativeSrc":"12427:4:20","nodeType":"YulIdentifier","src":"12427:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12507:6:20","nodeType":"YulIdentifier","src":"12507:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12520:9:20","nodeType":"YulIdentifier","src":"12520:9:20"},{"kind":"number","nativeSrc":"12531:1:20","nodeType":"YulLiteral","src":"12531:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12516:3:20","nodeType":"YulIdentifier","src":"12516:3:20"},"nativeSrc":"12516:17:20","nodeType":"YulFunctionCall","src":"12516:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12463:43:20","nodeType":"YulIdentifier","src":"12463:43:20"},"nativeSrc":"12463:71:20","nodeType":"YulFunctionCall","src":"12463:71:20"},"nativeSrc":"12463:71:20","nodeType":"YulExpressionStatement","src":"12463:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12588:6:20","nodeType":"YulIdentifier","src":"12588:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12601:9:20","nodeType":"YulIdentifier","src":"12601:9:20"},{"kind":"number","nativeSrc":"12612:2:20","nodeType":"YulLiteral","src":"12612:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12597:3:20","nodeType":"YulIdentifier","src":"12597:3:20"},"nativeSrc":"12597:18:20","nodeType":"YulFunctionCall","src":"12597:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12544:43:20","nodeType":"YulIdentifier","src":"12544:43:20"},"nativeSrc":"12544:72:20","nodeType":"YulFunctionCall","src":"12544:72:20"},"nativeSrc":"12544:72:20","nodeType":"YulExpressionStatement","src":"12544:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12670:6:20","nodeType":"YulIdentifier","src":"12670:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12683:9:20","nodeType":"YulIdentifier","src":"12683:9:20"},{"kind":"number","nativeSrc":"12694:2:20","nodeType":"YulLiteral","src":"12694:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12679:3:20","nodeType":"YulIdentifier","src":"12679:3:20"},"nativeSrc":"12679:18:20","nodeType":"YulFunctionCall","src":"12679:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12626:43:20","nodeType":"YulIdentifier","src":"12626:43:20"},"nativeSrc":"12626:72:20","nodeType":"YulFunctionCall","src":"12626:72:20"},"nativeSrc":"12626:72:20","nodeType":"YulExpressionStatement","src":"12626:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12263:442:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12373:9:20","nodeType":"YulTypedName","src":"12373:9:20","type":""},{"name":"value2","nativeSrc":"12385:6:20","nodeType":"YulTypedName","src":"12385:6:20","type":""},{"name":"value1","nativeSrc":"12393:6:20","nodeType":"YulTypedName","src":"12393:6:20","type":""},{"name":"value0","nativeSrc":"12401:6:20","nodeType":"YulTypedName","src":"12401:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12412:4:20","nodeType":"YulTypedName","src":"12412:4:20","type":""}],"src":"12263:442:20"},{"body":{"nativeSrc":"12809:124:20","nodeType":"YulBlock","src":"12809:124:20","statements":[{"nativeSrc":"12819:26:20","nodeType":"YulAssignment","src":"12819:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12831:9:20","nodeType":"YulIdentifier","src":"12831:9:20"},{"kind":"number","nativeSrc":"12842:2:20","nodeType":"YulLiteral","src":"12842:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12827:3:20","nodeType":"YulIdentifier","src":"12827:3:20"},"nativeSrc":"12827:18:20","nodeType":"YulFunctionCall","src":"12827:18:20"},"variableNames":[{"name":"tail","nativeSrc":"12819:4:20","nodeType":"YulIdentifier","src":"12819:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12899:6:20","nodeType":"YulIdentifier","src":"12899:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12912:9:20","nodeType":"YulIdentifier","src":"12912:9:20"},{"kind":"number","nativeSrc":"12923:1:20","nodeType":"YulLiteral","src":"12923:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12908:3:20","nodeType":"YulIdentifier","src":"12908:3:20"},"nativeSrc":"12908:17:20","nodeType":"YulFunctionCall","src":"12908:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12855:43:20","nodeType":"YulIdentifier","src":"12855:43:20"},"nativeSrc":"12855:71:20","nodeType":"YulFunctionCall","src":"12855:71:20"},"nativeSrc":"12855:71:20","nodeType":"YulExpressionStatement","src":"12855:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"12711:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12781:9:20","nodeType":"YulTypedName","src":"12781:9:20","type":""},{"name":"value0","nativeSrc":"12793:6:20","nodeType":"YulTypedName","src":"12793:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12804:4:20","nodeType":"YulTypedName","src":"12804:4:20","type":""}],"src":"12711:222:20"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x566547726F777700000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x566547726F777700000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5647000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFC SWAP2 SWAP1 PUSH3 0x844 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x10E SWAP2 SWAP1 PUSH3 0x844 JUMP JUMPDEST POP POP POP PUSH3 0x127 PUSH1 0x5 DUP4 PUSH3 0x206 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x145 PUSH1 0x6 DUP3 PUSH3 0x206 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x184 PUSH3 0x25B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x200 CALLER PUSH3 0x1D7 PUSH3 0x2B7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x1E5 SWAP2 SWAP1 PUSH3 0xAB1 JUMP JUMPDEST PUSH2 0x3E8 PUSH3 0x1F4 SWAP2 SWAP1 PUSH3 0xB01 JUMP JUMPDEST PUSH3 0x2BF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE09 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x22B JUMPI PUSH3 0x223 DUP4 PUSH3 0x349 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x255 JUMP JUMPDEST DUP3 PUSH3 0x23D DUP4 PUSH3 0x3B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x24D SWAP2 SWAP1 PUSH3 0x844 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x29C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x332 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x329 SWAP2 SWAP1 PUSH3 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x345 PUSH0 DUP4 DUP4 PUSH3 0x3BC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x398 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x38F SWAP2 SWAP1 PUSH3 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x3A6 SWAP1 PUSH3 0xD0A JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x410 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x403 SWAP2 SWAP1 PUSH3 0xD79 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4E1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x49C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x493 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x52A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x574 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5D3 SWAP2 SWAP1 PUSH3 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x65C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x672 JUMPI PUSH3 0x671 PUSH3 0x617 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x6D6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x699 JUMP JUMPDEST PUSH3 0x6E2 DUP7 DUP4 PUSH3 0x699 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x72C PUSH3 0x726 PUSH3 0x720 DUP5 PUSH3 0x6FA JUMP JUMPDEST PUSH3 0x703 JUMP JUMPDEST PUSH3 0x6FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x747 DUP4 PUSH3 0x70C JUMP JUMPDEST PUSH3 0x75F PUSH3 0x756 DUP3 PUSH3 0x733 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x6A5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x775 PUSH3 0x767 JUMP JUMPDEST PUSH3 0x782 DUP2 DUP5 DUP5 PUSH3 0x73C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x7A9 JUMPI PUSH3 0x79D PUSH0 DUP3 PUSH3 0x76B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x788 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x7F8 JUMPI PUSH3 0x7C2 DUP2 PUSH3 0x678 JUMP JUMPDEST PUSH3 0x7CD DUP5 PUSH3 0x68A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x7DD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x7F5 PUSH3 0x7EC DUP6 PUSH3 0x68A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x787 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x81A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x7FD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x834 DUP4 DUP4 PUSH3 0x809 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x84F DUP3 PUSH3 0x5E0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x86B JUMPI PUSH3 0x86A PUSH3 0x5EA JUMP JUMPDEST JUMPDEST PUSH3 0x877 DUP3 SLOAD PUSH3 0x644 JUMP JUMPDEST PUSH3 0x884 DUP3 DUP3 DUP6 PUSH3 0x7AD JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x8BA JUMPI PUSH0 DUP5 ISZERO PUSH3 0x8A5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x8B1 DUP6 DUP3 PUSH3 0x827 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x920 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x8CA DUP7 PUSH3 0x678 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x8F3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8CC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x913 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x90F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x809 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x9B2 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x98A JUMPI PUSH3 0x989 PUSH3 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x99A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x9AA DUP6 PUSH3 0x955 JUMP JUMPDEST SWAP5 POP PUSH3 0x96A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x9CC JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xA9E JUMP JUMPDEST DUP2 PUSH3 0x9DB JUMPI PUSH0 SWAP1 POP PUSH3 0xA9E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x9F4 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x9FF JUMPI PUSH3 0xA35 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xA9E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xA14 JUMPI PUSH3 0xA13 PUSH3 0x928 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xA2E JUMPI PUSH3 0xA2D PUSH3 0x928 JUMP JUMPDEST JUMPDEST POP PUSH3 0xA9E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xA6F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xA69 JUMPI PUSH3 0xA68 PUSH3 0x928 JUMP JUMPDEST JUMPDEST PUSH3 0xA9E JUMP JUMPDEST PUSH3 0xA7E DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x961 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xA98 JUMPI PUSH3 0xA97 PUSH3 0x928 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xABD DUP3 PUSH3 0x6FA JUMP JUMPDEST SWAP2 POP PUSH3 0xACA DUP4 PUSH3 0xAA5 JUMP JUMPDEST SWAP3 POP PUSH3 0xAF9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x9BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB0D DUP3 PUSH3 0x6FA JUMP JUMPDEST SWAP2 POP PUSH3 0xB1A DUP4 PUSH3 0x6FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xB2A DUP2 PUSH3 0x6FA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xB44 JUMPI PUSH3 0xB43 PUSH3 0x928 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB5F DUP2 PUSH3 0xB4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xB70 DUP2 PUSH3 0x6FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xBA1 DUP3 PUSH3 0xB76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBB3 DUP2 PUSH3 0xB95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xBCE PUSH0 DUP4 ADD DUP9 PUSH3 0xB54 JUMP JUMPDEST PUSH3 0xBDD PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xB54 JUMP JUMPDEST PUSH3 0xBEC PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xB54 JUMP JUMPDEST PUSH3 0xBFB PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xB65 JUMP JUMPDEST PUSH3 0xC0A PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xBA8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC29 PUSH0 DUP4 ADD DUP5 PUSH3 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC5E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xC41 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xC85 DUP3 PUSH3 0x5E0 JUMP JUMPDEST PUSH3 0xC91 DUP2 DUP6 PUSH3 0xC2F JUMP JUMPDEST SWAP4 POP PUSH3 0xCA3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xC3F JUMP JUMPDEST PUSH3 0xCAE DUP2 PUSH3 0xC69 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xCD3 DUP2 DUP5 PUSH3 0xC79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD01 DUP3 MLOAD PUSH3 0xB4B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD16 DUP3 PUSH3 0xCDB JUMP JUMPDEST DUP3 PUSH3 0xD22 DUP5 PUSH3 0xCE5 JUMP JUMPDEST SWAP1 POP PUSH3 0xD2F DUP2 PUSH3 0xCF4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xD72 JUMPI PUSH3 0xD6D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x699 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD85 DUP3 PUSH3 0x6FA JUMP JUMPDEST SWAP2 POP PUSH3 0xD92 DUP4 PUSH3 0x6FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xDAD JUMPI PUSH3 0xDAC PUSH3 0x928 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xDC8 PUSH0 DUP4 ADD DUP7 PUSH3 0xBA8 JUMP JUMPDEST PUSH3 0xDD7 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xB65 JUMP JUMPDEST PUSH3 0xDE6 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xB65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE03 PUSH0 DUP4 ADD DUP5 PUSH3 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1B6E PUSH3 0xE5B PUSH0 CODECOPY PUSH0 PUSH2 0xA15 ADD MSTORE PUSH0 PUSH2 0x9DA ADD MSTORE PUSH0 PUSH2 0xF0E ADD MSTORE PUSH0 PUSH2 0xEED ADD MSTORE PUSH0 PUSH2 0x8D8 ADD MSTORE PUSH0 PUSH2 0x92E ADD MSTORE PUSH0 PUSH2 0x957 ADD MSTORE PUSH2 0x1B6E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x209 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D6 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x302 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x324 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x34D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x330 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x361 PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x36E DUP2 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x38C PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP6 DUP3 DUP6 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x3A4 DUP6 DUP6 DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3C1 PUSH2 0x8D5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x415 DUP3 PUSH2 0x98B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x42D PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x435 PUSH2 0xA0C JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x454 JUMPI PUSH2 0x453 PUSH2 0x1916 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x482 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4D0 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FC SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x55B PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x568 DUP2 DUP6 DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x5B8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x5E6 DUP13 PUSH2 0xA47 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5FC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x61E DUP3 PUSH2 0xA9A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x62D DUP3 DUP8 DUP8 DUP8 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A1 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP3 SWAP2 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AC DUP11 DUP11 DUP11 PUSH2 0x741 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x74E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75E DUP5 DUP5 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7D0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x855 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D0 DUP4 DUP4 DUP4 PUSH2 0xCB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x950 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x97D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x988 JUMP JUMPDEST PUSH2 0x985 PUSH2 0xEC9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA07 PUSH1 0x5 PUSH32 0x0 PUSH2 0xF5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA42 PUSH1 0x6 PUSH32 0x0 PUSH2 0xF5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAC PUSH2 0xAA6 PUSH2 0x8D5 JUMP JUMPDEST DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xAC3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x104B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xAD3 DUP3 DUP3 PUSH2 0x1132 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB51 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD00 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x1A44 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDCE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD89 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE5F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF43 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0xF7A JUMPI PUSH2 0xF73 DUP4 PUSH2 0x1294 JUMP JUMPDEST SWAP1 POP PUSH2 0x1005 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xF86 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFB2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFFD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFD4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFFD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFE0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1087 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1128 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x10AA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x111B JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1128 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1290 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1185 JUMPI PUSH2 0x1184 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11BC JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11CF PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11E2 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1227 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121E SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x128F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x12A0 DUP4 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x1916 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12F0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x138B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1370 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13B0 DUP3 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x13BA DUP2 DUP6 PUSH2 0x135E JUMP JUMPDEST SWAP4 POP PUSH2 0x13CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x136E JUMP JUMPDEST PUSH2 0x13D3 DUP2 PUSH2 0x1396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F6 DUP2 DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x142B DUP3 PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP2 EQ PUSH2 0x1445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1456 DUP2 PUSH2 0x1432 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146E DUP2 PUSH2 0x145C JUMP JUMPDEST DUP2 EQ PUSH2 0x1478 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1489 DUP2 PUSH2 0x1465 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C3 DUP6 DUP3 DUP7 ADD PUSH2 0x147B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E1 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FA PUSH0 DUP4 ADD DUP5 PUSH2 0x14D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1509 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1522 PUSH0 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x153F JUMPI PUSH2 0x153E PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154C DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x155D DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x156E DUP7 DUP3 DUP8 ADD PUSH2 0x147B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158D DUP2 PUSH2 0x1578 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BE DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15F1 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15FF DUP5 DUP3 DUP6 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x1608 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x164B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1683 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 DUP4 DUP4 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B6 DUP3 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x16C0 DUP2 DUP6 PUSH2 0x165B JUMP JUMPDEST SWAP4 POP PUSH2 0x16CB DUP4 PUSH2 0x166B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16FB JUMPI DUP2 MLOAD PUSH2 0x16E2 DUP9 DUP3 PUSH2 0x1689 JUMP JUMPDEST SWAP8 POP PUSH2 0x16ED DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH0 DUP4 ADD DUP11 PUSH2 0x1633 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x172D DUP2 DUP10 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1741 DUP2 DUP9 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1750 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x175D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x176A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 DUP5 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1793 DUP2 PUSH2 0x1578 JUMP JUMPDEST DUP2 EQ PUSH2 0x179D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AE DUP2 PUSH2 0x178A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP2 EQ PUSH2 0x17C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D8 DUP2 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x17F9 JUMPI PUSH2 0x17F8 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1806 DUP11 DUP3 DUP12 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1817 DUP11 DUP3 DUP12 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1828 DUP11 DUP3 DUP12 ADD PUSH2 0x147B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1839 DUP11 DUP3 DUP12 ADD PUSH2 0x147B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x184A DUP11 DUP3 DUP12 ADD PUSH2 0x17A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x185B DUP11 DUP3 DUP12 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x186C DUP11 DUP3 DUP12 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189E DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18AF DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x18B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1956 PUSH0 DUP4 ADD DUP10 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1963 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x1970 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x197D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x198A PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x1997 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19B5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x19C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19DC PUSH0 DUP4 ADD DUP7 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x19E9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x19F6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A11 PUSH0 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4E DUP3 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A59 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A70 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1A8A PUSH0 DUP4 ADD DUP9 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1A97 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AA4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AB1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x1ABE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1ADB PUSH0 DUP4 ADD DUP8 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AE8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1584 JUMP JUMPDEST PUSH2 0x1AF5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE2 ORIGIN SWAP16 DUP15 SWAP8 LOG2 NUMBER 0xE5 PUSH24 0xBFB3FE8122413FF93C6D3C83218CFA3547BE7F51B2146473 PUSH16 0x6C634300081500330000000000000000 ","sourceMap":"188:171:19:-:0;;;233:119;;;;;;;;;;1574:52:4;;;;;;;;;;;;;;;;;1613:4;3328:431:13;;;;;;;;;;;;;;;;;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:13;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:4;303:42:19::2;309:10;334;:8;;;:10;;:::i;:::-;328:2;:16;;;;:::i;:::-;321:4;:23;;;;:::i;:::-;303:5;;;:42;;:::i;:::-;188:171:::0;;2914:340:9;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:13:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1708:286:9:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:10:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:86::-;7496:7;7536:4;7529:5;7525:16;7514:27;;7461:86;;;:::o;7553:281::-;7611:5;7635:23;7653:4;7635:23;:::i;:::-;7627:31;;7679:25;7695:8;7679:25;:::i;:::-;7667:37;;7723:104;7760:66;7750:8;7744:4;7723:104;:::i;:::-;7714:113;;7553:281;;;;:::o;7840:410::-;7880:7;7903:20;7921:1;7903:20;:::i;:::-;7898:25;;7937:20;7955:1;7937:20;:::i;:::-;7932:25;;7992:1;7989;7985:9;8014:30;8032:11;8014:30;:::i;:::-;8003:41;;8193:1;8184:7;8180:15;8177:1;8174:22;8154:1;8147:9;8127:83;8104:139;;8223:18;;:::i;:::-;8104:139;7888:362;7840:410;;;;:::o;8256:77::-;8293:7;8322:5;8311:16;;8256:77;;;:::o;8339:118::-;8426:24;8444:5;8426:24;:::i;:::-;8421:3;8414:37;8339:118;;:::o;8463:::-;8550:24;8568:5;8550:24;:::i;:::-;8545:3;8538:37;8463:118;;:::o;8587:126::-;8624:7;8664:42;8657:5;8653:54;8642:65;;8587:126;;;:::o;8719:96::-;8756:7;8785:24;8803:5;8785:24;:::i;:::-;8774:35;;8719:96;;;:::o;8821:118::-;8908:24;8926:5;8908:24;:::i;:::-;8903:3;8896:37;8821:118;;:::o;8945:664::-;9150:4;9188:3;9177:9;9173:19;9165:27;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9283:72;9351:2;9340:9;9336:18;9327:6;9283:72;:::i;:::-;9365;9433:2;9422:9;9418:18;9409:6;9365:72;:::i;:::-;9447;9515:2;9504:9;9500:18;9491:6;9447:72;:::i;:::-;9529:73;9597:3;9586:9;9582:19;9573:6;9529:73;:::i;:::-;8945:664;;;;;;;;:::o;9615:222::-;9708:4;9746:2;9735:9;9731:18;9723:26;;9759:71;9827:1;9816:9;9812:17;9803:6;9759:71;:::i;:::-;9615:222;;;;:::o;9843:169::-;9927:11;9961:6;9956:3;9949:19;10001:4;9996:3;9992:14;9977:29;;9843:169;;;;:::o;10018:246::-;10099:1;10109:113;10123:6;10120:1;10117:13;10109:113;;;10208:1;10203:3;10199:11;10193:18;10189:1;10184:3;10180:11;10173:39;10145:2;10142:1;10138:10;10133:15;;10109:113;;;10256:1;10247:6;10242:3;10238:16;10231:27;10080:184;10018:246;;;:::o;10270:102::-;10311:6;10362:2;10358:7;10353:2;10346:5;10342:14;10338:28;10328:38;;10270:102;;;:::o;10378:377::-;10466:3;10494:39;10527:5;10494:39;:::i;:::-;10549:71;10613:6;10608:3;10549:71;:::i;:::-;10542:78;;10629:65;10687:6;10682:3;10675:4;10668:5;10664:16;10629:65;:::i;:::-;10719:29;10741:6;10719:29;:::i;:::-;10714:3;10710:39;10703:46;;10470:285;10378:377;;;;:::o;10761:313::-;10874:4;10912:2;10901:9;10897:18;10889:26;;10961:9;10955:4;10951:20;10947:1;10936:9;10932:17;10925:47;10989:78;11062:4;11053:6;10989:78;:::i;:::-;10981:86;;10761:313;;;;:::o;11080:98::-;11131:6;11165:5;11159:12;11149:22;;11080:98;;;:::o;11184:116::-;11235:4;11258:3;11250:11;;11288:4;11283:3;11279:14;11271:22;;11184:116;;;:::o;11306:154::-;11349:11;11385:29;11409:3;11403:10;11385:29;:::i;:::-;11448:5;11424:29;;11361:99;11306:154;;;:::o;11466:594::-;11550:5;11581:38;11613:5;11581:38;:::i;:::-;11644:5;11671:40;11705:5;11671:40;:::i;:::-;11659:52;;11730:35;11756:8;11730:35;:::i;:::-;11721:44;;11789:2;11781:6;11778:14;11775:278;;;11860:169;11945:66;11915:6;11911:2;11907:15;11904:1;11900:23;11860:169;:::i;:::-;11837:5;11816:227;11807:236;;11775:278;11556:504;;11466:594;;;:::o;12066:191::-;12106:3;12125:20;12143:1;12125:20;:::i;:::-;12120:25;;12159:20;12177:1;12159:20;:::i;:::-;12154:25;;12202:1;12199;12195:9;12188:16;;12223:3;12220:1;12217:10;12214:36;;;12230:18;;:::i;:::-;12214:36;12066:191;;;;:::o;12263:442::-;12412:4;12450:2;12439:9;12435:18;12427:26;;12463:71;12531:1;12520:9;12516:17;12507:6;12463:71;:::i;:::-;12544:72;12612:2;12601:9;12597:18;12588:6;12544:72;:::i;:::-;12626;12694:2;12683:9;12679:18;12670:6;12626:72;:::i;:::-;12263:442;;;;;;:::o;12711:222::-;12804:4;12842:2;12831:9;12827:18;12819:26;;12855:71;12923:1;12912:9;12908:17;12899:6;12855:71;:::i;:::-;12711:222;;;;:::o;188:171:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_907":{"entryPoint":952,"id":907,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_2204":{"entryPoint":2513,"id":2204,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2216":{"entryPoint":2572,"id":2216,"parameterSlots":0,"returnSlots":1},"@_approve_567":{"entryPoint":1857,"id":567,"parameterSlots":3,"returnSlots":0},"@_approve_627":{"entryPoint":2785,"id":627,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_2134":{"entryPoint":3785,"id":2134,"parameterSlots":0,"returnSlots":1},"@_domainSeparatorV4_2113":{"entryPoint":2261,"id":2113,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2150":{"entryPoint":2714,"id":2150,"parameterSlots":1,"returnSlots":1},"@_msgSender_982":{"entryPoint":1850,"id":982,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_675":{"entryPoint":1875,"id":675,"parameterSlots":3,"returnSlots":0},"@_throwError_1989":{"entryPoint":4402,"id":1989,"parameterSlots":2,"returnSlots":0},"@_transfer_406":{"entryPoint":2021,"id":406,"parameterSlots":3,"returnSlots":0},"@_update_483":{"entryPoint":3248,"id":483,"parameterSlots":3,"returnSlots":0},"@_useNonce_1034":{"entryPoint":2631,"id":1034,"parameterSlots":1,"returnSlots":1},"@allowance_303":{"entryPoint":1720,"id":303,"parameterSlots":2,"returnSlots":1},"@approve_327":{"entryPoint":855,"id":327,"parameterSlots":2,"returnSlots":1},"@balanceOf_262":{"entryPoint":966,"id":262,"parameterSlots":1,"returnSlots":1},"@byteLength_1178":{"entryPoint":4870,"id":1178,"parameterSlots":1,"returnSlots":1},"@decimals_240":{"entryPoint":944,"id":240,"parameterSlots":0,"returnSlots":1},"@eip712Domain_2192":{"entryPoint":1052,"id":2192,"parameterSlots":0,"returnSlots":7},"@name_222":{"entryPoint":711,"id":222,"parameterSlots":0,"returnSlots":1},"@nonces_1019":{"entryPoint":2443,"id":1019,"parameterSlots":1,"returnSlots":1},"@nonces_897":{"entryPoint":1035,"id":897,"parameterSlots":1,"returnSlots":1},"@permit_880":{"entryPoint":1395,"id":880,"parameterSlots":7,"returnSlots":0},"@recover_1940":{"entryPoint":2739,"id":1940,"parameterSlots":4,"returnSlots":1},"@symbol_231":{"entryPoint":1217,"id":231,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1245":{"entryPoint":3934,"id":1245,"parameterSlots":2,"returnSlots":1},"@toString_1146":{"entryPoint":4756,"id":1146,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2290":{"entryPoint":4107,"id":2290,"parameterSlots":2,"returnSlots":1},"@totalSupply_249":{"entryPoint":889,"id":249,"parameterSlots":0,"returnSlots":1},"@transferFrom_359":{"entryPoint":898,"id":359,"parameterSlots":3,"returnSlots":1},"@transfer_286":{"entryPoint":1361,"id":286,"parameterSlots":2,"returnSlots":1},"@tryRecover_1904":{"entryPoint":4171,"id":1904,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":5192,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":6090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":6048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6267,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5416,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":6110,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5263,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":5769,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5698,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":5804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5336,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":5557,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":5754,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5376,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":5508,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":6562,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6601,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5896,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":5572,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6467,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":6775,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":6856,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5391,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":5523,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5739,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5713,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4948,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5792,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":5723,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4958,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6724,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5153,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5325,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":5640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5548,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5122,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5212,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":5496,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4974,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6374,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6679,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6923,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6329,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5118,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5014,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":5170,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":6068,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5221,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":6026,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15381:20","nodeType":"YulBlock","src":"0:15381:20","statements":[{"body":{"nativeSrc":"66:40:20","nodeType":"YulBlock","src":"66:40:20","statements":[{"nativeSrc":"77:22:20","nodeType":"YulAssignment","src":"77:22:20","value":{"arguments":[{"name":"value","nativeSrc":"93:5:20","nodeType":"YulIdentifier","src":"93:5:20"}],"functionName":{"name":"mload","nativeSrc":"87:5:20","nodeType":"YulIdentifier","src":"87:5:20"},"nativeSrc":"87:12:20","nodeType":"YulFunctionCall","src":"87:12:20"},"variableNames":[{"name":"length","nativeSrc":"77:6:20","nodeType":"YulIdentifier","src":"77:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:20","nodeType":"YulTypedName","src":"49:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:20","nodeType":"YulTypedName","src":"59:6:20","type":""}],"src":"7:99:20"},{"body":{"nativeSrc":"208:73:20","nodeType":"YulBlock","src":"208:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:20","nodeType":"YulIdentifier","src":"225:3:20"},{"name":"length","nativeSrc":"230:6:20","nodeType":"YulIdentifier","src":"230:6:20"}],"functionName":{"name":"mstore","nativeSrc":"218:6:20","nodeType":"YulIdentifier","src":"218:6:20"},"nativeSrc":"218:19:20","nodeType":"YulFunctionCall","src":"218:19:20"},"nativeSrc":"218:19:20","nodeType":"YulExpressionStatement","src":"218:19:20"},{"nativeSrc":"246:29:20","nodeType":"YulAssignment","src":"246:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:20","nodeType":"YulIdentifier","src":"265:3:20"},{"kind":"number","nativeSrc":"270:4:20","nodeType":"YulLiteral","src":"270:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:20","nodeType":"YulIdentifier","src":"261:3:20"},"nativeSrc":"261:14:20","nodeType":"YulFunctionCall","src":"261:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:20","nodeType":"YulIdentifier","src":"246:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:20","nodeType":"YulTypedName","src":"180:3:20","type":""},{"name":"length","nativeSrc":"185:6:20","nodeType":"YulTypedName","src":"185:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:20","nodeType":"YulTypedName","src":"196:11:20","type":""}],"src":"112:169:20"},{"body":{"nativeSrc":"349:184:20","nodeType":"YulBlock","src":"349:184:20","statements":[{"nativeSrc":"359:10:20","nodeType":"YulVariableDeclaration","src":"359:10:20","value":{"kind":"number","nativeSrc":"368:1:20","nodeType":"YulLiteral","src":"368:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:20","nodeType":"YulTypedName","src":"363:1:20","type":""}]},{"body":{"nativeSrc":"428:63:20","nodeType":"YulBlock","src":"428:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:20","nodeType":"YulIdentifier","src":"453:3:20"},{"name":"i","nativeSrc":"458:1:20","nodeType":"YulIdentifier","src":"458:1:20"}],"functionName":{"name":"add","nativeSrc":"449:3:20","nodeType":"YulIdentifier","src":"449:3:20"},"nativeSrc":"449:11:20","nodeType":"YulFunctionCall","src":"449:11:20"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:20","nodeType":"YulIdentifier","src":"472:3:20"},{"name":"i","nativeSrc":"477:1:20","nodeType":"YulIdentifier","src":"477:1:20"}],"functionName":{"name":"add","nativeSrc":"468:3:20","nodeType":"YulIdentifier","src":"468:3:20"},"nativeSrc":"468:11:20","nodeType":"YulFunctionCall","src":"468:11:20"}],"functionName":{"name":"mload","nativeSrc":"462:5:20","nodeType":"YulIdentifier","src":"462:5:20"},"nativeSrc":"462:18:20","nodeType":"YulFunctionCall","src":"462:18:20"}],"functionName":{"name":"mstore","nativeSrc":"442:6:20","nodeType":"YulIdentifier","src":"442:6:20"},"nativeSrc":"442:39:20","nodeType":"YulFunctionCall","src":"442:39:20"},"nativeSrc":"442:39:20","nodeType":"YulExpressionStatement","src":"442:39:20"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:20","nodeType":"YulIdentifier","src":"389:1:20"},{"name":"length","nativeSrc":"392:6:20","nodeType":"YulIdentifier","src":"392:6:20"}],"functionName":{"name":"lt","nativeSrc":"386:2:20","nodeType":"YulIdentifier","src":"386:2:20"},"nativeSrc":"386:13:20","nodeType":"YulFunctionCall","src":"386:13:20"},"nativeSrc":"378:113:20","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:20","nodeType":"YulBlock","src":"400:19:20","statements":[{"nativeSrc":"402:15:20","nodeType":"YulAssignment","src":"402:15:20","value":{"arguments":[{"name":"i","nativeSrc":"411:1:20","nodeType":"YulIdentifier","src":"411:1:20"},{"kind":"number","nativeSrc":"414:2:20","nodeType":"YulLiteral","src":"414:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:20","nodeType":"YulIdentifier","src":"407:3:20"},"nativeSrc":"407:10:20","nodeType":"YulFunctionCall","src":"407:10:20"},"variableNames":[{"name":"i","nativeSrc":"402:1:20","nodeType":"YulIdentifier","src":"402:1:20"}]}]},"pre":{"nativeSrc":"382:3:20","nodeType":"YulBlock","src":"382:3:20","statements":[]},"src":"378:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:20","nodeType":"YulIdentifier","src":"511:3:20"},{"name":"length","nativeSrc":"516:6:20","nodeType":"YulIdentifier","src":"516:6:20"}],"functionName":{"name":"add","nativeSrc":"507:3:20","nodeType":"YulIdentifier","src":"507:3:20"},"nativeSrc":"507:16:20","nodeType":"YulFunctionCall","src":"507:16:20"},{"kind":"number","nativeSrc":"525:1:20","nodeType":"YulLiteral","src":"525:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:20","nodeType":"YulIdentifier","src":"500:6:20"},"nativeSrc":"500:27:20","nodeType":"YulFunctionCall","src":"500:27:20"},"nativeSrc":"500:27:20","nodeType":"YulExpressionStatement","src":"500:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:20","nodeType":"YulTypedName","src":"331:3:20","type":""},{"name":"dst","nativeSrc":"336:3:20","nodeType":"YulTypedName","src":"336:3:20","type":""},{"name":"length","nativeSrc":"341:6:20","nodeType":"YulTypedName","src":"341:6:20","type":""}],"src":"287:246:20"},{"body":{"nativeSrc":"587:54:20","nodeType":"YulBlock","src":"587:54:20","statements":[{"nativeSrc":"597:38:20","nodeType":"YulAssignment","src":"597:38:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:20","nodeType":"YulIdentifier","src":"615:5:20"},{"kind":"number","nativeSrc":"622:2:20","nodeType":"YulLiteral","src":"622:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:20","nodeType":"YulIdentifier","src":"611:3:20"},"nativeSrc":"611:14:20","nodeType":"YulFunctionCall","src":"611:14:20"},{"arguments":[{"kind":"number","nativeSrc":"631:2:20","nodeType":"YulLiteral","src":"631:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:20","nodeType":"YulIdentifier","src":"627:3:20"},"nativeSrc":"627:7:20","nodeType":"YulFunctionCall","src":"627:7:20"}],"functionName":{"name":"and","nativeSrc":"607:3:20","nodeType":"YulIdentifier","src":"607:3:20"},"nativeSrc":"607:28:20","nodeType":"YulFunctionCall","src":"607:28:20"},"variableNames":[{"name":"result","nativeSrc":"597:6:20","nodeType":"YulIdentifier","src":"597:6:20"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:20","nodeType":"YulTypedName","src":"570:5:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:20","nodeType":"YulTypedName","src":"580:6:20","type":""}],"src":"539:102:20"},{"body":{"nativeSrc":"739:285:20","nodeType":"YulBlock","src":"739:285:20","statements":[{"nativeSrc":"749:53:20","nodeType":"YulVariableDeclaration","src":"749:53:20","value":{"arguments":[{"name":"value","nativeSrc":"796:5:20","nodeType":"YulIdentifier","src":"796:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:20","nodeType":"YulIdentifier","src":"763:32:20"},"nativeSrc":"763:39:20","nodeType":"YulFunctionCall","src":"763:39:20"},"variables":[{"name":"length","nativeSrc":"753:6:20","nodeType":"YulTypedName","src":"753:6:20","type":""}]},{"nativeSrc":"811:78:20","nodeType":"YulAssignment","src":"811:78:20","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:20","nodeType":"YulIdentifier","src":"877:3:20"},{"name":"length","nativeSrc":"882:6:20","nodeType":"YulIdentifier","src":"882:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:20","nodeType":"YulIdentifier","src":"818:58:20"},"nativeSrc":"818:71:20","nodeType":"YulFunctionCall","src":"818:71:20"},"variableNames":[{"name":"pos","nativeSrc":"811:3:20","nodeType":"YulIdentifier","src":"811:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:20","nodeType":"YulIdentifier","src":"937:5:20"},{"kind":"number","nativeSrc":"944:4:20","nodeType":"YulLiteral","src":"944:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:20","nodeType":"YulIdentifier","src":"933:3:20"},"nativeSrc":"933:16:20","nodeType":"YulFunctionCall","src":"933:16:20"},{"name":"pos","nativeSrc":"951:3:20","nodeType":"YulIdentifier","src":"951:3:20"},{"name":"length","nativeSrc":"956:6:20","nodeType":"YulIdentifier","src":"956:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:20","nodeType":"YulIdentifier","src":"898:34:20"},"nativeSrc":"898:65:20","nodeType":"YulFunctionCall","src":"898:65:20"},"nativeSrc":"898:65:20","nodeType":"YulExpressionStatement","src":"898:65:20"},{"nativeSrc":"972:46:20","nodeType":"YulAssignment","src":"972:46:20","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:20","nodeType":"YulIdentifier","src":"983:3:20"},{"arguments":[{"name":"length","nativeSrc":"1010:6:20","nodeType":"YulIdentifier","src":"1010:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:20","nodeType":"YulIdentifier","src":"988:21:20"},"nativeSrc":"988:29:20","nodeType":"YulFunctionCall","src":"988:29:20"}],"functionName":{"name":"add","nativeSrc":"979:3:20","nodeType":"YulIdentifier","src":"979:3:20"},"nativeSrc":"979:39:20","nodeType":"YulFunctionCall","src":"979:39:20"},"variableNames":[{"name":"end","nativeSrc":"972:3:20","nodeType":"YulIdentifier","src":"972:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:20","nodeType":"YulTypedName","src":"720:5:20","type":""},{"name":"pos","nativeSrc":"727:3:20","nodeType":"YulTypedName","src":"727:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:20","nodeType":"YulTypedName","src":"735:3:20","type":""}],"src":"647:377:20"},{"body":{"nativeSrc":"1148:195:20","nodeType":"YulBlock","src":"1148:195:20","statements":[{"nativeSrc":"1158:26:20","nodeType":"YulAssignment","src":"1158:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:20","nodeType":"YulIdentifier","src":"1170:9:20"},{"kind":"number","nativeSrc":"1181:2:20","nodeType":"YulLiteral","src":"1181:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:20","nodeType":"YulIdentifier","src":"1166:3:20"},"nativeSrc":"1166:18:20","nodeType":"YulFunctionCall","src":"1166:18:20"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:20","nodeType":"YulIdentifier","src":"1158:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:20","nodeType":"YulIdentifier","src":"1205:9:20"},{"kind":"number","nativeSrc":"1216:1:20","nodeType":"YulLiteral","src":"1216:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:20","nodeType":"YulIdentifier","src":"1201:3:20"},"nativeSrc":"1201:17:20","nodeType":"YulFunctionCall","src":"1201:17:20"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:20","nodeType":"YulIdentifier","src":"1224:4:20"},{"name":"headStart","nativeSrc":"1230:9:20","nodeType":"YulIdentifier","src":"1230:9:20"}],"functionName":{"name":"sub","nativeSrc":"1220:3:20","nodeType":"YulIdentifier","src":"1220:3:20"},"nativeSrc":"1220:20:20","nodeType":"YulFunctionCall","src":"1220:20:20"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:20","nodeType":"YulIdentifier","src":"1194:6:20"},"nativeSrc":"1194:47:20","nodeType":"YulFunctionCall","src":"1194:47:20"},"nativeSrc":"1194:47:20","nodeType":"YulExpressionStatement","src":"1194:47:20"},{"nativeSrc":"1250:86:20","nodeType":"YulAssignment","src":"1250:86:20","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:20","nodeType":"YulIdentifier","src":"1322:6:20"},{"name":"tail","nativeSrc":"1331:4:20","nodeType":"YulIdentifier","src":"1331:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:20","nodeType":"YulIdentifier","src":"1258:63:20"},"nativeSrc":"1258:78:20","nodeType":"YulFunctionCall","src":"1258:78:20"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:20","nodeType":"YulIdentifier","src":"1250:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:20","nodeType":"YulTypedName","src":"1120:9:20","type":""},{"name":"value0","nativeSrc":"1132:6:20","nodeType":"YulTypedName","src":"1132:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:20","nodeType":"YulTypedName","src":"1143:4:20","type":""}],"src":"1030:313:20"},{"body":{"nativeSrc":"1389:35:20","nodeType":"YulBlock","src":"1389:35:20","statements":[{"nativeSrc":"1399:19:20","nodeType":"YulAssignment","src":"1399:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:20","nodeType":"YulLiteral","src":"1415:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:20","nodeType":"YulIdentifier","src":"1409:5:20"},"nativeSrc":"1409:9:20","nodeType":"YulFunctionCall","src":"1409:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:20","nodeType":"YulIdentifier","src":"1399:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:20","nodeType":"YulTypedName","src":"1382:6:20","type":""}],"src":"1349:75:20"},{"body":{"nativeSrc":"1519:28:20","nodeType":"YulBlock","src":"1519:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:20","nodeType":"YulLiteral","src":"1536:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:20","nodeType":"YulLiteral","src":"1539:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:20","nodeType":"YulIdentifier","src":"1529:6:20"},"nativeSrc":"1529:12:20","nodeType":"YulFunctionCall","src":"1529:12:20"},"nativeSrc":"1529:12:20","nodeType":"YulExpressionStatement","src":"1529:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:20","nodeType":"YulFunctionDefinition","src":"1430:117:20"},{"body":{"nativeSrc":"1642:28:20","nodeType":"YulBlock","src":"1642:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:20","nodeType":"YulLiteral","src":"1659:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:20","nodeType":"YulLiteral","src":"1662:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:20","nodeType":"YulIdentifier","src":"1652:6:20"},"nativeSrc":"1652:12:20","nodeType":"YulFunctionCall","src":"1652:12:20"},"nativeSrc":"1652:12:20","nodeType":"YulExpressionStatement","src":"1652:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:20","nodeType":"YulFunctionDefinition","src":"1553:117:20"},{"body":{"nativeSrc":"1721:81:20","nodeType":"YulBlock","src":"1721:81:20","statements":[{"nativeSrc":"1731:65:20","nodeType":"YulAssignment","src":"1731:65:20","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:20","nodeType":"YulIdentifier","src":"1746:5:20"},{"kind":"number","nativeSrc":"1753:42:20","nodeType":"YulLiteral","src":"1753:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:20","nodeType":"YulIdentifier","src":"1742:3:20"},"nativeSrc":"1742:54:20","nodeType":"YulFunctionCall","src":"1742:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:20","nodeType":"YulIdentifier","src":"1731:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:20","nodeType":"YulTypedName","src":"1703:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:20","nodeType":"YulTypedName","src":"1713:7:20","type":""}],"src":"1676:126:20"},{"body":{"nativeSrc":"1853:51:20","nodeType":"YulBlock","src":"1853:51:20","statements":[{"nativeSrc":"1863:35:20","nodeType":"YulAssignment","src":"1863:35:20","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:20","nodeType":"YulIdentifier","src":"1892:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:20","nodeType":"YulIdentifier","src":"1874:17:20"},"nativeSrc":"1874:24:20","nodeType":"YulFunctionCall","src":"1874:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:20","nodeType":"YulIdentifier","src":"1863:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:20","nodeType":"YulTypedName","src":"1835:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:20","nodeType":"YulTypedName","src":"1845:7:20","type":""}],"src":"1808:96:20"},{"body":{"nativeSrc":"1953:79:20","nodeType":"YulBlock","src":"1953:79:20","statements":[{"body":{"nativeSrc":"2010:16:20","nodeType":"YulBlock","src":"2010:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:20","nodeType":"YulLiteral","src":"2019:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:20","nodeType":"YulLiteral","src":"2022:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:20","nodeType":"YulIdentifier","src":"2012:6:20"},"nativeSrc":"2012:12:20","nodeType":"YulFunctionCall","src":"2012:12:20"},"nativeSrc":"2012:12:20","nodeType":"YulExpressionStatement","src":"2012:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:20","nodeType":"YulIdentifier","src":"1976:5:20"},{"arguments":[{"name":"value","nativeSrc":"2001:5:20","nodeType":"YulIdentifier","src":"2001:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:20","nodeType":"YulIdentifier","src":"1983:17:20"},"nativeSrc":"1983:24:20","nodeType":"YulFunctionCall","src":"1983:24:20"}],"functionName":{"name":"eq","nativeSrc":"1973:2:20","nodeType":"YulIdentifier","src":"1973:2:20"},"nativeSrc":"1973:35:20","nodeType":"YulFunctionCall","src":"1973:35:20"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:20","nodeType":"YulIdentifier","src":"1966:6:20"},"nativeSrc":"1966:43:20","nodeType":"YulFunctionCall","src":"1966:43:20"},"nativeSrc":"1963:63:20","nodeType":"YulIf","src":"1963:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:20","nodeType":"YulTypedName","src":"1946:5:20","type":""}],"src":"1910:122:20"},{"body":{"nativeSrc":"2090:87:20","nodeType":"YulBlock","src":"2090:87:20","statements":[{"nativeSrc":"2100:29:20","nodeType":"YulAssignment","src":"2100:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:20","nodeType":"YulIdentifier","src":"2122:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:20","nodeType":"YulIdentifier","src":"2109:12:20"},"nativeSrc":"2109:20:20","nodeType":"YulFunctionCall","src":"2109:20:20"},"variableNames":[{"name":"value","nativeSrc":"2100:5:20","nodeType":"YulIdentifier","src":"2100:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:20","nodeType":"YulIdentifier","src":"2165:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:20","nodeType":"YulIdentifier","src":"2138:26:20"},"nativeSrc":"2138:33:20","nodeType":"YulFunctionCall","src":"2138:33:20"},"nativeSrc":"2138:33:20","nodeType":"YulExpressionStatement","src":"2138:33:20"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:20","nodeType":"YulTypedName","src":"2068:6:20","type":""},{"name":"end","nativeSrc":"2076:3:20","nodeType":"YulTypedName","src":"2076:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:20","nodeType":"YulTypedName","src":"2084:5:20","type":""}],"src":"2038:139:20"},{"body":{"nativeSrc":"2228:32:20","nodeType":"YulBlock","src":"2228:32:20","statements":[{"nativeSrc":"2238:16:20","nodeType":"YulAssignment","src":"2238:16:20","value":{"name":"value","nativeSrc":"2249:5:20","nodeType":"YulIdentifier","src":"2249:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:20","nodeType":"YulIdentifier","src":"2238:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:20","nodeType":"YulTypedName","src":"2210:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:20","nodeType":"YulTypedName","src":"2220:7:20","type":""}],"src":"2183:77:20"},{"body":{"nativeSrc":"2309:79:20","nodeType":"YulBlock","src":"2309:79:20","statements":[{"body":{"nativeSrc":"2366:16:20","nodeType":"YulBlock","src":"2366:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:20","nodeType":"YulLiteral","src":"2375:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:20","nodeType":"YulLiteral","src":"2378:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:20","nodeType":"YulIdentifier","src":"2368:6:20"},"nativeSrc":"2368:12:20","nodeType":"YulFunctionCall","src":"2368:12:20"},"nativeSrc":"2368:12:20","nodeType":"YulExpressionStatement","src":"2368:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:20","nodeType":"YulIdentifier","src":"2332:5:20"},{"arguments":[{"name":"value","nativeSrc":"2357:5:20","nodeType":"YulIdentifier","src":"2357:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:20","nodeType":"YulIdentifier","src":"2339:17:20"},"nativeSrc":"2339:24:20","nodeType":"YulFunctionCall","src":"2339:24:20"}],"functionName":{"name":"eq","nativeSrc":"2329:2:20","nodeType":"YulIdentifier","src":"2329:2:20"},"nativeSrc":"2329:35:20","nodeType":"YulFunctionCall","src":"2329:35:20"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:20","nodeType":"YulIdentifier","src":"2322:6:20"},"nativeSrc":"2322:43:20","nodeType":"YulFunctionCall","src":"2322:43:20"},"nativeSrc":"2319:63:20","nodeType":"YulIf","src":"2319:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:20","nodeType":"YulTypedName","src":"2302:5:20","type":""}],"src":"2266:122:20"},{"body":{"nativeSrc":"2446:87:20","nodeType":"YulBlock","src":"2446:87:20","statements":[{"nativeSrc":"2456:29:20","nodeType":"YulAssignment","src":"2456:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:20","nodeType":"YulIdentifier","src":"2478:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:20","nodeType":"YulIdentifier","src":"2465:12:20"},"nativeSrc":"2465:20:20","nodeType":"YulFunctionCall","src":"2465:20:20"},"variableNames":[{"name":"value","nativeSrc":"2456:5:20","nodeType":"YulIdentifier","src":"2456:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:20","nodeType":"YulIdentifier","src":"2521:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:20","nodeType":"YulIdentifier","src":"2494:26:20"},"nativeSrc":"2494:33:20","nodeType":"YulFunctionCall","src":"2494:33:20"},"nativeSrc":"2494:33:20","nodeType":"YulExpressionStatement","src":"2494:33:20"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:20","nodeType":"YulTypedName","src":"2424:6:20","type":""},{"name":"end","nativeSrc":"2432:3:20","nodeType":"YulTypedName","src":"2432:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:20","nodeType":"YulTypedName","src":"2440:5:20","type":""}],"src":"2394:139:20"},{"body":{"nativeSrc":"2622:391:20","nodeType":"YulBlock","src":"2622:391:20","statements":[{"body":{"nativeSrc":"2668:83:20","nodeType":"YulBlock","src":"2668:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:20","nodeType":"YulIdentifier","src":"2670:77:20"},"nativeSrc":"2670:79:20","nodeType":"YulFunctionCall","src":"2670:79:20"},"nativeSrc":"2670:79:20","nodeType":"YulExpressionStatement","src":"2670:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:20","nodeType":"YulIdentifier","src":"2643:7:20"},{"name":"headStart","nativeSrc":"2652:9:20","nodeType":"YulIdentifier","src":"2652:9:20"}],"functionName":{"name":"sub","nativeSrc":"2639:3:20","nodeType":"YulIdentifier","src":"2639:3:20"},"nativeSrc":"2639:23:20","nodeType":"YulFunctionCall","src":"2639:23:20"},{"kind":"number","nativeSrc":"2664:2:20","nodeType":"YulLiteral","src":"2664:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:20","nodeType":"YulIdentifier","src":"2635:3:20"},"nativeSrc":"2635:32:20","nodeType":"YulFunctionCall","src":"2635:32:20"},"nativeSrc":"2632:119:20","nodeType":"YulIf","src":"2632:119:20"},{"nativeSrc":"2761:117:20","nodeType":"YulBlock","src":"2761:117:20","statements":[{"nativeSrc":"2776:15:20","nodeType":"YulVariableDeclaration","src":"2776:15:20","value":{"kind":"number","nativeSrc":"2790:1:20","nodeType":"YulLiteral","src":"2790:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:20","nodeType":"YulTypedName","src":"2780:6:20","type":""}]},{"nativeSrc":"2805:63:20","nodeType":"YulAssignment","src":"2805:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:20","nodeType":"YulIdentifier","src":"2840:9:20"},{"name":"offset","nativeSrc":"2851:6:20","nodeType":"YulIdentifier","src":"2851:6:20"}],"functionName":{"name":"add","nativeSrc":"2836:3:20","nodeType":"YulIdentifier","src":"2836:3:20"},"nativeSrc":"2836:22:20","nodeType":"YulFunctionCall","src":"2836:22:20"},{"name":"dataEnd","nativeSrc":"2860:7:20","nodeType":"YulIdentifier","src":"2860:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:20","nodeType":"YulIdentifier","src":"2815:20:20"},"nativeSrc":"2815:53:20","nodeType":"YulFunctionCall","src":"2815:53:20"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:20","nodeType":"YulIdentifier","src":"2805:6:20"}]}]},{"nativeSrc":"2888:118:20","nodeType":"YulBlock","src":"2888:118:20","statements":[{"nativeSrc":"2903:16:20","nodeType":"YulVariableDeclaration","src":"2903:16:20","value":{"kind":"number","nativeSrc":"2917:2:20","nodeType":"YulLiteral","src":"2917:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:20","nodeType":"YulTypedName","src":"2907:6:20","type":""}]},{"nativeSrc":"2933:63:20","nodeType":"YulAssignment","src":"2933:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:20","nodeType":"YulIdentifier","src":"2968:9:20"},{"name":"offset","nativeSrc":"2979:6:20","nodeType":"YulIdentifier","src":"2979:6:20"}],"functionName":{"name":"add","nativeSrc":"2964:3:20","nodeType":"YulIdentifier","src":"2964:3:20"},"nativeSrc":"2964:22:20","nodeType":"YulFunctionCall","src":"2964:22:20"},{"name":"dataEnd","nativeSrc":"2988:7:20","nodeType":"YulIdentifier","src":"2988:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:20","nodeType":"YulIdentifier","src":"2943:20:20"},"nativeSrc":"2943:53:20","nodeType":"YulFunctionCall","src":"2943:53:20"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:20","nodeType":"YulIdentifier","src":"2933:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:20","nodeType":"YulTypedName","src":"2584:9:20","type":""},{"name":"dataEnd","nativeSrc":"2595:7:20","nodeType":"YulTypedName","src":"2595:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:20","nodeType":"YulTypedName","src":"2607:6:20","type":""},{"name":"value1","nativeSrc":"2615:6:20","nodeType":"YulTypedName","src":"2615:6:20","type":""}],"src":"2539:474:20"},{"body":{"nativeSrc":"3061:48:20","nodeType":"YulBlock","src":"3061:48:20","statements":[{"nativeSrc":"3071:32:20","nodeType":"YulAssignment","src":"3071:32:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:20","nodeType":"YulIdentifier","src":"3096:5:20"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:20","nodeType":"YulIdentifier","src":"3089:6:20"},"nativeSrc":"3089:13:20","nodeType":"YulFunctionCall","src":"3089:13:20"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:20","nodeType":"YulIdentifier","src":"3082:6:20"},"nativeSrc":"3082:21:20","nodeType":"YulFunctionCall","src":"3082:21:20"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:20","nodeType":"YulIdentifier","src":"3071:7:20"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:20","nodeType":"YulTypedName","src":"3043:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:20","nodeType":"YulTypedName","src":"3053:7:20","type":""}],"src":"3019:90:20"},{"body":{"nativeSrc":"3174:50:20","nodeType":"YulBlock","src":"3174:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:20","nodeType":"YulIdentifier","src":"3191:3:20"},{"arguments":[{"name":"value","nativeSrc":"3211:5:20","nodeType":"YulIdentifier","src":"3211:5:20"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:20","nodeType":"YulIdentifier","src":"3196:14:20"},"nativeSrc":"3196:21:20","nodeType":"YulFunctionCall","src":"3196:21:20"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:20","nodeType":"YulIdentifier","src":"3184:6:20"},"nativeSrc":"3184:34:20","nodeType":"YulFunctionCall","src":"3184:34:20"},"nativeSrc":"3184:34:20","nodeType":"YulExpressionStatement","src":"3184:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:20","nodeType":"YulTypedName","src":"3162:5:20","type":""},{"name":"pos","nativeSrc":"3169:3:20","nodeType":"YulTypedName","src":"3169:3:20","type":""}],"src":"3115:109:20"},{"body":{"nativeSrc":"3322:118:20","nodeType":"YulBlock","src":"3322:118:20","statements":[{"nativeSrc":"3332:26:20","nodeType":"YulAssignment","src":"3332:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:20","nodeType":"YulIdentifier","src":"3344:9:20"},{"kind":"number","nativeSrc":"3355:2:20","nodeType":"YulLiteral","src":"3355:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:20","nodeType":"YulIdentifier","src":"3340:3:20"},"nativeSrc":"3340:18:20","nodeType":"YulFunctionCall","src":"3340:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:20","nodeType":"YulIdentifier","src":"3332:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:20","nodeType":"YulIdentifier","src":"3406:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:20","nodeType":"YulIdentifier","src":"3419:9:20"},{"kind":"number","nativeSrc":"3430:1:20","nodeType":"YulLiteral","src":"3430:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:20","nodeType":"YulIdentifier","src":"3415:3:20"},"nativeSrc":"3415:17:20","nodeType":"YulFunctionCall","src":"3415:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:20","nodeType":"YulIdentifier","src":"3368:37:20"},"nativeSrc":"3368:65:20","nodeType":"YulFunctionCall","src":"3368:65:20"},"nativeSrc":"3368:65:20","nodeType":"YulExpressionStatement","src":"3368:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:20","nodeType":"YulTypedName","src":"3294:9:20","type":""},{"name":"value0","nativeSrc":"3306:6:20","nodeType":"YulTypedName","src":"3306:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:20","nodeType":"YulTypedName","src":"3317:4:20","type":""}],"src":"3230:210:20"},{"body":{"nativeSrc":"3511:53:20","nodeType":"YulBlock","src":"3511:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:20","nodeType":"YulIdentifier","src":"3528:3:20"},{"arguments":[{"name":"value","nativeSrc":"3551:5:20","nodeType":"YulIdentifier","src":"3551:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:20","nodeType":"YulIdentifier","src":"3533:17:20"},"nativeSrc":"3533:24:20","nodeType":"YulFunctionCall","src":"3533:24:20"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:20","nodeType":"YulIdentifier","src":"3521:6:20"},"nativeSrc":"3521:37:20","nodeType":"YulFunctionCall","src":"3521:37:20"},"nativeSrc":"3521:37:20","nodeType":"YulExpressionStatement","src":"3521:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:20","nodeType":"YulTypedName","src":"3499:5:20","type":""},{"name":"pos","nativeSrc":"3506:3:20","nodeType":"YulTypedName","src":"3506:3:20","type":""}],"src":"3446:118:20"},{"body":{"nativeSrc":"3668:124:20","nodeType":"YulBlock","src":"3668:124:20","statements":[{"nativeSrc":"3678:26:20","nodeType":"YulAssignment","src":"3678:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:20","nodeType":"YulIdentifier","src":"3690:9:20"},{"kind":"number","nativeSrc":"3701:2:20","nodeType":"YulLiteral","src":"3701:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:20","nodeType":"YulIdentifier","src":"3686:3:20"},"nativeSrc":"3686:18:20","nodeType":"YulFunctionCall","src":"3686:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:20","nodeType":"YulIdentifier","src":"3678:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:20","nodeType":"YulIdentifier","src":"3758:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:20","nodeType":"YulIdentifier","src":"3771:9:20"},{"kind":"number","nativeSrc":"3782:1:20","nodeType":"YulLiteral","src":"3782:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:20","nodeType":"YulIdentifier","src":"3767:3:20"},"nativeSrc":"3767:17:20","nodeType":"YulFunctionCall","src":"3767:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:20","nodeType":"YulIdentifier","src":"3714:43:20"},"nativeSrc":"3714:71:20","nodeType":"YulFunctionCall","src":"3714:71:20"},"nativeSrc":"3714:71:20","nodeType":"YulExpressionStatement","src":"3714:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:20","nodeType":"YulTypedName","src":"3640:9:20","type":""},{"name":"value0","nativeSrc":"3652:6:20","nodeType":"YulTypedName","src":"3652:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:20","nodeType":"YulTypedName","src":"3663:4:20","type":""}],"src":"3570:222:20"},{"body":{"nativeSrc":"3898:519:20","nodeType":"YulBlock","src":"3898:519:20","statements":[{"body":{"nativeSrc":"3944:83:20","nodeType":"YulBlock","src":"3944:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:20","nodeType":"YulIdentifier","src":"3946:77:20"},"nativeSrc":"3946:79:20","nodeType":"YulFunctionCall","src":"3946:79:20"},"nativeSrc":"3946:79:20","nodeType":"YulExpressionStatement","src":"3946:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:20","nodeType":"YulIdentifier","src":"3919:7:20"},{"name":"headStart","nativeSrc":"3928:9:20","nodeType":"YulIdentifier","src":"3928:9:20"}],"functionName":{"name":"sub","nativeSrc":"3915:3:20","nodeType":"YulIdentifier","src":"3915:3:20"},"nativeSrc":"3915:23:20","nodeType":"YulFunctionCall","src":"3915:23:20"},{"kind":"number","nativeSrc":"3940:2:20","nodeType":"YulLiteral","src":"3940:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:20","nodeType":"YulIdentifier","src":"3911:3:20"},"nativeSrc":"3911:32:20","nodeType":"YulFunctionCall","src":"3911:32:20"},"nativeSrc":"3908:119:20","nodeType":"YulIf","src":"3908:119:20"},{"nativeSrc":"4037:117:20","nodeType":"YulBlock","src":"4037:117:20","statements":[{"nativeSrc":"4052:15:20","nodeType":"YulVariableDeclaration","src":"4052:15:20","value":{"kind":"number","nativeSrc":"4066:1:20","nodeType":"YulLiteral","src":"4066:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:20","nodeType":"YulTypedName","src":"4056:6:20","type":""}]},{"nativeSrc":"4081:63:20","nodeType":"YulAssignment","src":"4081:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:20","nodeType":"YulIdentifier","src":"4116:9:20"},{"name":"offset","nativeSrc":"4127:6:20","nodeType":"YulIdentifier","src":"4127:6:20"}],"functionName":{"name":"add","nativeSrc":"4112:3:20","nodeType":"YulIdentifier","src":"4112:3:20"},"nativeSrc":"4112:22:20","nodeType":"YulFunctionCall","src":"4112:22:20"},{"name":"dataEnd","nativeSrc":"4136:7:20","nodeType":"YulIdentifier","src":"4136:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:20","nodeType":"YulIdentifier","src":"4091:20:20"},"nativeSrc":"4091:53:20","nodeType":"YulFunctionCall","src":"4091:53:20"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:20","nodeType":"YulIdentifier","src":"4081:6:20"}]}]},{"nativeSrc":"4164:118:20","nodeType":"YulBlock","src":"4164:118:20","statements":[{"nativeSrc":"4179:16:20","nodeType":"YulVariableDeclaration","src":"4179:16:20","value":{"kind":"number","nativeSrc":"4193:2:20","nodeType":"YulLiteral","src":"4193:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:20","nodeType":"YulTypedName","src":"4183:6:20","type":""}]},{"nativeSrc":"4209:63:20","nodeType":"YulAssignment","src":"4209:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:20","nodeType":"YulIdentifier","src":"4244:9:20"},{"name":"offset","nativeSrc":"4255:6:20","nodeType":"YulIdentifier","src":"4255:6:20"}],"functionName":{"name":"add","nativeSrc":"4240:3:20","nodeType":"YulIdentifier","src":"4240:3:20"},"nativeSrc":"4240:22:20","nodeType":"YulFunctionCall","src":"4240:22:20"},{"name":"dataEnd","nativeSrc":"4264:7:20","nodeType":"YulIdentifier","src":"4264:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:20","nodeType":"YulIdentifier","src":"4219:20:20"},"nativeSrc":"4219:53:20","nodeType":"YulFunctionCall","src":"4219:53:20"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:20","nodeType":"YulIdentifier","src":"4209:6:20"}]}]},{"nativeSrc":"4292:118:20","nodeType":"YulBlock","src":"4292:118:20","statements":[{"nativeSrc":"4307:16:20","nodeType":"YulVariableDeclaration","src":"4307:16:20","value":{"kind":"number","nativeSrc":"4321:2:20","nodeType":"YulLiteral","src":"4321:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:20","nodeType":"YulTypedName","src":"4311:6:20","type":""}]},{"nativeSrc":"4337:63:20","nodeType":"YulAssignment","src":"4337:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:20","nodeType":"YulIdentifier","src":"4372:9:20"},{"name":"offset","nativeSrc":"4383:6:20","nodeType":"YulIdentifier","src":"4383:6:20"}],"functionName":{"name":"add","nativeSrc":"4368:3:20","nodeType":"YulIdentifier","src":"4368:3:20"},"nativeSrc":"4368:22:20","nodeType":"YulFunctionCall","src":"4368:22:20"},{"name":"dataEnd","nativeSrc":"4392:7:20","nodeType":"YulIdentifier","src":"4392:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:20","nodeType":"YulIdentifier","src":"4347:20:20"},"nativeSrc":"4347:53:20","nodeType":"YulFunctionCall","src":"4347:53:20"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:20","nodeType":"YulIdentifier","src":"4337:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:20","nodeType":"YulTypedName","src":"3852:9:20","type":""},{"name":"dataEnd","nativeSrc":"3863:7:20","nodeType":"YulTypedName","src":"3863:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:20","nodeType":"YulTypedName","src":"3875:6:20","type":""},{"name":"value1","nativeSrc":"3883:6:20","nodeType":"YulTypedName","src":"3883:6:20","type":""},{"name":"value2","nativeSrc":"3891:6:20","nodeType":"YulTypedName","src":"3891:6:20","type":""}],"src":"3798:619:20"},{"body":{"nativeSrc":"4466:43:20","nodeType":"YulBlock","src":"4466:43:20","statements":[{"nativeSrc":"4476:27:20","nodeType":"YulAssignment","src":"4476:27:20","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:20","nodeType":"YulIdentifier","src":"4491:5:20"},{"kind":"number","nativeSrc":"4498:4:20","nodeType":"YulLiteral","src":"4498:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:20","nodeType":"YulIdentifier","src":"4487:3:20"},"nativeSrc":"4487:16:20","nodeType":"YulFunctionCall","src":"4487:16:20"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:20","nodeType":"YulIdentifier","src":"4476:7:20"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:20","nodeType":"YulTypedName","src":"4448:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:20","nodeType":"YulTypedName","src":"4458:7:20","type":""}],"src":"4423:86:20"},{"body":{"nativeSrc":"4576:51:20","nodeType":"YulBlock","src":"4576:51:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:20","nodeType":"YulIdentifier","src":"4593:3:20"},{"arguments":[{"name":"value","nativeSrc":"4614:5:20","nodeType":"YulIdentifier","src":"4614:5:20"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:20","nodeType":"YulIdentifier","src":"4598:15:20"},"nativeSrc":"4598:22:20","nodeType":"YulFunctionCall","src":"4598:22:20"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:20","nodeType":"YulIdentifier","src":"4586:6:20"},"nativeSrc":"4586:35:20","nodeType":"YulFunctionCall","src":"4586:35:20"},"nativeSrc":"4586:35:20","nodeType":"YulExpressionStatement","src":"4586:35:20"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:20","nodeType":"YulTypedName","src":"4564:5:20","type":""},{"name":"pos","nativeSrc":"4571:3:20","nodeType":"YulTypedName","src":"4571:3:20","type":""}],"src":"4515:112:20"},{"body":{"nativeSrc":"4727:120:20","nodeType":"YulBlock","src":"4727:120:20","statements":[{"nativeSrc":"4737:26:20","nodeType":"YulAssignment","src":"4737:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:20","nodeType":"YulIdentifier","src":"4749:9:20"},{"kind":"number","nativeSrc":"4760:2:20","nodeType":"YulLiteral","src":"4760:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:20","nodeType":"YulIdentifier","src":"4745:3:20"},"nativeSrc":"4745:18:20","nodeType":"YulFunctionCall","src":"4745:18:20"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:20","nodeType":"YulIdentifier","src":"4737:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:20","nodeType":"YulIdentifier","src":"4813:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:20","nodeType":"YulIdentifier","src":"4826:9:20"},{"kind":"number","nativeSrc":"4837:1:20","nodeType":"YulLiteral","src":"4837:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:20","nodeType":"YulIdentifier","src":"4822:3:20"},"nativeSrc":"4822:17:20","nodeType":"YulFunctionCall","src":"4822:17:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:20","nodeType":"YulIdentifier","src":"4773:39:20"},"nativeSrc":"4773:67:20","nodeType":"YulFunctionCall","src":"4773:67:20"},"nativeSrc":"4773:67:20","nodeType":"YulExpressionStatement","src":"4773:67:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:20","nodeType":"YulTypedName","src":"4699:9:20","type":""},{"name":"value0","nativeSrc":"4711:6:20","nodeType":"YulTypedName","src":"4711:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:20","nodeType":"YulTypedName","src":"4722:4:20","type":""}],"src":"4633:214:20"},{"body":{"nativeSrc":"4898:32:20","nodeType":"YulBlock","src":"4898:32:20","statements":[{"nativeSrc":"4908:16:20","nodeType":"YulAssignment","src":"4908:16:20","value":{"name":"value","nativeSrc":"4919:5:20","nodeType":"YulIdentifier","src":"4919:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"4908:7:20","nodeType":"YulIdentifier","src":"4908:7:20"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4853:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4880:5:20","nodeType":"YulTypedName","src":"4880:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4890:7:20","nodeType":"YulTypedName","src":"4890:7:20","type":""}],"src":"4853:77:20"},{"body":{"nativeSrc":"5001:53:20","nodeType":"YulBlock","src":"5001:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5018:3:20","nodeType":"YulIdentifier","src":"5018:3:20"},{"arguments":[{"name":"value","nativeSrc":"5041:5:20","nodeType":"YulIdentifier","src":"5041:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5023:17:20","nodeType":"YulIdentifier","src":"5023:17:20"},"nativeSrc":"5023:24:20","nodeType":"YulFunctionCall","src":"5023:24:20"}],"functionName":{"name":"mstore","nativeSrc":"5011:6:20","nodeType":"YulIdentifier","src":"5011:6:20"},"nativeSrc":"5011:37:20","nodeType":"YulFunctionCall","src":"5011:37:20"},"nativeSrc":"5011:37:20","nodeType":"YulExpressionStatement","src":"5011:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4936:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4989:5:20","nodeType":"YulTypedName","src":"4989:5:20","type":""},{"name":"pos","nativeSrc":"4996:3:20","nodeType":"YulTypedName","src":"4996:3:20","type":""}],"src":"4936:118:20"},{"body":{"nativeSrc":"5158:124:20","nodeType":"YulBlock","src":"5158:124:20","statements":[{"nativeSrc":"5168:26:20","nodeType":"YulAssignment","src":"5168:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5180:9:20","nodeType":"YulIdentifier","src":"5180:9:20"},{"kind":"number","nativeSrc":"5191:2:20","nodeType":"YulLiteral","src":"5191:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5176:3:20","nodeType":"YulIdentifier","src":"5176:3:20"},"nativeSrc":"5176:18:20","nodeType":"YulFunctionCall","src":"5176:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5168:4:20","nodeType":"YulIdentifier","src":"5168:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5248:6:20","nodeType":"YulIdentifier","src":"5248:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"5261:9:20","nodeType":"YulIdentifier","src":"5261:9:20"},{"kind":"number","nativeSrc":"5272:1:20","nodeType":"YulLiteral","src":"5272:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5257:3:20","nodeType":"YulIdentifier","src":"5257:3:20"},"nativeSrc":"5257:17:20","nodeType":"YulFunctionCall","src":"5257:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5204:43:20","nodeType":"YulIdentifier","src":"5204:43:20"},"nativeSrc":"5204:71:20","nodeType":"YulFunctionCall","src":"5204:71:20"},"nativeSrc":"5204:71:20","nodeType":"YulExpressionStatement","src":"5204:71:20"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5060:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5130:9:20","nodeType":"YulTypedName","src":"5130:9:20","type":""},{"name":"value0","nativeSrc":"5142:6:20","nodeType":"YulTypedName","src":"5142:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5153:4:20","nodeType":"YulTypedName","src":"5153:4:20","type":""}],"src":"5060:222:20"},{"body":{"nativeSrc":"5354:263:20","nodeType":"YulBlock","src":"5354:263:20","statements":[{"body":{"nativeSrc":"5400:83:20","nodeType":"YulBlock","src":"5400:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5402:77:20","nodeType":"YulIdentifier","src":"5402:77:20"},"nativeSrc":"5402:79:20","nodeType":"YulFunctionCall","src":"5402:79:20"},"nativeSrc":"5402:79:20","nodeType":"YulExpressionStatement","src":"5402:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5375:7:20","nodeType":"YulIdentifier","src":"5375:7:20"},{"name":"headStart","nativeSrc":"5384:9:20","nodeType":"YulIdentifier","src":"5384:9:20"}],"functionName":{"name":"sub","nativeSrc":"5371:3:20","nodeType":"YulIdentifier","src":"5371:3:20"},"nativeSrc":"5371:23:20","nodeType":"YulFunctionCall","src":"5371:23:20"},{"kind":"number","nativeSrc":"5396:2:20","nodeType":"YulLiteral","src":"5396:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5367:3:20","nodeType":"YulIdentifier","src":"5367:3:20"},"nativeSrc":"5367:32:20","nodeType":"YulFunctionCall","src":"5367:32:20"},"nativeSrc":"5364:119:20","nodeType":"YulIf","src":"5364:119:20"},{"nativeSrc":"5493:117:20","nodeType":"YulBlock","src":"5493:117:20","statements":[{"nativeSrc":"5508:15:20","nodeType":"YulVariableDeclaration","src":"5508:15:20","value":{"kind":"number","nativeSrc":"5522:1:20","nodeType":"YulLiteral","src":"5522:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5512:6:20","nodeType":"YulTypedName","src":"5512:6:20","type":""}]},{"nativeSrc":"5537:63:20","nodeType":"YulAssignment","src":"5537:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5572:9:20","nodeType":"YulIdentifier","src":"5572:9:20"},{"name":"offset","nativeSrc":"5583:6:20","nodeType":"YulIdentifier","src":"5583:6:20"}],"functionName":{"name":"add","nativeSrc":"5568:3:20","nodeType":"YulIdentifier","src":"5568:3:20"},"nativeSrc":"5568:22:20","nodeType":"YulFunctionCall","src":"5568:22:20"},{"name":"dataEnd","nativeSrc":"5592:7:20","nodeType":"YulIdentifier","src":"5592:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5547:20:20","nodeType":"YulIdentifier","src":"5547:20:20"},"nativeSrc":"5547:53:20","nodeType":"YulFunctionCall","src":"5547:53:20"},"variableNames":[{"name":"value0","nativeSrc":"5537:6:20","nodeType":"YulIdentifier","src":"5537:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5288:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5324:9:20","nodeType":"YulTypedName","src":"5324:9:20","type":""},{"name":"dataEnd","nativeSrc":"5335:7:20","nodeType":"YulTypedName","src":"5335:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5347:6:20","nodeType":"YulTypedName","src":"5347:6:20","type":""}],"src":"5288:329:20"},{"body":{"nativeSrc":"5667:105:20","nodeType":"YulBlock","src":"5667:105:20","statements":[{"nativeSrc":"5677:89:20","nodeType":"YulAssignment","src":"5677:89:20","value":{"arguments":[{"name":"value","nativeSrc":"5692:5:20","nodeType":"YulIdentifier","src":"5692:5:20"},{"kind":"number","nativeSrc":"5699:66:20","nodeType":"YulLiteral","src":"5699:66:20","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"5688:3:20","nodeType":"YulIdentifier","src":"5688:3:20"},"nativeSrc":"5688:78:20","nodeType":"YulFunctionCall","src":"5688:78:20"},"variableNames":[{"name":"cleaned","nativeSrc":"5677:7:20","nodeType":"YulIdentifier","src":"5677:7:20"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"5623:149:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5649:5:20","nodeType":"YulTypedName","src":"5649:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5659:7:20","nodeType":"YulTypedName","src":"5659:7:20","type":""}],"src":"5623:149:20"},{"body":{"nativeSrc":"5841:52:20","nodeType":"YulBlock","src":"5841:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5858:3:20","nodeType":"YulIdentifier","src":"5858:3:20"},{"arguments":[{"name":"value","nativeSrc":"5880:5:20","nodeType":"YulIdentifier","src":"5880:5:20"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"5863:16:20","nodeType":"YulIdentifier","src":"5863:16:20"},"nativeSrc":"5863:23:20","nodeType":"YulFunctionCall","src":"5863:23:20"}],"functionName":{"name":"mstore","nativeSrc":"5851:6:20","nodeType":"YulIdentifier","src":"5851:6:20"},"nativeSrc":"5851:36:20","nodeType":"YulFunctionCall","src":"5851:36:20"},"nativeSrc":"5851:36:20","nodeType":"YulExpressionStatement","src":"5851:36:20"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"5778:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5829:5:20","nodeType":"YulTypedName","src":"5829:5:20","type":""},{"name":"pos","nativeSrc":"5836:3:20","nodeType":"YulTypedName","src":"5836:3:20","type":""}],"src":"5778:115:20"},{"body":{"nativeSrc":"5964:53:20","nodeType":"YulBlock","src":"5964:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5981:3:20","nodeType":"YulIdentifier","src":"5981:3:20"},{"arguments":[{"name":"value","nativeSrc":"6004:5:20","nodeType":"YulIdentifier","src":"6004:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5986:17:20","nodeType":"YulIdentifier","src":"5986:17:20"},"nativeSrc":"5986:24:20","nodeType":"YulFunctionCall","src":"5986:24:20"}],"functionName":{"name":"mstore","nativeSrc":"5974:6:20","nodeType":"YulIdentifier","src":"5974:6:20"},"nativeSrc":"5974:37:20","nodeType":"YulFunctionCall","src":"5974:37:20"},"nativeSrc":"5974:37:20","nodeType":"YulExpressionStatement","src":"5974:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5899:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5952:5:20","nodeType":"YulTypedName","src":"5952:5:20","type":""},{"name":"pos","nativeSrc":"5959:3:20","nodeType":"YulTypedName","src":"5959:3:20","type":""}],"src":"5899:118:20"},{"body":{"nativeSrc":"6097:40:20","nodeType":"YulBlock","src":"6097:40:20","statements":[{"nativeSrc":"6108:22:20","nodeType":"YulAssignment","src":"6108:22:20","value":{"arguments":[{"name":"value","nativeSrc":"6124:5:20","nodeType":"YulIdentifier","src":"6124:5:20"}],"functionName":{"name":"mload","nativeSrc":"6118:5:20","nodeType":"YulIdentifier","src":"6118:5:20"},"nativeSrc":"6118:12:20","nodeType":"YulFunctionCall","src":"6118:12:20"},"variableNames":[{"name":"length","nativeSrc":"6108:6:20","nodeType":"YulIdentifier","src":"6108:6:20"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6023:114:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6080:5:20","nodeType":"YulTypedName","src":"6080:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6090:6:20","nodeType":"YulTypedName","src":"6090:6:20","type":""}],"src":"6023:114:20"},{"body":{"nativeSrc":"6254:73:20","nodeType":"YulBlock","src":"6254:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6271:3:20","nodeType":"YulIdentifier","src":"6271:3:20"},{"name":"length","nativeSrc":"6276:6:20","nodeType":"YulIdentifier","src":"6276:6:20"}],"functionName":{"name":"mstore","nativeSrc":"6264:6:20","nodeType":"YulIdentifier","src":"6264:6:20"},"nativeSrc":"6264:19:20","nodeType":"YulFunctionCall","src":"6264:19:20"},"nativeSrc":"6264:19:20","nodeType":"YulExpressionStatement","src":"6264:19:20"},{"nativeSrc":"6292:29:20","nodeType":"YulAssignment","src":"6292:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"6311:3:20","nodeType":"YulIdentifier","src":"6311:3:20"},{"kind":"number","nativeSrc":"6316:4:20","nodeType":"YulLiteral","src":"6316:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6307:3:20","nodeType":"YulIdentifier","src":"6307:3:20"},"nativeSrc":"6307:14:20","nodeType":"YulFunctionCall","src":"6307:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"6292:11:20","nodeType":"YulIdentifier","src":"6292:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6143:184:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6226:3:20","nodeType":"YulTypedName","src":"6226:3:20","type":""},{"name":"length","nativeSrc":"6231:6:20","nodeType":"YulTypedName","src":"6231:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6242:11:20","nodeType":"YulTypedName","src":"6242:11:20","type":""}],"src":"6143:184:20"},{"body":{"nativeSrc":"6405:60:20","nodeType":"YulBlock","src":"6405:60:20","statements":[{"nativeSrc":"6415:11:20","nodeType":"YulAssignment","src":"6415:11:20","value":{"name":"ptr","nativeSrc":"6423:3:20","nodeType":"YulIdentifier","src":"6423:3:20"},"variableNames":[{"name":"data","nativeSrc":"6415:4:20","nodeType":"YulIdentifier","src":"6415:4:20"}]},{"nativeSrc":"6436:22:20","nodeType":"YulAssignment","src":"6436:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"6448:3:20","nodeType":"YulIdentifier","src":"6448:3:20"},{"kind":"number","nativeSrc":"6453:4:20","nodeType":"YulLiteral","src":"6453:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6444:3:20","nodeType":"YulIdentifier","src":"6444:3:20"},"nativeSrc":"6444:14:20","nodeType":"YulFunctionCall","src":"6444:14:20"},"variableNames":[{"name":"data","nativeSrc":"6436:4:20","nodeType":"YulIdentifier","src":"6436:4:20"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6333:132:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6392:3:20","nodeType":"YulTypedName","src":"6392:3:20","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6400:4:20","nodeType":"YulTypedName","src":"6400:4:20","type":""}],"src":"6333:132:20"},{"body":{"nativeSrc":"6526:53:20","nodeType":"YulBlock","src":"6526:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6543:3:20","nodeType":"YulIdentifier","src":"6543:3:20"},{"arguments":[{"name":"value","nativeSrc":"6566:5:20","nodeType":"YulIdentifier","src":"6566:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6548:17:20","nodeType":"YulIdentifier","src":"6548:17:20"},"nativeSrc":"6548:24:20","nodeType":"YulFunctionCall","src":"6548:24:20"}],"functionName":{"name":"mstore","nativeSrc":"6536:6:20","nodeType":"YulIdentifier","src":"6536:6:20"},"nativeSrc":"6536:37:20","nodeType":"YulFunctionCall","src":"6536:37:20"},"nativeSrc":"6536:37:20","nodeType":"YulExpressionStatement","src":"6536:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6471:108:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6514:5:20","nodeType":"YulTypedName","src":"6514:5:20","type":""},{"name":"pos","nativeSrc":"6521:3:20","nodeType":"YulTypedName","src":"6521:3:20","type":""}],"src":"6471:108:20"},{"body":{"nativeSrc":"6665:99:20","nodeType":"YulBlock","src":"6665:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"6709:6:20","nodeType":"YulIdentifier","src":"6709:6:20"},{"name":"pos","nativeSrc":"6717:3:20","nodeType":"YulIdentifier","src":"6717:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6675:33:20","nodeType":"YulIdentifier","src":"6675:33:20"},"nativeSrc":"6675:46:20","nodeType":"YulFunctionCall","src":"6675:46:20"},"nativeSrc":"6675:46:20","nodeType":"YulExpressionStatement","src":"6675:46:20"},{"nativeSrc":"6730:28:20","nodeType":"YulAssignment","src":"6730:28:20","value":{"arguments":[{"name":"pos","nativeSrc":"6748:3:20","nodeType":"YulIdentifier","src":"6748:3:20"},{"kind":"number","nativeSrc":"6753:4:20","nodeType":"YulLiteral","src":"6753:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6744:3:20","nodeType":"YulIdentifier","src":"6744:3:20"},"nativeSrc":"6744:14:20","nodeType":"YulFunctionCall","src":"6744:14:20"},"variableNames":[{"name":"updatedPos","nativeSrc":"6730:10:20","nodeType":"YulIdentifier","src":"6730:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"6585:179:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6638:6:20","nodeType":"YulTypedName","src":"6638:6:20","type":""},{"name":"pos","nativeSrc":"6646:3:20","nodeType":"YulTypedName","src":"6646:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6654:10:20","nodeType":"YulTypedName","src":"6654:10:20","type":""}],"src":"6585:179:20"},{"body":{"nativeSrc":"6845:38:20","nodeType":"YulBlock","src":"6845:38:20","statements":[{"nativeSrc":"6855:22:20","nodeType":"YulAssignment","src":"6855:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"6867:3:20","nodeType":"YulIdentifier","src":"6867:3:20"},{"kind":"number","nativeSrc":"6872:4:20","nodeType":"YulLiteral","src":"6872:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6863:3:20","nodeType":"YulIdentifier","src":"6863:3:20"},"nativeSrc":"6863:14:20","nodeType":"YulFunctionCall","src":"6863:14:20"},"variableNames":[{"name":"next","nativeSrc":"6855:4:20","nodeType":"YulIdentifier","src":"6855:4:20"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6770:113:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6832:3:20","nodeType":"YulTypedName","src":"6832:3:20","type":""}],"returnVariables":[{"name":"next","nativeSrc":"6840:4:20","nodeType":"YulTypedName","src":"6840:4:20","type":""}],"src":"6770:113:20"},{"body":{"nativeSrc":"7043:608:20","nodeType":"YulBlock","src":"7043:608:20","statements":[{"nativeSrc":"7053:68:20","nodeType":"YulVariableDeclaration","src":"7053:68:20","value":{"arguments":[{"name":"value","nativeSrc":"7115:5:20","nodeType":"YulIdentifier","src":"7115:5:20"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7067:47:20","nodeType":"YulIdentifier","src":"7067:47:20"},"nativeSrc":"7067:54:20","nodeType":"YulFunctionCall","src":"7067:54:20"},"variables":[{"name":"length","nativeSrc":"7057:6:20","nodeType":"YulTypedName","src":"7057:6:20","type":""}]},{"nativeSrc":"7130:93:20","nodeType":"YulAssignment","src":"7130:93:20","value":{"arguments":[{"name":"pos","nativeSrc":"7211:3:20","nodeType":"YulIdentifier","src":"7211:3:20"},{"name":"length","nativeSrc":"7216:6:20","nodeType":"YulIdentifier","src":"7216:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7137:73:20","nodeType":"YulIdentifier","src":"7137:73:20"},"nativeSrc":"7137:86:20","nodeType":"YulFunctionCall","src":"7137:86:20"},"variableNames":[{"name":"pos","nativeSrc":"7130:3:20","nodeType":"YulIdentifier","src":"7130:3:20"}]},{"nativeSrc":"7232:71:20","nodeType":"YulVariableDeclaration","src":"7232:71:20","value":{"arguments":[{"name":"value","nativeSrc":"7297:5:20","nodeType":"YulIdentifier","src":"7297:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7247:49:20","nodeType":"YulIdentifier","src":"7247:49:20"},"nativeSrc":"7247:56:20","nodeType":"YulFunctionCall","src":"7247:56:20"},"variables":[{"name":"baseRef","nativeSrc":"7236:7:20","nodeType":"YulTypedName","src":"7236:7:20","type":""}]},{"nativeSrc":"7312:21:20","nodeType":"YulVariableDeclaration","src":"7312:21:20","value":{"name":"baseRef","nativeSrc":"7326:7:20","nodeType":"YulIdentifier","src":"7326:7:20"},"variables":[{"name":"srcPtr","nativeSrc":"7316:6:20","nodeType":"YulTypedName","src":"7316:6:20","type":""}]},{"body":{"nativeSrc":"7402:224:20","nodeType":"YulBlock","src":"7402:224:20","statements":[{"nativeSrc":"7416:34:20","nodeType":"YulVariableDeclaration","src":"7416:34:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7443:6:20","nodeType":"YulIdentifier","src":"7443:6:20"}],"functionName":{"name":"mload","nativeSrc":"7437:5:20","nodeType":"YulIdentifier","src":"7437:5:20"},"nativeSrc":"7437:13:20","nodeType":"YulFunctionCall","src":"7437:13:20"},"variables":[{"name":"elementValue0","nativeSrc":"7420:13:20","nodeType":"YulTypedName","src":"7420:13:20","type":""}]},{"nativeSrc":"7463:70:20","nodeType":"YulAssignment","src":"7463:70:20","value":{"arguments":[{"name":"elementValue0","nativeSrc":"7514:13:20","nodeType":"YulIdentifier","src":"7514:13:20"},{"name":"pos","nativeSrc":"7529:3:20","nodeType":"YulIdentifier","src":"7529:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7470:43:20","nodeType":"YulIdentifier","src":"7470:43:20"},"nativeSrc":"7470:63:20","nodeType":"YulFunctionCall","src":"7470:63:20"},"variableNames":[{"name":"pos","nativeSrc":"7463:3:20","nodeType":"YulIdentifier","src":"7463:3:20"}]},{"nativeSrc":"7546:70:20","nodeType":"YulAssignment","src":"7546:70:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7609:6:20","nodeType":"YulIdentifier","src":"7609:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7556:52:20","nodeType":"YulIdentifier","src":"7556:52:20"},"nativeSrc":"7556:60:20","nodeType":"YulFunctionCall","src":"7556:60:20"},"variableNames":[{"name":"srcPtr","nativeSrc":"7546:6:20","nodeType":"YulIdentifier","src":"7546:6:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7364:1:20","nodeType":"YulIdentifier","src":"7364:1:20"},{"name":"length","nativeSrc":"7367:6:20","nodeType":"YulIdentifier","src":"7367:6:20"}],"functionName":{"name":"lt","nativeSrc":"7361:2:20","nodeType":"YulIdentifier","src":"7361:2:20"},"nativeSrc":"7361:13:20","nodeType":"YulFunctionCall","src":"7361:13:20"},"nativeSrc":"7342:284:20","nodeType":"YulForLoop","post":{"nativeSrc":"7375:18:20","nodeType":"YulBlock","src":"7375:18:20","statements":[{"nativeSrc":"7377:14:20","nodeType":"YulAssignment","src":"7377:14:20","value":{"arguments":[{"name":"i","nativeSrc":"7386:1:20","nodeType":"YulIdentifier","src":"7386:1:20"},{"kind":"number","nativeSrc":"7389:1:20","nodeType":"YulLiteral","src":"7389:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7382:3:20","nodeType":"YulIdentifier","src":"7382:3:20"},"nativeSrc":"7382:9:20","nodeType":"YulFunctionCall","src":"7382:9:20"},"variableNames":[{"name":"i","nativeSrc":"7377:1:20","nodeType":"YulIdentifier","src":"7377:1:20"}]}]},"pre":{"nativeSrc":"7346:14:20","nodeType":"YulBlock","src":"7346:14:20","statements":[{"nativeSrc":"7348:10:20","nodeType":"YulVariableDeclaration","src":"7348:10:20","value":{"kind":"number","nativeSrc":"7357:1:20","nodeType":"YulLiteral","src":"7357:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7352:1:20","nodeType":"YulTypedName","src":"7352:1:20","type":""}]}]},"src":"7342:284:20"},{"nativeSrc":"7635:10:20","nodeType":"YulAssignment","src":"7635:10:20","value":{"name":"pos","nativeSrc":"7642:3:20","nodeType":"YulIdentifier","src":"7642:3:20"},"variableNames":[{"name":"end","nativeSrc":"7635:3:20","nodeType":"YulIdentifier","src":"7635:3:20"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6919:732:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7022:5:20","nodeType":"YulTypedName","src":"7022:5:20","type":""},{"name":"pos","nativeSrc":"7029:3:20","nodeType":"YulTypedName","src":"7029:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7038:3:20","nodeType":"YulTypedName","src":"7038:3:20","type":""}],"src":"6919:732:20"},{"body":{"nativeSrc":"8011:861:20","nodeType":"YulBlock","src":"8011:861:20","statements":[{"nativeSrc":"8021:27:20","nodeType":"YulAssignment","src":"8021:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"8033:9:20","nodeType":"YulIdentifier","src":"8033:9:20"},{"kind":"number","nativeSrc":"8044:3:20","nodeType":"YulLiteral","src":"8044:3:20","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"8029:3:20","nodeType":"YulIdentifier","src":"8029:3:20"},"nativeSrc":"8029:19:20","nodeType":"YulFunctionCall","src":"8029:19:20"},"variableNames":[{"name":"tail","nativeSrc":"8021:4:20","nodeType":"YulIdentifier","src":"8021:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8100:6:20","nodeType":"YulIdentifier","src":"8100:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"8113:9:20","nodeType":"YulIdentifier","src":"8113:9:20"},{"kind":"number","nativeSrc":"8124:1:20","nodeType":"YulLiteral","src":"8124:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8109:3:20","nodeType":"YulIdentifier","src":"8109:3:20"},"nativeSrc":"8109:17:20","nodeType":"YulFunctionCall","src":"8109:17:20"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"8058:41:20","nodeType":"YulIdentifier","src":"8058:41:20"},"nativeSrc":"8058:69:20","nodeType":"YulFunctionCall","src":"8058:69:20"},"nativeSrc":"8058:69:20","nodeType":"YulExpressionStatement","src":"8058:69:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8148:9:20","nodeType":"YulIdentifier","src":"8148:9:20"},{"kind":"number","nativeSrc":"8159:2:20","nodeType":"YulLiteral","src":"8159:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8144:3:20","nodeType":"YulIdentifier","src":"8144:3:20"},"nativeSrc":"8144:18:20","nodeType":"YulFunctionCall","src":"8144:18:20"},{"arguments":[{"name":"tail","nativeSrc":"8168:4:20","nodeType":"YulIdentifier","src":"8168:4:20"},{"name":"headStart","nativeSrc":"8174:9:20","nodeType":"YulIdentifier","src":"8174:9:20"}],"functionName":{"name":"sub","nativeSrc":"8164:3:20","nodeType":"YulIdentifier","src":"8164:3:20"},"nativeSrc":"8164:20:20","nodeType":"YulFunctionCall","src":"8164:20:20"}],"functionName":{"name":"mstore","nativeSrc":"8137:6:20","nodeType":"YulIdentifier","src":"8137:6:20"},"nativeSrc":"8137:48:20","nodeType":"YulFunctionCall","src":"8137:48:20"},"nativeSrc":"8137:48:20","nodeType":"YulExpressionStatement","src":"8137:48:20"},{"nativeSrc":"8194:86:20","nodeType":"YulAssignment","src":"8194:86:20","value":{"arguments":[{"name":"value1","nativeSrc":"8266:6:20","nodeType":"YulIdentifier","src":"8266:6:20"},{"name":"tail","nativeSrc":"8275:4:20","nodeType":"YulIdentifier","src":"8275:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8202:63:20","nodeType":"YulIdentifier","src":"8202:63:20"},"nativeSrc":"8202:78:20","nodeType":"YulFunctionCall","src":"8202:78:20"},"variableNames":[{"name":"tail","nativeSrc":"8194:4:20","nodeType":"YulIdentifier","src":"8194:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8301:9:20","nodeType":"YulIdentifier","src":"8301:9:20"},{"kind":"number","nativeSrc":"8312:2:20","nodeType":"YulLiteral","src":"8312:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8297:3:20","nodeType":"YulIdentifier","src":"8297:3:20"},"nativeSrc":"8297:18:20","nodeType":"YulFunctionCall","src":"8297:18:20"},{"arguments":[{"name":"tail","nativeSrc":"8321:4:20","nodeType":"YulIdentifier","src":"8321:4:20"},{"name":"headStart","nativeSrc":"8327:9:20","nodeType":"YulIdentifier","src":"8327:9:20"}],"functionName":{"name":"sub","nativeSrc":"8317:3:20","nodeType":"YulIdentifier","src":"8317:3:20"},"nativeSrc":"8317:20:20","nodeType":"YulFunctionCall","src":"8317:20:20"}],"functionName":{"name":"mstore","nativeSrc":"8290:6:20","nodeType":"YulIdentifier","src":"8290:6:20"},"nativeSrc":"8290:48:20","nodeType":"YulFunctionCall","src":"8290:48:20"},"nativeSrc":"8290:48:20","nodeType":"YulExpressionStatement","src":"8290:48:20"},{"nativeSrc":"8347:86:20","nodeType":"YulAssignment","src":"8347:86:20","value":{"arguments":[{"name":"value2","nativeSrc":"8419:6:20","nodeType":"YulIdentifier","src":"8419:6:20"},{"name":"tail","nativeSrc":"8428:4:20","nodeType":"YulIdentifier","src":"8428:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8355:63:20","nodeType":"YulIdentifier","src":"8355:63:20"},"nativeSrc":"8355:78:20","nodeType":"YulFunctionCall","src":"8355:78:20"},"variableNames":[{"name":"tail","nativeSrc":"8347:4:20","nodeType":"YulIdentifier","src":"8347:4:20"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8487:6:20","nodeType":"YulIdentifier","src":"8487:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"8500:9:20","nodeType":"YulIdentifier","src":"8500:9:20"},{"kind":"number","nativeSrc":"8511:2:20","nodeType":"YulLiteral","src":"8511:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8496:3:20","nodeType":"YulIdentifier","src":"8496:3:20"},"nativeSrc":"8496:18:20","nodeType":"YulFunctionCall","src":"8496:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8443:43:20","nodeType":"YulIdentifier","src":"8443:43:20"},"nativeSrc":"8443:72:20","nodeType":"YulFunctionCall","src":"8443:72:20"},"nativeSrc":"8443:72:20","nodeType":"YulExpressionStatement","src":"8443:72:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8569:6:20","nodeType":"YulIdentifier","src":"8569:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"8582:9:20","nodeType":"YulIdentifier","src":"8582:9:20"},{"kind":"number","nativeSrc":"8593:3:20","nodeType":"YulLiteral","src":"8593:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8578:3:20","nodeType":"YulIdentifier","src":"8578:3:20"},"nativeSrc":"8578:19:20","nodeType":"YulFunctionCall","src":"8578:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8525:43:20","nodeType":"YulIdentifier","src":"8525:43:20"},"nativeSrc":"8525:73:20","nodeType":"YulFunctionCall","src":"8525:73:20"},"nativeSrc":"8525:73:20","nodeType":"YulExpressionStatement","src":"8525:73:20"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"8652:6:20","nodeType":"YulIdentifier","src":"8652:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"8665:9:20","nodeType":"YulIdentifier","src":"8665:9:20"},{"kind":"number","nativeSrc":"8676:3:20","nodeType":"YulLiteral","src":"8676:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8661:3:20","nodeType":"YulIdentifier","src":"8661:3:20"},"nativeSrc":"8661:19:20","nodeType":"YulFunctionCall","src":"8661:19:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8608:43:20","nodeType":"YulIdentifier","src":"8608:43:20"},"nativeSrc":"8608:73:20","nodeType":"YulFunctionCall","src":"8608:73:20"},"nativeSrc":"8608:73:20","nodeType":"YulExpressionStatement","src":"8608:73:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8702:9:20","nodeType":"YulIdentifier","src":"8702:9:20"},{"kind":"number","nativeSrc":"8713:3:20","nodeType":"YulLiteral","src":"8713:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8698:3:20","nodeType":"YulIdentifier","src":"8698:3:20"},"nativeSrc":"8698:19:20","nodeType":"YulFunctionCall","src":"8698:19:20"},{"arguments":[{"name":"tail","nativeSrc":"8723:4:20","nodeType":"YulIdentifier","src":"8723:4:20"},{"name":"headStart","nativeSrc":"8729:9:20","nodeType":"YulIdentifier","src":"8729:9:20"}],"functionName":{"name":"sub","nativeSrc":"8719:3:20","nodeType":"YulIdentifier","src":"8719:3:20"},"nativeSrc":"8719:20:20","nodeType":"YulFunctionCall","src":"8719:20:20"}],"functionName":{"name":"mstore","nativeSrc":"8691:6:20","nodeType":"YulIdentifier","src":"8691:6:20"},"nativeSrc":"8691:49:20","nodeType":"YulFunctionCall","src":"8691:49:20"},"nativeSrc":"8691:49:20","nodeType":"YulExpressionStatement","src":"8691:49:20"},{"nativeSrc":"8749:116:20","nodeType":"YulAssignment","src":"8749:116:20","value":{"arguments":[{"name":"value6","nativeSrc":"8851:6:20","nodeType":"YulIdentifier","src":"8851:6:20"},{"name":"tail","nativeSrc":"8860:4:20","nodeType":"YulIdentifier","src":"8860:4:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8757:93:20","nodeType":"YulIdentifier","src":"8757:93:20"},"nativeSrc":"8757:108:20","nodeType":"YulFunctionCall","src":"8757:108:20"},"variableNames":[{"name":"tail","nativeSrc":"8749:4:20","nodeType":"YulIdentifier","src":"8749:4:20"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7657:1215:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7935:9:20","nodeType":"YulTypedName","src":"7935:9:20","type":""},{"name":"value6","nativeSrc":"7947:6:20","nodeType":"YulTypedName","src":"7947:6:20","type":""},{"name":"value5","nativeSrc":"7955:6:20","nodeType":"YulTypedName","src":"7955:6:20","type":""},{"name":"value4","nativeSrc":"7963:6:20","nodeType":"YulTypedName","src":"7963:6:20","type":""},{"name":"value3","nativeSrc":"7971:6:20","nodeType":"YulTypedName","src":"7971:6:20","type":""},{"name":"value2","nativeSrc":"7979:6:20","nodeType":"YulTypedName","src":"7979:6:20","type":""},{"name":"value1","nativeSrc":"7987:6:20","nodeType":"YulTypedName","src":"7987:6:20","type":""},{"name":"value0","nativeSrc":"7995:6:20","nodeType":"YulTypedName","src":"7995:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8006:4:20","nodeType":"YulTypedName","src":"8006:4:20","type":""}],"src":"7657:1215:20"},{"body":{"nativeSrc":"8919:77:20","nodeType":"YulBlock","src":"8919:77:20","statements":[{"body":{"nativeSrc":"8974:16:20","nodeType":"YulBlock","src":"8974:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8983:1:20","nodeType":"YulLiteral","src":"8983:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"8986:1:20","nodeType":"YulLiteral","src":"8986:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8976:6:20","nodeType":"YulIdentifier","src":"8976:6:20"},"nativeSrc":"8976:12:20","nodeType":"YulFunctionCall","src":"8976:12:20"},"nativeSrc":"8976:12:20","nodeType":"YulExpressionStatement","src":"8976:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8942:5:20","nodeType":"YulIdentifier","src":"8942:5:20"},{"arguments":[{"name":"value","nativeSrc":"8965:5:20","nodeType":"YulIdentifier","src":"8965:5:20"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"8949:15:20","nodeType":"YulIdentifier","src":"8949:15:20"},"nativeSrc":"8949:22:20","nodeType":"YulFunctionCall","src":"8949:22:20"}],"functionName":{"name":"eq","nativeSrc":"8939:2:20","nodeType":"YulIdentifier","src":"8939:2:20"},"nativeSrc":"8939:33:20","nodeType":"YulFunctionCall","src":"8939:33:20"}],"functionName":{"name":"iszero","nativeSrc":"8932:6:20","nodeType":"YulIdentifier","src":"8932:6:20"},"nativeSrc":"8932:41:20","nodeType":"YulFunctionCall","src":"8932:41:20"},"nativeSrc":"8929:61:20","nodeType":"YulIf","src":"8929:61:20"}]},"name":"validator_revert_t_uint8","nativeSrc":"8878:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8912:5:20","nodeType":"YulTypedName","src":"8912:5:20","type":""}],"src":"8878:118:20"},{"body":{"nativeSrc":"9052:85:20","nodeType":"YulBlock","src":"9052:85:20","statements":[{"nativeSrc":"9062:29:20","nodeType":"YulAssignment","src":"9062:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"9084:6:20","nodeType":"YulIdentifier","src":"9084:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"9071:12:20","nodeType":"YulIdentifier","src":"9071:12:20"},"nativeSrc":"9071:20:20","nodeType":"YulFunctionCall","src":"9071:20:20"},"variableNames":[{"name":"value","nativeSrc":"9062:5:20","nodeType":"YulIdentifier","src":"9062:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9125:5:20","nodeType":"YulIdentifier","src":"9125:5:20"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"9100:24:20","nodeType":"YulIdentifier","src":"9100:24:20"},"nativeSrc":"9100:31:20","nodeType":"YulFunctionCall","src":"9100:31:20"},"nativeSrc":"9100:31:20","nodeType":"YulExpressionStatement","src":"9100:31:20"}]},"name":"abi_decode_t_uint8","nativeSrc":"9002:135:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9030:6:20","nodeType":"YulTypedName","src":"9030:6:20","type":""},{"name":"end","nativeSrc":"9038:3:20","nodeType":"YulTypedName","src":"9038:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9046:5:20","nodeType":"YulTypedName","src":"9046:5:20","type":""}],"src":"9002:135:20"},{"body":{"nativeSrc":"9186:79:20","nodeType":"YulBlock","src":"9186:79:20","statements":[{"body":{"nativeSrc":"9243:16:20","nodeType":"YulBlock","src":"9243:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9252:1:20","nodeType":"YulLiteral","src":"9252:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"9255:1:20","nodeType":"YulLiteral","src":"9255:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9245:6:20","nodeType":"YulIdentifier","src":"9245:6:20"},"nativeSrc":"9245:12:20","nodeType":"YulFunctionCall","src":"9245:12:20"},"nativeSrc":"9245:12:20","nodeType":"YulExpressionStatement","src":"9245:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9209:5:20","nodeType":"YulIdentifier","src":"9209:5:20"},{"arguments":[{"name":"value","nativeSrc":"9234:5:20","nodeType":"YulIdentifier","src":"9234:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9216:17:20","nodeType":"YulIdentifier","src":"9216:17:20"},"nativeSrc":"9216:24:20","nodeType":"YulFunctionCall","src":"9216:24:20"}],"functionName":{"name":"eq","nativeSrc":"9206:2:20","nodeType":"YulIdentifier","src":"9206:2:20"},"nativeSrc":"9206:35:20","nodeType":"YulFunctionCall","src":"9206:35:20"}],"functionName":{"name":"iszero","nativeSrc":"9199:6:20","nodeType":"YulIdentifier","src":"9199:6:20"},"nativeSrc":"9199:43:20","nodeType":"YulFunctionCall","src":"9199:43:20"},"nativeSrc":"9196:63:20","nodeType":"YulIf","src":"9196:63:20"}]},"name":"validator_revert_t_bytes32","nativeSrc":"9143:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9179:5:20","nodeType":"YulTypedName","src":"9179:5:20","type":""}],"src":"9143:122:20"},{"body":{"nativeSrc":"9323:87:20","nodeType":"YulBlock","src":"9323:87:20","statements":[{"nativeSrc":"9333:29:20","nodeType":"YulAssignment","src":"9333:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"9355:6:20","nodeType":"YulIdentifier","src":"9355:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"9342:12:20","nodeType":"YulIdentifier","src":"9342:12:20"},"nativeSrc":"9342:20:20","nodeType":"YulFunctionCall","src":"9342:20:20"},"variableNames":[{"name":"value","nativeSrc":"9333:5:20","nodeType":"YulIdentifier","src":"9333:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9398:5:20","nodeType":"YulIdentifier","src":"9398:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"9371:26:20","nodeType":"YulIdentifier","src":"9371:26:20"},"nativeSrc":"9371:33:20","nodeType":"YulFunctionCall","src":"9371:33:20"},"nativeSrc":"9371:33:20","nodeType":"YulExpressionStatement","src":"9371:33:20"}]},"name":"abi_decode_t_bytes32","nativeSrc":"9271:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9301:6:20","nodeType":"YulTypedName","src":"9301:6:20","type":""},{"name":"end","nativeSrc":"9309:3:20","nodeType":"YulTypedName","src":"9309:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9317:5:20","nodeType":"YulTypedName","src":"9317:5:20","type":""}],"src":"9271:139:20"},{"body":{"nativeSrc":"9582:1033:20","nodeType":"YulBlock","src":"9582:1033:20","statements":[{"body":{"nativeSrc":"9629:83:20","nodeType":"YulBlock","src":"9629:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9631:77:20","nodeType":"YulIdentifier","src":"9631:77:20"},"nativeSrc":"9631:79:20","nodeType":"YulFunctionCall","src":"9631:79:20"},"nativeSrc":"9631:79:20","nodeType":"YulExpressionStatement","src":"9631:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9603:7:20","nodeType":"YulIdentifier","src":"9603:7:20"},{"name":"headStart","nativeSrc":"9612:9:20","nodeType":"YulIdentifier","src":"9612:9:20"}],"functionName":{"name":"sub","nativeSrc":"9599:3:20","nodeType":"YulIdentifier","src":"9599:3:20"},"nativeSrc":"9599:23:20","nodeType":"YulFunctionCall","src":"9599:23:20"},{"kind":"number","nativeSrc":"9624:3:20","nodeType":"YulLiteral","src":"9624:3:20","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"9595:3:20","nodeType":"YulIdentifier","src":"9595:3:20"},"nativeSrc":"9595:33:20","nodeType":"YulFunctionCall","src":"9595:33:20"},"nativeSrc":"9592:120:20","nodeType":"YulIf","src":"9592:120:20"},{"nativeSrc":"9722:117:20","nodeType":"YulBlock","src":"9722:117:20","statements":[{"nativeSrc":"9737:15:20","nodeType":"YulVariableDeclaration","src":"9737:15:20","value":{"kind":"number","nativeSrc":"9751:1:20","nodeType":"YulLiteral","src":"9751:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9741:6:20","nodeType":"YulTypedName","src":"9741:6:20","type":""}]},{"nativeSrc":"9766:63:20","nodeType":"YulAssignment","src":"9766:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9801:9:20","nodeType":"YulIdentifier","src":"9801:9:20"},{"name":"offset","nativeSrc":"9812:6:20","nodeType":"YulIdentifier","src":"9812:6:20"}],"functionName":{"name":"add","nativeSrc":"9797:3:20","nodeType":"YulIdentifier","src":"9797:3:20"},"nativeSrc":"9797:22:20","nodeType":"YulFunctionCall","src":"9797:22:20"},{"name":"dataEnd","nativeSrc":"9821:7:20","nodeType":"YulIdentifier","src":"9821:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9776:20:20","nodeType":"YulIdentifier","src":"9776:20:20"},"nativeSrc":"9776:53:20","nodeType":"YulFunctionCall","src":"9776:53:20"},"variableNames":[{"name":"value0","nativeSrc":"9766:6:20","nodeType":"YulIdentifier","src":"9766:6:20"}]}]},{"nativeSrc":"9849:118:20","nodeType":"YulBlock","src":"9849:118:20","statements":[{"nativeSrc":"9864:16:20","nodeType":"YulVariableDeclaration","src":"9864:16:20","value":{"kind":"number","nativeSrc":"9878:2:20","nodeType":"YulLiteral","src":"9878:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9868:6:20","nodeType":"YulTypedName","src":"9868:6:20","type":""}]},{"nativeSrc":"9894:63:20","nodeType":"YulAssignment","src":"9894:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9929:9:20","nodeType":"YulIdentifier","src":"9929:9:20"},{"name":"offset","nativeSrc":"9940:6:20","nodeType":"YulIdentifier","src":"9940:6:20"}],"functionName":{"name":"add","nativeSrc":"9925:3:20","nodeType":"YulIdentifier","src":"9925:3:20"},"nativeSrc":"9925:22:20","nodeType":"YulFunctionCall","src":"9925:22:20"},{"name":"dataEnd","nativeSrc":"9949:7:20","nodeType":"YulIdentifier","src":"9949:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9904:20:20","nodeType":"YulIdentifier","src":"9904:20:20"},"nativeSrc":"9904:53:20","nodeType":"YulFunctionCall","src":"9904:53:20"},"variableNames":[{"name":"value1","nativeSrc":"9894:6:20","nodeType":"YulIdentifier","src":"9894:6:20"}]}]},{"nativeSrc":"9977:118:20","nodeType":"YulBlock","src":"9977:118:20","statements":[{"nativeSrc":"9992:16:20","nodeType":"YulVariableDeclaration","src":"9992:16:20","value":{"kind":"number","nativeSrc":"10006:2:20","nodeType":"YulLiteral","src":"10006:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9996:6:20","nodeType":"YulTypedName","src":"9996:6:20","type":""}]},{"nativeSrc":"10022:63:20","nodeType":"YulAssignment","src":"10022:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10057:9:20","nodeType":"YulIdentifier","src":"10057:9:20"},{"name":"offset","nativeSrc":"10068:6:20","nodeType":"YulIdentifier","src":"10068:6:20"}],"functionName":{"name":"add","nativeSrc":"10053:3:20","nodeType":"YulIdentifier","src":"10053:3:20"},"nativeSrc":"10053:22:20","nodeType":"YulFunctionCall","src":"10053:22:20"},{"name":"dataEnd","nativeSrc":"10077:7:20","nodeType":"YulIdentifier","src":"10077:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10032:20:20","nodeType":"YulIdentifier","src":"10032:20:20"},"nativeSrc":"10032:53:20","nodeType":"YulFunctionCall","src":"10032:53:20"},"variableNames":[{"name":"value2","nativeSrc":"10022:6:20","nodeType":"YulIdentifier","src":"10022:6:20"}]}]},{"nativeSrc":"10105:118:20","nodeType":"YulBlock","src":"10105:118:20","statements":[{"nativeSrc":"10120:16:20","nodeType":"YulVariableDeclaration","src":"10120:16:20","value":{"kind":"number","nativeSrc":"10134:2:20","nodeType":"YulLiteral","src":"10134:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"10124:6:20","nodeType":"YulTypedName","src":"10124:6:20","type":""}]},{"nativeSrc":"10150:63:20","nodeType":"YulAssignment","src":"10150:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10185:9:20","nodeType":"YulIdentifier","src":"10185:9:20"},{"name":"offset","nativeSrc":"10196:6:20","nodeType":"YulIdentifier","src":"10196:6:20"}],"functionName":{"name":"add","nativeSrc":"10181:3:20","nodeType":"YulIdentifier","src":"10181:3:20"},"nativeSrc":"10181:22:20","nodeType":"YulFunctionCall","src":"10181:22:20"},{"name":"dataEnd","nativeSrc":"10205:7:20","nodeType":"YulIdentifier","src":"10205:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10160:20:20","nodeType":"YulIdentifier","src":"10160:20:20"},"nativeSrc":"10160:53:20","nodeType":"YulFunctionCall","src":"10160:53:20"},"variableNames":[{"name":"value3","nativeSrc":"10150:6:20","nodeType":"YulIdentifier","src":"10150:6:20"}]}]},{"nativeSrc":"10233:117:20","nodeType":"YulBlock","src":"10233:117:20","statements":[{"nativeSrc":"10248:17:20","nodeType":"YulVariableDeclaration","src":"10248:17:20","value":{"kind":"number","nativeSrc":"10262:3:20","nodeType":"YulLiteral","src":"10262:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"10252:6:20","nodeType":"YulTypedName","src":"10252:6:20","type":""}]},{"nativeSrc":"10279:61:20","nodeType":"YulAssignment","src":"10279:61:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10312:9:20","nodeType":"YulIdentifier","src":"10312:9:20"},{"name":"offset","nativeSrc":"10323:6:20","nodeType":"YulIdentifier","src":"10323:6:20"}],"functionName":{"name":"add","nativeSrc":"10308:3:20","nodeType":"YulIdentifier","src":"10308:3:20"},"nativeSrc":"10308:22:20","nodeType":"YulFunctionCall","src":"10308:22:20"},{"name":"dataEnd","nativeSrc":"10332:7:20","nodeType":"YulIdentifier","src":"10332:7:20"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"10289:18:20","nodeType":"YulIdentifier","src":"10289:18:20"},"nativeSrc":"10289:51:20","nodeType":"YulFunctionCall","src":"10289:51:20"},"variableNames":[{"name":"value4","nativeSrc":"10279:6:20","nodeType":"YulIdentifier","src":"10279:6:20"}]}]},{"nativeSrc":"10360:119:20","nodeType":"YulBlock","src":"10360:119:20","statements":[{"nativeSrc":"10375:17:20","nodeType":"YulVariableDeclaration","src":"10375:17:20","value":{"kind":"number","nativeSrc":"10389:3:20","nodeType":"YulLiteral","src":"10389:3:20","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"10379:6:20","nodeType":"YulTypedName","src":"10379:6:20","type":""}]},{"nativeSrc":"10406:63:20","nodeType":"YulAssignment","src":"10406:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10441:9:20","nodeType":"YulIdentifier","src":"10441:9:20"},{"name":"offset","nativeSrc":"10452:6:20","nodeType":"YulIdentifier","src":"10452:6:20"}],"functionName":{"name":"add","nativeSrc":"10437:3:20","nodeType":"YulIdentifier","src":"10437:3:20"},"nativeSrc":"10437:22:20","nodeType":"YulFunctionCall","src":"10437:22:20"},{"name":"dataEnd","nativeSrc":"10461:7:20","nodeType":"YulIdentifier","src":"10461:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10416:20:20","nodeType":"YulIdentifier","src":"10416:20:20"},"nativeSrc":"10416:53:20","nodeType":"YulFunctionCall","src":"10416:53:20"},"variableNames":[{"name":"value5","nativeSrc":"10406:6:20","nodeType":"YulIdentifier","src":"10406:6:20"}]}]},{"nativeSrc":"10489:119:20","nodeType":"YulBlock","src":"10489:119:20","statements":[{"nativeSrc":"10504:17:20","nodeType":"YulVariableDeclaration","src":"10504:17:20","value":{"kind":"number","nativeSrc":"10518:3:20","nodeType":"YulLiteral","src":"10518:3:20","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"10508:6:20","nodeType":"YulTypedName","src":"10508:6:20","type":""}]},{"nativeSrc":"10535:63:20","nodeType":"YulAssignment","src":"10535:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10570:9:20","nodeType":"YulIdentifier","src":"10570:9:20"},{"name":"offset","nativeSrc":"10581:6:20","nodeType":"YulIdentifier","src":"10581:6:20"}],"functionName":{"name":"add","nativeSrc":"10566:3:20","nodeType":"YulIdentifier","src":"10566:3:20"},"nativeSrc":"10566:22:20","nodeType":"YulFunctionCall","src":"10566:22:20"},{"name":"dataEnd","nativeSrc":"10590:7:20","nodeType":"YulIdentifier","src":"10590:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10545:20:20","nodeType":"YulIdentifier","src":"10545:20:20"},"nativeSrc":"10545:53:20","nodeType":"YulFunctionCall","src":"10545:53:20"},"variableNames":[{"name":"value6","nativeSrc":"10535:6:20","nodeType":"YulIdentifier","src":"10535:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"9416:1199:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9504:9:20","nodeType":"YulTypedName","src":"9504:9:20","type":""},{"name":"dataEnd","nativeSrc":"9515:7:20","nodeType":"YulTypedName","src":"9515:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9527:6:20","nodeType":"YulTypedName","src":"9527:6:20","type":""},{"name":"value1","nativeSrc":"9535:6:20","nodeType":"YulTypedName","src":"9535:6:20","type":""},{"name":"value2","nativeSrc":"9543:6:20","nodeType":"YulTypedName","src":"9543:6:20","type":""},{"name":"value3","nativeSrc":"9551:6:20","nodeType":"YulTypedName","src":"9551:6:20","type":""},{"name":"value4","nativeSrc":"9559:6:20","nodeType":"YulTypedName","src":"9559:6:20","type":""},{"name":"value5","nativeSrc":"9567:6:20","nodeType":"YulTypedName","src":"9567:6:20","type":""},{"name":"value6","nativeSrc":"9575:6:20","nodeType":"YulTypedName","src":"9575:6:20","type":""}],"src":"9416:1199:20"},{"body":{"nativeSrc":"10704:391:20","nodeType":"YulBlock","src":"10704:391:20","statements":[{"body":{"nativeSrc":"10750:83:20","nodeType":"YulBlock","src":"10750:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10752:77:20","nodeType":"YulIdentifier","src":"10752:77:20"},"nativeSrc":"10752:79:20","nodeType":"YulFunctionCall","src":"10752:79:20"},"nativeSrc":"10752:79:20","nodeType":"YulExpressionStatement","src":"10752:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10725:7:20","nodeType":"YulIdentifier","src":"10725:7:20"},{"name":"headStart","nativeSrc":"10734:9:20","nodeType":"YulIdentifier","src":"10734:9:20"}],"functionName":{"name":"sub","nativeSrc":"10721:3:20","nodeType":"YulIdentifier","src":"10721:3:20"},"nativeSrc":"10721:23:20","nodeType":"YulFunctionCall","src":"10721:23:20"},{"kind":"number","nativeSrc":"10746:2:20","nodeType":"YulLiteral","src":"10746:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10717:3:20","nodeType":"YulIdentifier","src":"10717:3:20"},"nativeSrc":"10717:32:20","nodeType":"YulFunctionCall","src":"10717:32:20"},"nativeSrc":"10714:119:20","nodeType":"YulIf","src":"10714:119:20"},{"nativeSrc":"10843:117:20","nodeType":"YulBlock","src":"10843:117:20","statements":[{"nativeSrc":"10858:15:20","nodeType":"YulVariableDeclaration","src":"10858:15:20","value":{"kind":"number","nativeSrc":"10872:1:20","nodeType":"YulLiteral","src":"10872:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10862:6:20","nodeType":"YulTypedName","src":"10862:6:20","type":""}]},{"nativeSrc":"10887:63:20","nodeType":"YulAssignment","src":"10887:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10922:9:20","nodeType":"YulIdentifier","src":"10922:9:20"},{"name":"offset","nativeSrc":"10933:6:20","nodeType":"YulIdentifier","src":"10933:6:20"}],"functionName":{"name":"add","nativeSrc":"10918:3:20","nodeType":"YulIdentifier","src":"10918:3:20"},"nativeSrc":"10918:22:20","nodeType":"YulFunctionCall","src":"10918:22:20"},{"name":"dataEnd","nativeSrc":"10942:7:20","nodeType":"YulIdentifier","src":"10942:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10897:20:20","nodeType":"YulIdentifier","src":"10897:20:20"},"nativeSrc":"10897:53:20","nodeType":"YulFunctionCall","src":"10897:53:20"},"variableNames":[{"name":"value0","nativeSrc":"10887:6:20","nodeType":"YulIdentifier","src":"10887:6:20"}]}]},{"nativeSrc":"10970:118:20","nodeType":"YulBlock","src":"10970:118:20","statements":[{"nativeSrc":"10985:16:20","nodeType":"YulVariableDeclaration","src":"10985:16:20","value":{"kind":"number","nativeSrc":"10999:2:20","nodeType":"YulLiteral","src":"10999:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10989:6:20","nodeType":"YulTypedName","src":"10989:6:20","type":""}]},{"nativeSrc":"11015:63:20","nodeType":"YulAssignment","src":"11015:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11050:9:20","nodeType":"YulIdentifier","src":"11050:9:20"},{"name":"offset","nativeSrc":"11061:6:20","nodeType":"YulIdentifier","src":"11061:6:20"}],"functionName":{"name":"add","nativeSrc":"11046:3:20","nodeType":"YulIdentifier","src":"11046:3:20"},"nativeSrc":"11046:22:20","nodeType":"YulFunctionCall","src":"11046:22:20"},{"name":"dataEnd","nativeSrc":"11070:7:20","nodeType":"YulIdentifier","src":"11070:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11025:20:20","nodeType":"YulIdentifier","src":"11025:20:20"},"nativeSrc":"11025:53:20","nodeType":"YulFunctionCall","src":"11025:53:20"},"variableNames":[{"name":"value1","nativeSrc":"11015:6:20","nodeType":"YulIdentifier","src":"11015:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10621:474:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10666:9:20","nodeType":"YulTypedName","src":"10666:9:20","type":""},{"name":"dataEnd","nativeSrc":"10677:7:20","nodeType":"YulTypedName","src":"10677:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10689:6:20","nodeType":"YulTypedName","src":"10689:6:20","type":""},{"name":"value1","nativeSrc":"10697:6:20","nodeType":"YulTypedName","src":"10697:6:20","type":""}],"src":"10621:474:20"},{"body":{"nativeSrc":"11129:152:20","nodeType":"YulBlock","src":"11129:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11146:1:20","nodeType":"YulLiteral","src":"11146:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"11149:77:20","nodeType":"YulLiteral","src":"11149:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11139:6:20","nodeType":"YulIdentifier","src":"11139:6:20"},"nativeSrc":"11139:88:20","nodeType":"YulFunctionCall","src":"11139:88:20"},"nativeSrc":"11139:88:20","nodeType":"YulExpressionStatement","src":"11139:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11243:1:20","nodeType":"YulLiteral","src":"11243:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"11246:4:20","nodeType":"YulLiteral","src":"11246:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11236:6:20","nodeType":"YulIdentifier","src":"11236:6:20"},"nativeSrc":"11236:15:20","nodeType":"YulFunctionCall","src":"11236:15:20"},"nativeSrc":"11236:15:20","nodeType":"YulExpressionStatement","src":"11236:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11267:1:20","nodeType":"YulLiteral","src":"11267:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"11270:4:20","nodeType":"YulLiteral","src":"11270:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11260:6:20","nodeType":"YulIdentifier","src":"11260:6:20"},"nativeSrc":"11260:15:20","nodeType":"YulFunctionCall","src":"11260:15:20"},"nativeSrc":"11260:15:20","nodeType":"YulExpressionStatement","src":"11260:15:20"}]},"name":"panic_error_0x22","nativeSrc":"11101:180:20","nodeType":"YulFunctionDefinition","src":"11101:180:20"},{"body":{"nativeSrc":"11338:269:20","nodeType":"YulBlock","src":"11338:269:20","statements":[{"nativeSrc":"11348:22:20","nodeType":"YulAssignment","src":"11348:22:20","value":{"arguments":[{"name":"data","nativeSrc":"11362:4:20","nodeType":"YulIdentifier","src":"11362:4:20"},{"kind":"number","nativeSrc":"11368:1:20","nodeType":"YulLiteral","src":"11368:1:20","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"11358:3:20","nodeType":"YulIdentifier","src":"11358:3:20"},"nativeSrc":"11358:12:20","nodeType":"YulFunctionCall","src":"11358:12:20"},"variableNames":[{"name":"length","nativeSrc":"11348:6:20","nodeType":"YulIdentifier","src":"11348:6:20"}]},{"nativeSrc":"11379:38:20","nodeType":"YulVariableDeclaration","src":"11379:38:20","value":{"arguments":[{"name":"data","nativeSrc":"11409:4:20","nodeType":"YulIdentifier","src":"11409:4:20"},{"kind":"number","nativeSrc":"11415:1:20","nodeType":"YulLiteral","src":"11415:1:20","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11405:3:20","nodeType":"YulIdentifier","src":"11405:3:20"},"nativeSrc":"11405:12:20","nodeType":"YulFunctionCall","src":"11405:12:20"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11383:18:20","nodeType":"YulTypedName","src":"11383:18:20","type":""}]},{"body":{"nativeSrc":"11456:51:20","nodeType":"YulBlock","src":"11456:51:20","statements":[{"nativeSrc":"11470:27:20","nodeType":"YulAssignment","src":"11470:27:20","value":{"arguments":[{"name":"length","nativeSrc":"11484:6:20","nodeType":"YulIdentifier","src":"11484:6:20"},{"kind":"number","nativeSrc":"11492:4:20","nodeType":"YulLiteral","src":"11492:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11480:3:20","nodeType":"YulIdentifier","src":"11480:3:20"},"nativeSrc":"11480:17:20","nodeType":"YulFunctionCall","src":"11480:17:20"},"variableNames":[{"name":"length","nativeSrc":"11470:6:20","nodeType":"YulIdentifier","src":"11470:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11436:18:20","nodeType":"YulIdentifier","src":"11436:18:20"}],"functionName":{"name":"iszero","nativeSrc":"11429:6:20","nodeType":"YulIdentifier","src":"11429:6:20"},"nativeSrc":"11429:26:20","nodeType":"YulFunctionCall","src":"11429:26:20"},"nativeSrc":"11426:81:20","nodeType":"YulIf","src":"11426:81:20"},{"body":{"nativeSrc":"11559:42:20","nodeType":"YulBlock","src":"11559:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"11573:16:20","nodeType":"YulIdentifier","src":"11573:16:20"},"nativeSrc":"11573:18:20","nodeType":"YulFunctionCall","src":"11573:18:20"},"nativeSrc":"11573:18:20","nodeType":"YulExpressionStatement","src":"11573:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11523:18:20","nodeType":"YulIdentifier","src":"11523:18:20"},{"arguments":[{"name":"length","nativeSrc":"11546:6:20","nodeType":"YulIdentifier","src":"11546:6:20"},{"kind":"number","nativeSrc":"11554:2:20","nodeType":"YulLiteral","src":"11554:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11543:2:20","nodeType":"YulIdentifier","src":"11543:2:20"},"nativeSrc":"11543:14:20","nodeType":"YulFunctionCall","src":"11543:14:20"}],"functionName":{"name":"eq","nativeSrc":"11520:2:20","nodeType":"YulIdentifier","src":"11520:2:20"},"nativeSrc":"11520:38:20","nodeType":"YulFunctionCall","src":"11520:38:20"},"nativeSrc":"11517:84:20","nodeType":"YulIf","src":"11517:84:20"}]},"name":"extract_byte_array_length","nativeSrc":"11287:320:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11322:4:20","nodeType":"YulTypedName","src":"11322:4:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11331:6:20","nodeType":"YulTypedName","src":"11331:6:20","type":""}],"src":"11287:320:20"},{"body":{"nativeSrc":"11641:152:20","nodeType":"YulBlock","src":"11641:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11658:1:20","nodeType":"YulLiteral","src":"11658:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"11661:77:20","nodeType":"YulLiteral","src":"11661:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11651:6:20","nodeType":"YulIdentifier","src":"11651:6:20"},"nativeSrc":"11651:88:20","nodeType":"YulFunctionCall","src":"11651:88:20"},"nativeSrc":"11651:88:20","nodeType":"YulExpressionStatement","src":"11651:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11755:1:20","nodeType":"YulLiteral","src":"11755:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"11758:4:20","nodeType":"YulLiteral","src":"11758:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"11748:6:20","nodeType":"YulIdentifier","src":"11748:6:20"},"nativeSrc":"11748:15:20","nodeType":"YulFunctionCall","src":"11748:15:20"},"nativeSrc":"11748:15:20","nodeType":"YulExpressionStatement","src":"11748:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11779:1:20","nodeType":"YulLiteral","src":"11779:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"11782:4:20","nodeType":"YulLiteral","src":"11782:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11772:6:20","nodeType":"YulIdentifier","src":"11772:6:20"},"nativeSrc":"11772:15:20","nodeType":"YulFunctionCall","src":"11772:15:20"},"nativeSrc":"11772:15:20","nodeType":"YulExpressionStatement","src":"11772:15:20"}]},"name":"panic_error_0x41","nativeSrc":"11613:180:20","nodeType":"YulFunctionDefinition","src":"11613:180:20"},{"body":{"nativeSrc":"12037:537:20","nodeType":"YulBlock","src":"12037:537:20","statements":[{"nativeSrc":"12047:27:20","nodeType":"YulAssignment","src":"12047:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12059:9:20","nodeType":"YulIdentifier","src":"12059:9:20"},{"kind":"number","nativeSrc":"12070:3:20","nodeType":"YulLiteral","src":"12070:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12055:3:20","nodeType":"YulIdentifier","src":"12055:3:20"},"nativeSrc":"12055:19:20","nodeType":"YulFunctionCall","src":"12055:19:20"},"variableNames":[{"name":"tail","nativeSrc":"12047:4:20","nodeType":"YulIdentifier","src":"12047:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12128:6:20","nodeType":"YulIdentifier","src":"12128:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12141:9:20","nodeType":"YulIdentifier","src":"12141:9:20"},{"kind":"number","nativeSrc":"12152:1:20","nodeType":"YulLiteral","src":"12152:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12137:3:20","nodeType":"YulIdentifier","src":"12137:3:20"},"nativeSrc":"12137:17:20","nodeType":"YulFunctionCall","src":"12137:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12084:43:20","nodeType":"YulIdentifier","src":"12084:43:20"},"nativeSrc":"12084:71:20","nodeType":"YulFunctionCall","src":"12084:71:20"},"nativeSrc":"12084:71:20","nodeType":"YulExpressionStatement","src":"12084:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12209:6:20","nodeType":"YulIdentifier","src":"12209:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12222:9:20","nodeType":"YulIdentifier","src":"12222:9:20"},{"kind":"number","nativeSrc":"12233:2:20","nodeType":"YulLiteral","src":"12233:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12218:3:20","nodeType":"YulIdentifier","src":"12218:3:20"},"nativeSrc":"12218:18:20","nodeType":"YulFunctionCall","src":"12218:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12165:43:20","nodeType":"YulIdentifier","src":"12165:43:20"},"nativeSrc":"12165:72:20","nodeType":"YulFunctionCall","src":"12165:72:20"},"nativeSrc":"12165:72:20","nodeType":"YulExpressionStatement","src":"12165:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12291:6:20","nodeType":"YulIdentifier","src":"12291:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12304:9:20","nodeType":"YulIdentifier","src":"12304:9:20"},{"kind":"number","nativeSrc":"12315:2:20","nodeType":"YulLiteral","src":"12315:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12300:3:20","nodeType":"YulIdentifier","src":"12300:3:20"},"nativeSrc":"12300:18:20","nodeType":"YulFunctionCall","src":"12300:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12247:43:20","nodeType":"YulIdentifier","src":"12247:43:20"},"nativeSrc":"12247:72:20","nodeType":"YulFunctionCall","src":"12247:72:20"},"nativeSrc":"12247:72:20","nodeType":"YulExpressionStatement","src":"12247:72:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12373:6:20","nodeType":"YulIdentifier","src":"12373:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12386:9:20","nodeType":"YulIdentifier","src":"12386:9:20"},{"kind":"number","nativeSrc":"12397:2:20","nodeType":"YulLiteral","src":"12397:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12382:3:20","nodeType":"YulIdentifier","src":"12382:3:20"},"nativeSrc":"12382:18:20","nodeType":"YulFunctionCall","src":"12382:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12329:43:20","nodeType":"YulIdentifier","src":"12329:43:20"},"nativeSrc":"12329:72:20","nodeType":"YulFunctionCall","src":"12329:72:20"},"nativeSrc":"12329:72:20","nodeType":"YulExpressionStatement","src":"12329:72:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"12455:6:20","nodeType":"YulIdentifier","src":"12455:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12468:9:20","nodeType":"YulIdentifier","src":"12468:9:20"},{"kind":"number","nativeSrc":"12479:3:20","nodeType":"YulLiteral","src":"12479:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12464:3:20","nodeType":"YulIdentifier","src":"12464:3:20"},"nativeSrc":"12464:19:20","nodeType":"YulFunctionCall","src":"12464:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12411:43:20","nodeType":"YulIdentifier","src":"12411:43:20"},"nativeSrc":"12411:73:20","nodeType":"YulFunctionCall","src":"12411:73:20"},"nativeSrc":"12411:73:20","nodeType":"YulExpressionStatement","src":"12411:73:20"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"12538:6:20","nodeType":"YulIdentifier","src":"12538:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12551:9:20","nodeType":"YulIdentifier","src":"12551:9:20"},{"kind":"number","nativeSrc":"12562:3:20","nodeType":"YulLiteral","src":"12562:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12547:3:20","nodeType":"YulIdentifier","src":"12547:3:20"},"nativeSrc":"12547:19:20","nodeType":"YulFunctionCall","src":"12547:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12494:43:20","nodeType":"YulIdentifier","src":"12494:43:20"},"nativeSrc":"12494:73:20","nodeType":"YulFunctionCall","src":"12494:73:20"},"nativeSrc":"12494:73:20","nodeType":"YulExpressionStatement","src":"12494:73:20"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11799:775:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11969:9:20","nodeType":"YulTypedName","src":"11969:9:20","type":""},{"name":"value5","nativeSrc":"11981:6:20","nodeType":"YulTypedName","src":"11981:6:20","type":""},{"name":"value4","nativeSrc":"11989:6:20","nodeType":"YulTypedName","src":"11989:6:20","type":""},{"name":"value3","nativeSrc":"11997:6:20","nodeType":"YulTypedName","src":"11997:6:20","type":""},{"name":"value2","nativeSrc":"12005:6:20","nodeType":"YulTypedName","src":"12005:6:20","type":""},{"name":"value1","nativeSrc":"12013:6:20","nodeType":"YulTypedName","src":"12013:6:20","type":""},{"name":"value0","nativeSrc":"12021:6:20","nodeType":"YulTypedName","src":"12021:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12032:4:20","nodeType":"YulTypedName","src":"12032:4:20","type":""}],"src":"11799:775:20"},{"body":{"nativeSrc":"12706:206:20","nodeType":"YulBlock","src":"12706:206:20","statements":[{"nativeSrc":"12716:26:20","nodeType":"YulAssignment","src":"12716:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12728:9:20","nodeType":"YulIdentifier","src":"12728:9:20"},{"kind":"number","nativeSrc":"12739:2:20","nodeType":"YulLiteral","src":"12739:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12724:3:20","nodeType":"YulIdentifier","src":"12724:3:20"},"nativeSrc":"12724:18:20","nodeType":"YulFunctionCall","src":"12724:18:20"},"variableNames":[{"name":"tail","nativeSrc":"12716:4:20","nodeType":"YulIdentifier","src":"12716:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12796:6:20","nodeType":"YulIdentifier","src":"12796:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12809:9:20","nodeType":"YulIdentifier","src":"12809:9:20"},{"kind":"number","nativeSrc":"12820:1:20","nodeType":"YulLiteral","src":"12820:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12805:3:20","nodeType":"YulIdentifier","src":"12805:3:20"},"nativeSrc":"12805:17:20","nodeType":"YulFunctionCall","src":"12805:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12752:43:20","nodeType":"YulIdentifier","src":"12752:43:20"},"nativeSrc":"12752:71:20","nodeType":"YulFunctionCall","src":"12752:71:20"},"nativeSrc":"12752:71:20","nodeType":"YulExpressionStatement","src":"12752:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12877:6:20","nodeType":"YulIdentifier","src":"12877:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12890:9:20","nodeType":"YulIdentifier","src":"12890:9:20"},{"kind":"number","nativeSrc":"12901:2:20","nodeType":"YulLiteral","src":"12901:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12886:3:20","nodeType":"YulIdentifier","src":"12886:3:20"},"nativeSrc":"12886:18:20","nodeType":"YulFunctionCall","src":"12886:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12833:43:20","nodeType":"YulIdentifier","src":"12833:43:20"},"nativeSrc":"12833:72:20","nodeType":"YulFunctionCall","src":"12833:72:20"},"nativeSrc":"12833:72:20","nodeType":"YulExpressionStatement","src":"12833:72:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"12580:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12670:9:20","nodeType":"YulTypedName","src":"12670:9:20","type":""},{"name":"value1","nativeSrc":"12682:6:20","nodeType":"YulTypedName","src":"12682:6:20","type":""},{"name":"value0","nativeSrc":"12690:6:20","nodeType":"YulTypedName","src":"12690:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12701:4:20","nodeType":"YulTypedName","src":"12701:4:20","type":""}],"src":"12580:332:20"},{"body":{"nativeSrc":"13072:288:20","nodeType":"YulBlock","src":"13072:288:20","statements":[{"nativeSrc":"13082:26:20","nodeType":"YulAssignment","src":"13082:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"13094:9:20","nodeType":"YulIdentifier","src":"13094:9:20"},{"kind":"number","nativeSrc":"13105:2:20","nodeType":"YulLiteral","src":"13105:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13090:3:20","nodeType":"YulIdentifier","src":"13090:3:20"},"nativeSrc":"13090:18:20","nodeType":"YulFunctionCall","src":"13090:18:20"},"variableNames":[{"name":"tail","nativeSrc":"13082:4:20","nodeType":"YulIdentifier","src":"13082:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13162:6:20","nodeType":"YulIdentifier","src":"13162:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"13175:9:20","nodeType":"YulIdentifier","src":"13175:9:20"},{"kind":"number","nativeSrc":"13186:1:20","nodeType":"YulLiteral","src":"13186:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13171:3:20","nodeType":"YulIdentifier","src":"13171:3:20"},"nativeSrc":"13171:17:20","nodeType":"YulFunctionCall","src":"13171:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13118:43:20","nodeType":"YulIdentifier","src":"13118:43:20"},"nativeSrc":"13118:71:20","nodeType":"YulFunctionCall","src":"13118:71:20"},"nativeSrc":"13118:71:20","nodeType":"YulExpressionStatement","src":"13118:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13243:6:20","nodeType":"YulIdentifier","src":"13243:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"13256:9:20","nodeType":"YulIdentifier","src":"13256:9:20"},{"kind":"number","nativeSrc":"13267:2:20","nodeType":"YulLiteral","src":"13267:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13252:3:20","nodeType":"YulIdentifier","src":"13252:3:20"},"nativeSrc":"13252:18:20","nodeType":"YulFunctionCall","src":"13252:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13199:43:20","nodeType":"YulIdentifier","src":"13199:43:20"},"nativeSrc":"13199:72:20","nodeType":"YulFunctionCall","src":"13199:72:20"},"nativeSrc":"13199:72:20","nodeType":"YulExpressionStatement","src":"13199:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13325:6:20","nodeType":"YulIdentifier","src":"13325:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"13338:9:20","nodeType":"YulIdentifier","src":"13338:9:20"},{"kind":"number","nativeSrc":"13349:2:20","nodeType":"YulLiteral","src":"13349:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13334:3:20","nodeType":"YulIdentifier","src":"13334:3:20"},"nativeSrc":"13334:18:20","nodeType":"YulFunctionCall","src":"13334:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13281:43:20","nodeType":"YulIdentifier","src":"13281:43:20"},"nativeSrc":"13281:72:20","nodeType":"YulFunctionCall","src":"13281:72:20"},"nativeSrc":"13281:72:20","nodeType":"YulExpressionStatement","src":"13281:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12918:442:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13028:9:20","nodeType":"YulTypedName","src":"13028:9:20","type":""},{"name":"value2","nativeSrc":"13040:6:20","nodeType":"YulTypedName","src":"13040:6:20","type":""},{"name":"value1","nativeSrc":"13048:6:20","nodeType":"YulTypedName","src":"13048:6:20","type":""},{"name":"value0","nativeSrc":"13056:6:20","nodeType":"YulTypedName","src":"13056:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13067:4:20","nodeType":"YulTypedName","src":"13067:4:20","type":""}],"src":"12918:442:20"},{"body":{"nativeSrc":"13464:124:20","nodeType":"YulBlock","src":"13464:124:20","statements":[{"nativeSrc":"13474:26:20","nodeType":"YulAssignment","src":"13474:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"13486:9:20","nodeType":"YulIdentifier","src":"13486:9:20"},{"kind":"number","nativeSrc":"13497:2:20","nodeType":"YulLiteral","src":"13497:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13482:3:20","nodeType":"YulIdentifier","src":"13482:3:20"},"nativeSrc":"13482:18:20","nodeType":"YulFunctionCall","src":"13482:18:20"},"variableNames":[{"name":"tail","nativeSrc":"13474:4:20","nodeType":"YulIdentifier","src":"13474:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13554:6:20","nodeType":"YulIdentifier","src":"13554:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"13567:9:20","nodeType":"YulIdentifier","src":"13567:9:20"},{"kind":"number","nativeSrc":"13578:1:20","nodeType":"YulLiteral","src":"13578:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13563:3:20","nodeType":"YulIdentifier","src":"13563:3:20"},"nativeSrc":"13563:17:20","nodeType":"YulFunctionCall","src":"13563:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13510:43:20","nodeType":"YulIdentifier","src":"13510:43:20"},"nativeSrc":"13510:71:20","nodeType":"YulFunctionCall","src":"13510:71:20"},"nativeSrc":"13510:71:20","nodeType":"YulExpressionStatement","src":"13510:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"13366:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13436:9:20","nodeType":"YulTypedName","src":"13436:9:20","type":""},{"name":"value0","nativeSrc":"13448:6:20","nodeType":"YulTypedName","src":"13448:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13459:4:20","nodeType":"YulTypedName","src":"13459:4:20","type":""}],"src":"13366:222:20"},{"body":{"nativeSrc":"13622:152:20","nodeType":"YulBlock","src":"13622:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13639:1:20","nodeType":"YulLiteral","src":"13639:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"13642:77:20","nodeType":"YulLiteral","src":"13642:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13632:6:20","nodeType":"YulIdentifier","src":"13632:6:20"},"nativeSrc":"13632:88:20","nodeType":"YulFunctionCall","src":"13632:88:20"},"nativeSrc":"13632:88:20","nodeType":"YulExpressionStatement","src":"13632:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13736:1:20","nodeType":"YulLiteral","src":"13736:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"13739:4:20","nodeType":"YulLiteral","src":"13739:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13729:6:20","nodeType":"YulIdentifier","src":"13729:6:20"},"nativeSrc":"13729:15:20","nodeType":"YulFunctionCall","src":"13729:15:20"},"nativeSrc":"13729:15:20","nodeType":"YulExpressionStatement","src":"13729:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13760:1:20","nodeType":"YulLiteral","src":"13760:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"13763:4:20","nodeType":"YulLiteral","src":"13763:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13753:6:20","nodeType":"YulIdentifier","src":"13753:6:20"},"nativeSrc":"13753:15:20","nodeType":"YulFunctionCall","src":"13753:15:20"},"nativeSrc":"13753:15:20","nodeType":"YulExpressionStatement","src":"13753:15:20"}]},"name":"panic_error_0x11","nativeSrc":"13594:180:20","nodeType":"YulFunctionDefinition","src":"13594:180:20"},{"body":{"nativeSrc":"13824:147:20","nodeType":"YulBlock","src":"13824:147:20","statements":[{"nativeSrc":"13834:25:20","nodeType":"YulAssignment","src":"13834:25:20","value":{"arguments":[{"name":"x","nativeSrc":"13857:1:20","nodeType":"YulIdentifier","src":"13857:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13839:17:20","nodeType":"YulIdentifier","src":"13839:17:20"},"nativeSrc":"13839:20:20","nodeType":"YulFunctionCall","src":"13839:20:20"},"variableNames":[{"name":"x","nativeSrc":"13834:1:20","nodeType":"YulIdentifier","src":"13834:1:20"}]},{"nativeSrc":"13868:25:20","nodeType":"YulAssignment","src":"13868:25:20","value":{"arguments":[{"name":"y","nativeSrc":"13891:1:20","nodeType":"YulIdentifier","src":"13891:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13873:17:20","nodeType":"YulIdentifier","src":"13873:17:20"},"nativeSrc":"13873:20:20","nodeType":"YulFunctionCall","src":"13873:20:20"},"variableNames":[{"name":"y","nativeSrc":"13868:1:20","nodeType":"YulIdentifier","src":"13868:1:20"}]},{"nativeSrc":"13902:16:20","nodeType":"YulAssignment","src":"13902:16:20","value":{"arguments":[{"name":"x","nativeSrc":"13913:1:20","nodeType":"YulIdentifier","src":"13913:1:20"},{"name":"y","nativeSrc":"13916:1:20","nodeType":"YulIdentifier","src":"13916:1:20"}],"functionName":{"name":"add","nativeSrc":"13909:3:20","nodeType":"YulIdentifier","src":"13909:3:20"},"nativeSrc":"13909:9:20","nodeType":"YulFunctionCall","src":"13909:9:20"},"variableNames":[{"name":"sum","nativeSrc":"13902:3:20","nodeType":"YulIdentifier","src":"13902:3:20"}]},{"body":{"nativeSrc":"13942:22:20","nodeType":"YulBlock","src":"13942:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13944:16:20","nodeType":"YulIdentifier","src":"13944:16:20"},"nativeSrc":"13944:18:20","nodeType":"YulFunctionCall","src":"13944:18:20"},"nativeSrc":"13944:18:20","nodeType":"YulExpressionStatement","src":"13944:18:20"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13934:1:20","nodeType":"YulIdentifier","src":"13934:1:20"},{"name":"sum","nativeSrc":"13937:3:20","nodeType":"YulIdentifier","src":"13937:3:20"}],"functionName":{"name":"gt","nativeSrc":"13931:2:20","nodeType":"YulIdentifier","src":"13931:2:20"},"nativeSrc":"13931:10:20","nodeType":"YulFunctionCall","src":"13931:10:20"},"nativeSrc":"13928:36:20","nodeType":"YulIf","src":"13928:36:20"}]},"name":"checked_add_t_uint256","nativeSrc":"13780:191:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13811:1:20","nodeType":"YulTypedName","src":"13811:1:20","type":""},{"name":"y","nativeSrc":"13814:1:20","nodeType":"YulTypedName","src":"13814:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13820:3:20","nodeType":"YulTypedName","src":"13820:3:20","type":""}],"src":"13780:191:20"},{"body":{"nativeSrc":"14187:454:20","nodeType":"YulBlock","src":"14187:454:20","statements":[{"nativeSrc":"14197:27:20","nodeType":"YulAssignment","src":"14197:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"14209:9:20","nodeType":"YulIdentifier","src":"14209:9:20"},{"kind":"number","nativeSrc":"14220:3:20","nodeType":"YulLiteral","src":"14220:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"14205:3:20","nodeType":"YulIdentifier","src":"14205:3:20"},"nativeSrc":"14205:19:20","nodeType":"YulFunctionCall","src":"14205:19:20"},"variableNames":[{"name":"tail","nativeSrc":"14197:4:20","nodeType":"YulIdentifier","src":"14197:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14278:6:20","nodeType":"YulIdentifier","src":"14278:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"14291:9:20","nodeType":"YulIdentifier","src":"14291:9:20"},{"kind":"number","nativeSrc":"14302:1:20","nodeType":"YulLiteral","src":"14302:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14287:3:20","nodeType":"YulIdentifier","src":"14287:3:20"},"nativeSrc":"14287:17:20","nodeType":"YulFunctionCall","src":"14287:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14234:43:20","nodeType":"YulIdentifier","src":"14234:43:20"},"nativeSrc":"14234:71:20","nodeType":"YulFunctionCall","src":"14234:71:20"},"nativeSrc":"14234:71:20","nodeType":"YulExpressionStatement","src":"14234:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14359:6:20","nodeType":"YulIdentifier","src":"14359:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"14372:9:20","nodeType":"YulIdentifier","src":"14372:9:20"},{"kind":"number","nativeSrc":"14383:2:20","nodeType":"YulLiteral","src":"14383:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14368:3:20","nodeType":"YulIdentifier","src":"14368:3:20"},"nativeSrc":"14368:18:20","nodeType":"YulFunctionCall","src":"14368:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14315:43:20","nodeType":"YulIdentifier","src":"14315:43:20"},"nativeSrc":"14315:72:20","nodeType":"YulFunctionCall","src":"14315:72:20"},"nativeSrc":"14315:72:20","nodeType":"YulExpressionStatement","src":"14315:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14441:6:20","nodeType":"YulIdentifier","src":"14441:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"14454:9:20","nodeType":"YulIdentifier","src":"14454:9:20"},{"kind":"number","nativeSrc":"14465:2:20","nodeType":"YulLiteral","src":"14465:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14450:3:20","nodeType":"YulIdentifier","src":"14450:3:20"},"nativeSrc":"14450:18:20","nodeType":"YulFunctionCall","src":"14450:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14397:43:20","nodeType":"YulIdentifier","src":"14397:43:20"},"nativeSrc":"14397:72:20","nodeType":"YulFunctionCall","src":"14397:72:20"},"nativeSrc":"14397:72:20","nodeType":"YulExpressionStatement","src":"14397:72:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"14523:6:20","nodeType":"YulIdentifier","src":"14523:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"14536:9:20","nodeType":"YulIdentifier","src":"14536:9:20"},{"kind":"number","nativeSrc":"14547:2:20","nodeType":"YulLiteral","src":"14547:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14532:3:20","nodeType":"YulIdentifier","src":"14532:3:20"},"nativeSrc":"14532:18:20","nodeType":"YulFunctionCall","src":"14532:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14479:43:20","nodeType":"YulIdentifier","src":"14479:43:20"},"nativeSrc":"14479:72:20","nodeType":"YulFunctionCall","src":"14479:72:20"},"nativeSrc":"14479:72:20","nodeType":"YulExpressionStatement","src":"14479:72:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"14605:6:20","nodeType":"YulIdentifier","src":"14605:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"14618:9:20","nodeType":"YulIdentifier","src":"14618:9:20"},{"kind":"number","nativeSrc":"14629:3:20","nodeType":"YulLiteral","src":"14629:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14614:3:20","nodeType":"YulIdentifier","src":"14614:3:20"},"nativeSrc":"14614:19:20","nodeType":"YulFunctionCall","src":"14614:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14561:43:20","nodeType":"YulIdentifier","src":"14561:43:20"},"nativeSrc":"14561:73:20","nodeType":"YulFunctionCall","src":"14561:73:20"},"nativeSrc":"14561:73:20","nodeType":"YulExpressionStatement","src":"14561:73:20"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"13977:664:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14127:9:20","nodeType":"YulTypedName","src":"14127:9:20","type":""},{"name":"value4","nativeSrc":"14139:6:20","nodeType":"YulTypedName","src":"14139:6:20","type":""},{"name":"value3","nativeSrc":"14147:6:20","nodeType":"YulTypedName","src":"14147:6:20","type":""},{"name":"value2","nativeSrc":"14155:6:20","nodeType":"YulTypedName","src":"14155:6:20","type":""},{"name":"value1","nativeSrc":"14163:6:20","nodeType":"YulTypedName","src":"14163:6:20","type":""},{"name":"value0","nativeSrc":"14171:6:20","nodeType":"YulTypedName","src":"14171:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14182:4:20","nodeType":"YulTypedName","src":"14182:4:20","type":""}],"src":"13977:664:20"},{"body":{"nativeSrc":"14825:367:20","nodeType":"YulBlock","src":"14825:367:20","statements":[{"nativeSrc":"14835:27:20","nodeType":"YulAssignment","src":"14835:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"14847:9:20","nodeType":"YulIdentifier","src":"14847:9:20"},{"kind":"number","nativeSrc":"14858:3:20","nodeType":"YulLiteral","src":"14858:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14843:3:20","nodeType":"YulIdentifier","src":"14843:3:20"},"nativeSrc":"14843:19:20","nodeType":"YulFunctionCall","src":"14843:19:20"},"variableNames":[{"name":"tail","nativeSrc":"14835:4:20","nodeType":"YulIdentifier","src":"14835:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14916:6:20","nodeType":"YulIdentifier","src":"14916:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"14929:9:20","nodeType":"YulIdentifier","src":"14929:9:20"},{"kind":"number","nativeSrc":"14940:1:20","nodeType":"YulLiteral","src":"14940:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14925:3:20","nodeType":"YulIdentifier","src":"14925:3:20"},"nativeSrc":"14925:17:20","nodeType":"YulFunctionCall","src":"14925:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14872:43:20","nodeType":"YulIdentifier","src":"14872:43:20"},"nativeSrc":"14872:71:20","nodeType":"YulFunctionCall","src":"14872:71:20"},"nativeSrc":"14872:71:20","nodeType":"YulExpressionStatement","src":"14872:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14993:6:20","nodeType":"YulIdentifier","src":"14993:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15006:9:20","nodeType":"YulIdentifier","src":"15006:9:20"},{"kind":"number","nativeSrc":"15017:2:20","nodeType":"YulLiteral","src":"15017:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15002:3:20","nodeType":"YulIdentifier","src":"15002:3:20"},"nativeSrc":"15002:18:20","nodeType":"YulFunctionCall","src":"15002:18:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"14953:39:20","nodeType":"YulIdentifier","src":"14953:39:20"},"nativeSrc":"14953:68:20","nodeType":"YulFunctionCall","src":"14953:68:20"},"nativeSrc":"14953:68:20","nodeType":"YulExpressionStatement","src":"14953:68:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15075:6:20","nodeType":"YulIdentifier","src":"15075:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15088:9:20","nodeType":"YulIdentifier","src":"15088:9:20"},{"kind":"number","nativeSrc":"15099:2:20","nodeType":"YulLiteral","src":"15099:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15084:3:20","nodeType":"YulIdentifier","src":"15084:3:20"},"nativeSrc":"15084:18:20","nodeType":"YulFunctionCall","src":"15084:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15031:43:20","nodeType":"YulIdentifier","src":"15031:43:20"},"nativeSrc":"15031:72:20","nodeType":"YulFunctionCall","src":"15031:72:20"},"nativeSrc":"15031:72:20","nodeType":"YulExpressionStatement","src":"15031:72:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15157:6:20","nodeType":"YulIdentifier","src":"15157:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15170:9:20","nodeType":"YulIdentifier","src":"15170:9:20"},{"kind":"number","nativeSrc":"15181:2:20","nodeType":"YulLiteral","src":"15181:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15166:3:20","nodeType":"YulIdentifier","src":"15166:3:20"},"nativeSrc":"15166:18:20","nodeType":"YulFunctionCall","src":"15166:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15113:43:20","nodeType":"YulIdentifier","src":"15113:43:20"},"nativeSrc":"15113:72:20","nodeType":"YulFunctionCall","src":"15113:72:20"},"nativeSrc":"15113:72:20","nodeType":"YulExpressionStatement","src":"15113:72:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"14647:545:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14773:9:20","nodeType":"YulTypedName","src":"14773:9:20","type":""},{"name":"value3","nativeSrc":"14785:6:20","nodeType":"YulTypedName","src":"14785:6:20","type":""},{"name":"value2","nativeSrc":"14793:6:20","nodeType":"YulTypedName","src":"14793:6:20","type":""},{"name":"value1","nativeSrc":"14801:6:20","nodeType":"YulTypedName","src":"14801:6:20","type":""},{"name":"value0","nativeSrc":"14809:6:20","nodeType":"YulTypedName","src":"14809:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14820:4:20","nodeType":"YulTypedName","src":"14820:4:20","type":""}],"src":"14647:545:20"},{"body":{"nativeSrc":"15226:152:20","nodeType":"YulBlock","src":"15226:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15243:1:20","nodeType":"YulLiteral","src":"15243:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"15246:77:20","nodeType":"YulLiteral","src":"15246:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15236:6:20","nodeType":"YulIdentifier","src":"15236:6:20"},"nativeSrc":"15236:88:20","nodeType":"YulFunctionCall","src":"15236:88:20"},"nativeSrc":"15236:88:20","nodeType":"YulExpressionStatement","src":"15236:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15340:1:20","nodeType":"YulLiteral","src":"15340:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"15343:4:20","nodeType":"YulLiteral","src":"15343:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"15333:6:20","nodeType":"YulIdentifier","src":"15333:6:20"},"nativeSrc":"15333:15:20","nodeType":"YulFunctionCall","src":"15333:15:20"},"nativeSrc":"15333:15:20","nodeType":"YulExpressionStatement","src":"15333:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15364:1:20","nodeType":"YulLiteral","src":"15364:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"15367:4:20","nodeType":"YulLiteral","src":"15367:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15357:6:20","nodeType":"YulIdentifier","src":"15357:6:20"},"nativeSrc":"15357:15:20","nodeType":"YulFunctionCall","src":"15357:15:20"},"nativeSrc":"15357:15:20","nodeType":"YulExpressionStatement","src":"15357:15:20"}]},"name":"panic_error_0x21","nativeSrc":"15198:180:20","nodeType":"YulFunctionDefinition","src":"15198:180:20"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2011":[{"length":32,"start":2391}],"2013":[{"length":32,"start":2350}],"2015":[{"length":32,"start":2264}],"2017":[{"length":32,"start":3821}],"2019":[{"length":32,"start":3854}],"2022":[{"length":32,"start":2522}],"2025":[{"length":32,"start":2581}]},"linkReferences":{},"object":"608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b411461022d578063a9059cbb1461024b578063d505accf1461027b578063dd62ed3e14610297576100cd565b806370a08231146101a95780637ecebe00146101d957806384b0196e14610209576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d578063313ce5671461016d5780633644e5151461018b575b5f80fd5b6100d96102c7565b6040516100e691906113de565b60405180910390f35b6101096004803603810190610104919061148f565b610357565b60405161011691906114e7565b60405180910390f35b610127610379565b604051610134919061150f565b60405180910390f35b61015760048036038101906101529190611528565b610382565b60405161016491906114e7565b60405180910390f35b6101756103b0565b6040516101829190611593565b60405180910390f35b6101936103b8565b6040516101a091906115c4565b60405180910390f35b6101c360048036038101906101be91906115dd565b6103c6565b6040516101d0919061150f565b60405180910390f35b6101f360048036038101906101ee91906115dd565b61040b565b604051610200919061150f565b60405180910390f35b61021161041c565b6040516102249796959493929190611708565b60405180910390f35b6102356104c1565b60405161024291906113de565b60405180910390f35b6102656004803603810190610260919061148f565b610551565b60405161027291906114e7565b60405180910390f35b610295600480360381019061029091906117de565b610573565b005b6102b160048036038101906102ac919061187b565b6106b8565b6040516102be919061150f565b60405180910390f35b6060600380546102d6906118e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610302906118e6565b801561034d5780601f106103245761010080835404028352916020019161034d565b820191905f5260205f20905b81548152906001019060200180831161033057829003601f168201915b5050505050905090565b5f8061036161073a565b905061036e818585610741565b600191505092915050565b5f600254905090565b5f8061038c61073a565b9050610399858285610753565b6103a48585856107e5565b60019150509392505050565b5f6012905090565b5f6103c16108d5565b905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6104158261098b565b9050919050565b5f6060805f805f606061042d6109d1565b610435610a0c565b46305f801b5f67ffffffffffffffff81111561045457610453611916565b5b6040519080825280602002602001820160405280156104825781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6060600480546104d0906118e6565b80601f01602080910402602001604051908101604052809291908181526020018280546104fc906118e6565b80156105475780601f1061051e57610100808354040283529160200191610547565b820191905f5260205f20905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b5f8061055b61073a565b90506105688185856107e5565b600191505092915050565b834211156105b857836040517f627913020000000000000000000000000000000000000000000000000000000081526004016105af919061150f565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105e68c610a47565b896040516020016105fc96959493929190611943565b6040516020818303038152906040528051906020012090505f61061e82610a9a565b90505f61062d82878787610ab3565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106a157808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016106989291906119a2565b60405180910390fd5b6106ac8a8a8a610741565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61074e8383836001610ae1565b505050565b5f61075e84846106b8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107df57818110156107d0578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107c7939291906119c9565b60405180910390fd5b6107de84848484035f610ae1565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610855575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161084c91906119fe565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108c5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108bc91906119fe565b60405180910390fd5b6108d0838383610cb0565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561095057507f000000000000000000000000000000000000000000000000000000000000000046145b1561097d577f00000000000000000000000000000000000000000000000000000000000000009050610988565b610985610ec9565b90505b90565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610a0760057f0000000000000000000000000000000000000000000000000000000000000000610f5e90919063ffffffff16565b905090565b6060610a4260067f0000000000000000000000000000000000000000000000000000000000000000610f5e90919063ffffffff16565b905090565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610aac610aa66108d5565b8361100b565b9050919050565b5f805f80610ac38888888861104b565b925092509250610ad38282611132565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b51575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b4891906119fe565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc1575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bb891906119fe565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610caa578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ca1919061150f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d00578060025f828254610cf49190611a44565b92505081905550610dce565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d89578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d80939291906119c9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e15578060025f8282540392505081905550610e5f565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ebc919061150f565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610f43959493929190611a77565b60405160208183030381529060405280519060200120905090565b606060ff5f1b8314610f7a57610f7383611294565b9050611005565b818054610f86906118e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb2906118e6565b8015610ffd5780601f10610fd457610100808354040283529160200191610ffd565b820191905f5260205f20905b815481529060010190602001808311610fe057829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611087575f600385925092509250611128565b5f6001888888886040515f81526020016040526040516110aa9493929190611ac8565b6020604051602081039080840390855afa1580156110ca573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361111b575f60015f801b93509350935050611128565b805f805f1b935093509350505b9450945094915050565b5f600381111561114557611144611b0b565b5b82600381111561115857611157611b0b565b5b0315611290576001600381111561117257611171611b0b565b5b82600381111561118557611184611b0b565b5b036111bc576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156111d0576111cf611b0b565b5b8260038111156111e3576111e2611b0b565b5b0361122757805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161121e919061150f565b60405180910390fd5b60038081111561123a57611239611b0b565b5b82600381111561124d5761124c611b0b565b5b0361128f57806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161128691906115c4565b60405180910390fd5b5b5050565b60605f6112a083611306565b90505f602067ffffffffffffffff8111156112be576112bd611916565b5b6040519080825280601f01601f1916602001820160405280156112f05781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f81111561134b576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561138b578082015181840152602081019050611370565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6113b082611354565b6113ba818561135e565b93506113ca81856020860161136e565b6113d381611396565b840191505092915050565b5f6020820190508181035f8301526113f681846113a6565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61142b82611402565b9050919050565b61143b81611421565b8114611445575f80fd5b50565b5f8135905061145681611432565b92915050565b5f819050919050565b61146e8161145c565b8114611478575f80fd5b50565b5f8135905061148981611465565b92915050565b5f80604083850312156114a5576114a46113fe565b5b5f6114b285828601611448565b92505060206114c38582860161147b565b9150509250929050565b5f8115159050919050565b6114e1816114cd565b82525050565b5f6020820190506114fa5f8301846114d8565b92915050565b6115098161145c565b82525050565b5f6020820190506115225f830184611500565b92915050565b5f805f6060848603121561153f5761153e6113fe565b5b5f61154c86828701611448565b935050602061155d86828701611448565b925050604061156e8682870161147b565b9150509250925092565b5f60ff82169050919050565b61158d81611578565b82525050565b5f6020820190506115a65f830184611584565b92915050565b5f819050919050565b6115be816115ac565b82525050565b5f6020820190506115d75f8301846115b5565b92915050565b5f602082840312156115f2576115f16113fe565b5b5f6115ff84828501611448565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61163c81611608565b82525050565b61164b81611421565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116838161145c565b82525050565b5f611694838361167a565b60208301905092915050565b5f602082019050919050565b5f6116b682611651565b6116c0818561165b565b93506116cb8361166b565b805f5b838110156116fb5781516116e28882611689565b97506116ed836116a0565b9250506001810190506116ce565b5085935050505092915050565b5f60e08201905061171b5f83018a611633565b818103602083015261172d81896113a6565b9050818103604083015261174181886113a6565b90506117506060830187611500565b61175d6080830186611642565b61176a60a08301856115b5565b81810360c083015261177c81846116ac565b905098975050505050505050565b61179381611578565b811461179d575f80fd5b50565b5f813590506117ae8161178a565b92915050565b6117bd816115ac565b81146117c7575f80fd5b50565b5f813590506117d8816117b4565b92915050565b5f805f805f805f60e0888a0312156117f9576117f86113fe565b5b5f6118068a828b01611448565b97505060206118178a828b01611448565b96505060406118288a828b0161147b565b95505060606118398a828b0161147b565b945050608061184a8a828b016117a0565b93505060a061185b8a828b016117ca565b92505060c061186c8a828b016117ca565b91505092959891949750929550565b5f8060408385031215611891576118906113fe565b5b5f61189e85828601611448565b92505060206118af85828601611448565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806118fd57607f821691505b6020821081036119105761190f6118b9565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c0820190506119565f8301896115b5565b6119636020830188611642565b6119706040830187611642565b61197d6060830186611500565b61198a6080830185611500565b61199760a0830184611500565b979650505050505050565b5f6040820190506119b55f830185611642565b6119c26020830184611642565b9392505050565b5f6060820190506119dc5f830186611642565b6119e96020830185611500565b6119f66040830184611500565b949350505050565b5f602082019050611a115f830184611642565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a4e8261145c565b9150611a598361145c565b9250828201905080821115611a7157611a70611a17565b5b92915050565b5f60a082019050611a8a5f8301886115b5565b611a9760208301876115b5565b611aa460408301866115b5565b611ab16060830185611500565b611abe6080830184611642565b9695505050505050565b5f608082019050611adb5f8301876115b5565b611ae86020830186611584565b611af560408301856115b5565b611b0260608301846115b5565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220b1e2329f8e97a243e577bfb3fe8122413ff93c6d3c83218cfa3547be7f51b21464736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x209 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D6 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x302 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x324 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x34D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x330 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x361 PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x36E DUP2 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x38C PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP6 DUP3 DUP6 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x3A4 DUP6 DUP6 DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3C1 PUSH2 0x8D5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x415 DUP3 PUSH2 0x98B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x42D PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x435 PUSH2 0xA0C JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x454 JUMPI PUSH2 0x453 PUSH2 0x1916 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x482 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4D0 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FC SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x55B PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x568 DUP2 DUP6 DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x5B8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x5E6 DUP13 PUSH2 0xA47 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5FC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x61E DUP3 PUSH2 0xA9A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x62D DUP3 DUP8 DUP8 DUP8 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A1 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP3 SWAP2 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AC DUP11 DUP11 DUP11 PUSH2 0x741 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x74E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75E DUP5 DUP5 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7D0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x855 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D0 DUP4 DUP4 DUP4 PUSH2 0xCB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x950 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x97D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x988 JUMP JUMPDEST PUSH2 0x985 PUSH2 0xEC9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA07 PUSH1 0x5 PUSH32 0x0 PUSH2 0xF5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA42 PUSH1 0x6 PUSH32 0x0 PUSH2 0xF5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAC PUSH2 0xAA6 PUSH2 0x8D5 JUMP JUMPDEST DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xAC3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x104B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xAD3 DUP3 DUP3 PUSH2 0x1132 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB51 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD00 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x1A44 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDCE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD89 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE5F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF43 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0xF7A JUMPI PUSH2 0xF73 DUP4 PUSH2 0x1294 JUMP JUMPDEST SWAP1 POP PUSH2 0x1005 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xF86 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFB2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFFD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFD4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFFD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFE0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1087 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1128 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x10AA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x111B JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1128 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1290 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1185 JUMPI PUSH2 0x1184 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11BC JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11CF PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11E2 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1227 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121E SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x128F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x12A0 DUP4 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x1916 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12F0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x138B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1370 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13B0 DUP3 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x13BA DUP2 DUP6 PUSH2 0x135E JUMP JUMPDEST SWAP4 POP PUSH2 0x13CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x136E JUMP JUMPDEST PUSH2 0x13D3 DUP2 PUSH2 0x1396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F6 DUP2 DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x142B DUP3 PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP2 EQ PUSH2 0x1445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1456 DUP2 PUSH2 0x1432 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146E DUP2 PUSH2 0x145C JUMP JUMPDEST DUP2 EQ PUSH2 0x1478 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1489 DUP2 PUSH2 0x1465 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C3 DUP6 DUP3 DUP7 ADD PUSH2 0x147B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E1 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FA PUSH0 DUP4 ADD DUP5 PUSH2 0x14D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1509 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1522 PUSH0 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x153F JUMPI PUSH2 0x153E PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154C DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x155D DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x156E DUP7 DUP3 DUP8 ADD PUSH2 0x147B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158D DUP2 PUSH2 0x1578 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BE DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15F1 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15FF DUP5 DUP3 DUP6 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x1608 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x164B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1683 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 DUP4 DUP4 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B6 DUP3 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x16C0 DUP2 DUP6 PUSH2 0x165B JUMP JUMPDEST SWAP4 POP PUSH2 0x16CB DUP4 PUSH2 0x166B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16FB JUMPI DUP2 MLOAD PUSH2 0x16E2 DUP9 DUP3 PUSH2 0x1689 JUMP JUMPDEST SWAP8 POP PUSH2 0x16ED DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH0 DUP4 ADD DUP11 PUSH2 0x1633 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x172D DUP2 DUP10 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1741 DUP2 DUP9 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1750 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x175D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x176A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 DUP5 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1793 DUP2 PUSH2 0x1578 JUMP JUMPDEST DUP2 EQ PUSH2 0x179D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AE DUP2 PUSH2 0x178A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP2 EQ PUSH2 0x17C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D8 DUP2 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x17F9 JUMPI PUSH2 0x17F8 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1806 DUP11 DUP3 DUP12 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1817 DUP11 DUP3 DUP12 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1828 DUP11 DUP3 DUP12 ADD PUSH2 0x147B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1839 DUP11 DUP3 DUP12 ADD PUSH2 0x147B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x184A DUP11 DUP3 DUP12 ADD PUSH2 0x17A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x185B DUP11 DUP3 DUP12 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x186C DUP11 DUP3 DUP12 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189E DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18AF DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x18B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1956 PUSH0 DUP4 ADD DUP10 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1963 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x1970 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x197D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x198A PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x1997 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19B5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x19C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19DC PUSH0 DUP4 ADD DUP7 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x19E9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x19F6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A11 PUSH0 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4E DUP3 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A59 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A70 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1A8A PUSH0 DUP4 ADD DUP9 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1A97 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AA4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AB1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x1ABE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1ADB PUSH0 DUP4 ADD DUP8 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AE8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1584 JUMP JUMPDEST PUSH2 0x1AF5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE2 ORIGIN SWAP16 DUP15 SWAP8 LOG2 NUMBER 0xE5 PUSH24 0xBFB3FE8122413FF93C6D3C83218CFA3547BE7F51B2146473 PUSH16 0x6C634300081500330000000000000000 ","sourceMap":"188:171:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2406:143:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:13;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:4:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2406:143:4:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:13:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1680:672:4:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:13:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;538:107:8:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:13:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:8:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:13:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:12:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4113:179:13:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:9:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:14:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:12:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:9:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:149::-;5659:7;5699:66;5692:5;5688:78;5677:89;;5623:149;;;:::o;5778:115::-;5863:23;5880:5;5863:23;:::i;:::-;5858:3;5851:36;5778:115;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:114::-;6090:6;6124:5;6118:12;6108:22;;6023:114;;;:::o;6143:184::-;6242:11;6276:6;6271:3;6264:19;6316:4;6311:3;6307:14;6292:29;;6143:184;;;;:::o;6333:132::-;6400:4;6423:3;6415:11;;6453:4;6448:3;6444:14;6436:22;;6333:132;;;:::o;6471:108::-;6548:24;6566:5;6548:24;:::i;:::-;6543:3;6536:37;6471:108;;:::o;6585:179::-;6654:10;6675:46;6717:3;6709:6;6675:46;:::i;:::-;6753:4;6748:3;6744:14;6730:28;;6585:179;;;;:::o;6770:113::-;6840:4;6872;6867:3;6863:14;6855:22;;6770:113;;;:::o;6919:732::-;7038:3;7067:54;7115:5;7067:54;:::i;:::-;7137:86;7216:6;7211:3;7137:86;:::i;:::-;7130:93;;7247:56;7297:5;7247:56;:::i;:::-;7326:7;7357:1;7342:284;7367:6;7364:1;7361:13;7342:284;;;7443:6;7437:13;7470:63;7529:3;7514:13;7470:63;:::i;:::-;7463:70;;7556:60;7609:6;7556:60;:::i;:::-;7546:70;;7402:224;7389:1;7386;7382:9;7377:14;;7342:284;;;7346:14;7642:3;7635:10;;7043:608;;;6919:732;;;;:::o;7657:1215::-;8006:4;8044:3;8033:9;8029:19;8021:27;;8058:69;8124:1;8113:9;8109:17;8100:6;8058:69;:::i;:::-;8174:9;8168:4;8164:20;8159:2;8148:9;8144:18;8137:48;8202:78;8275:4;8266:6;8202:78;:::i;:::-;8194:86;;8327:9;8321:4;8317:20;8312:2;8301:9;8297:18;8290:48;8355:78;8428:4;8419:6;8355:78;:::i;:::-;8347:86;;8443:72;8511:2;8500:9;8496:18;8487:6;8443:72;:::i;:::-;8525:73;8593:3;8582:9;8578:19;8569:6;8525:73;:::i;:::-;8608;8676:3;8665:9;8661:19;8652:6;8608:73;:::i;:::-;8729:9;8723:4;8719:20;8713:3;8702:9;8698:19;8691:49;8757:108;8860:4;8851:6;8757:108;:::i;:::-;8749:116;;7657:1215;;;;;;;;;;:::o;8878:118::-;8949:22;8965:5;8949:22;:::i;:::-;8942:5;8939:33;8929:61;;8986:1;8983;8976:12;8929:61;8878:118;:::o;9002:135::-;9046:5;9084:6;9071:20;9062:29;;9100:31;9125:5;9100:31;:::i;:::-;9002:135;;;;:::o;9143:122::-;9216:24;9234:5;9216:24;:::i;:::-;9209:5;9206:35;9196:63;;9255:1;9252;9245:12;9196:63;9143:122;:::o;9271:139::-;9317:5;9355:6;9342:20;9333:29;;9371:33;9398:5;9371:33;:::i;:::-;9271:139;;;;:::o;9416:1199::-;9527:6;9535;9543;9551;9559;9567;9575;9624:3;9612:9;9603:7;9599:23;9595:33;9592:120;;;9631:79;;:::i;:::-;9592:120;9751:1;9776:53;9821:7;9812:6;9801:9;9797:22;9776:53;:::i;:::-;9766:63;;9722:117;9878:2;9904:53;9949:7;9940:6;9929:9;9925:22;9904:53;:::i;:::-;9894:63;;9849:118;10006:2;10032:53;10077:7;10068:6;10057:9;10053:22;10032:53;:::i;:::-;10022:63;;9977:118;10134:2;10160:53;10205:7;10196:6;10185:9;10181:22;10160:53;:::i;:::-;10150:63;;10105:118;10262:3;10289:51;10332:7;10323:6;10312:9;10308:22;10289:51;:::i;:::-;10279:61;;10233:117;10389:3;10416:53;10461:7;10452:6;10441:9;10437:22;10416:53;:::i;:::-;10406:63;;10360:119;10518:3;10545:53;10590:7;10581:6;10570:9;10566:22;10545:53;:::i;:::-;10535:63;;10489:119;9416:1199;;;;;;;;;;:::o;10621:474::-;10689:6;10697;10746:2;10734:9;10725:7;10721:23;10717:32;10714:119;;;10752:79;;:::i;:::-;10714:119;10872:1;10897:53;10942:7;10933:6;10922:9;10918:22;10897:53;:::i;:::-;10887:63;;10843:117;10999:2;11025:53;11070:7;11061:6;11050:9;11046:22;11025:53;:::i;:::-;11015:63;;10970:118;10621:474;;;;;:::o;11101:180::-;11149:77;11146:1;11139:88;11246:4;11243:1;11236:15;11270:4;11267:1;11260:15;11287:320;11331:6;11368:1;11362:4;11358:12;11348:22;;11415:1;11409:4;11405:12;11436:18;11426:81;;11492:4;11484:6;11480:17;11470:27;;11426:81;11554:2;11546:6;11543:14;11523:18;11520:38;11517:84;;11573:18;;:::i;:::-;11517:84;11338:269;11287:320;;;:::o;11613:180::-;11661:77;11658:1;11651:88;11758:4;11755:1;11748:15;11782:4;11779:1;11772:15;11799:775;12032:4;12070:3;12059:9;12055:19;12047:27;;12084:71;12152:1;12141:9;12137:17;12128:6;12084:71;:::i;:::-;12165:72;12233:2;12222:9;12218:18;12209:6;12165:72;:::i;:::-;12247;12315:2;12304:9;12300:18;12291:6;12247:72;:::i;:::-;12329;12397:2;12386:9;12382:18;12373:6;12329:72;:::i;:::-;12411:73;12479:3;12468:9;12464:19;12455:6;12411:73;:::i;:::-;12494;12562:3;12551:9;12547:19;12538:6;12494:73;:::i;:::-;11799:775;;;;;;;;;:::o;12580:332::-;12701:4;12739:2;12728:9;12724:18;12716:26;;12752:71;12820:1;12809:9;12805:17;12796:6;12752:71;:::i;:::-;12833:72;12901:2;12890:9;12886:18;12877:6;12833:72;:::i;:::-;12580:332;;;;;:::o;12918:442::-;13067:4;13105:2;13094:9;13090:18;13082:26;;13118:71;13186:1;13175:9;13171:17;13162:6;13118:71;:::i;:::-;13199:72;13267:2;13256:9;13252:18;13243:6;13199:72;:::i;:::-;13281;13349:2;13338:9;13334:18;13325:6;13281:72;:::i;:::-;12918:442;;;;;;:::o;13366:222::-;13459:4;13497:2;13486:9;13482:18;13474:26;;13510:71;13578:1;13567:9;13563:17;13554:6;13510:71;:::i;:::-;13366:222;;;;:::o;13594:180::-;13642:77;13639:1;13632:88;13739:4;13736:1;13729:15;13763:4;13760:1;13753:15;13780:191;13820:3;13839:20;13857:1;13839:20;:::i;:::-;13834:25;;13873:20;13891:1;13873:20;:::i;:::-;13868:25;;13916:1;13913;13909:9;13902:16;;13937:3;13934:1;13931:10;13928:36;;;13944:18;;:::i;:::-;13928:36;13780:191;;;;:::o;13977:664::-;14182:4;14220:3;14209:9;14205:19;14197:27;;14234:71;14302:1;14291:9;14287:17;14278:6;14234:71;:::i;:::-;14315:72;14383:2;14372:9;14368:18;14359:6;14315:72;:::i;:::-;14397;14465:2;14454:9;14450:18;14441:6;14397:72;:::i;:::-;14479;14547:2;14536:9;14532:18;14523:6;14479:72;:::i;:::-;14561:73;14629:3;14618:9;14614:19;14605:6;14561:73;:::i;:::-;13977:664;;;;;;;;:::o;14647:545::-;14820:4;14858:3;14847:9;14843:19;14835:27;;14872:71;14940:1;14929:9;14925:17;14916:6;14872:71;:::i;:::-;14953:68;15017:2;15006:9;15002:18;14993:6;14953:68;:::i;:::-;15031:72;15099:2;15088:9;15084:18;15075:6;15031:72;:::i;:::-;15113;15181:2;15170:9;15166:18;15157:6;15113:72;:::i;:::-;14647:545;;;;;;;:::o;15198:180::-;15246:77;15243:1;15236:88;15343:4;15340:1;15333:15;15367:4;15364:1;15357:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VeGroww.sol\":\"VeGroww\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/VeGroww.sol\":{\"keccak256\":\"0x47055130d5f45d50d818303dbeb68a57fb1eb026838586a04e6cf3836cc59c07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6010dd2600ba0109ad6893fb50fcb7809005e81c358e4e6d2090d8d45d8a81cc\",\"dweb:/ipfs/QmWGEQXV5EkfZMD3c3KuyFEeCkJVeBSXwqbPtXtFuSTvaf\"]}},\"version\":1}"}}}}}